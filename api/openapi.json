{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "description": "Welcome to the Spot by NetApp OpenAPI Specification.\nHere you will find REST definitions for all Spot products and platform administration tasks.\n\nThe API is hosted at `https://api.spotinst.io` and requires Bearer Token\nAuthentication.\n\nFor more information on how to use the Spot platform, including user guides,\ndeveloper guides, concepts and tutorials see the external [Spot Documentation](https://docs.spot.io/).\n",
    "title": "Spot by NetApp API",
    "x-logo": {
      "url": "https://docs.spot.io/_media/images/spot.png",
      "altText": "SpotByNetAppLogo",
      "href": "https://docs.spot.io/api"
    },
    "contact": {
      "email": "support@spot.io"
    }
  },
  "externalDocs": {
    "url": "https://docs.spot.io/"
  },
  "servers": [
    {
      "url": "https://api.spotinst.io"
    }
  ],
  "security": [
    {
      "auth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "auth": {
        "description": "To generate bearer tokens and understand more about Spot by NetApp\nauthentication see the howto for\n[token creation](https://docs.spot.io/administration/api/create-api-token)\non the Spot Help site.\n\n### Organizations and Accounts\n\nEach Spot account is assigned to an organization and a set of environment Accounts.\nAn account is then linked to a specific cloud provider account.\n\nSpot accounts are given an ID in the format `act-123abcd` that is sent as a query parameter while performing API calls.\n\nTo locate the account ID navigate to Settings -> Account in the Spot console.\n\n### Organizations with a Single Account\nEach API call you make can be used with or without the account ID.\n\n### Organizations with Multiple Accounts\nEach API call you make should be appended to the account ID. For example:\n\nGET `https://api.spotinst.io/aws/ec2/group?accountId=act-123de678`\nThis call will return the list of Elastigroups for the specific Account used.\n\n> NOTE: If no `accountId` is provided, the default (dldest) account for the Organization will be used.\n",
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Elastigroup AWS",
      "description": "Elastigroup for Amazon Web Services (AWS)",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup Azure Spot VMs",
      "description": "Elastigroup for Microsoft Azure",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup Azure Scale Set VMs",
      "description": "Elastigroup for Microsoft Azure Scale Set",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Elastigroup GCP",
      "description": "Elastigroup for Google Cloud",
      "externalDocs": {
        "description": "Elastigroup Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/"
      }
    },
    {
      "name": "Ocean AWS",
      "description": "Ocean - Serverless containers for Amazon Web Services (AWS)",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean ECS",
      "description": "Ocean - Serverless containers for Amazon Elastic Container Service (ECS)",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean GKE",
      "description": "Ocean - Serverless containers for for Google Kubernetes Engine",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean AKS",
      "description": "Ocean - Serverless containers for for Azure Kubernetes Service",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "Ocean On-Premise",
      "description": "Ocean On-Premise API - Understand cost drivers within you on-premise clusters and compare the costs to the Ocean Cloud.",
      "externalDocs": {
        "description": "Ocean Concepts and Tutorials",
        "url": "https://docs.spot.io/ocean/"
      }
    },
    {
      "name": "EMR Scaler",
      "description": "AWS EMR Scaler",
      "externalDocs": {
        "description": "AWS EMR Scaler Concepts and Tutorials",
        "url": "https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/"
      }
    },
    {
      "name": "Managed Instance AWS",
      "description": "Managed Instances are Spots solution for launching and managing a single compute instance.\nOn the AWS cloud, for a standard single instance workload, an On-Demand EC2 instance is launched.\nThe instance is expected to be highly available, easily manageable, and integrate well with additional services and monitoring tools.\nFor more information please review the concepts section.\n",
      "externalDocs": {
        "description": "Managed Instance for AWS Concepts and Tutorials",
        "url": "https://docs.spot.io/managed-instance/"
      }
    },
    {
      "name": "Create an API Token",
      "description": "* Please log in to the [Spot Console](https://console.spotinst.com) to create an API token. Navigate to `Settings` and select `API`.\n* The [Spot Console](https://console.spotinst.com) provides both permanent and temporary tokens. Select your preferred token type and click `Generate Token`.\n* Give your token a name and click `Generate`.\n> NOTE: Remember to keep your tokens secret; treat them just like passwords! They act on your behalf when interacting with the API. Do not share your personal access tokens with anyone outside your organization. Dont hard-code them into your programs; instead, opt to use them as environment variables. Please contact our support if youre concerned your token has been compromised.\n",
      "externalDocs": {
        "url": "https://docs.spot.io/administration/api/create-api-token"
      }
    },
    {
      "name": "Whitelist IPs",
      "description": "* Spot whitelist IPs are required for integrations to work as expected. The IP needs to be white-listed on the Master nodes of Rancher, HCS, Kubernetes, Chef, Nomad, and Docker Swarm. Make sure your white-list IPs are always up-to-date with the latest list.\n*  34.226.61.134/32\n",
      "externalDocs": {
        "url": "https://docs.spot.io/administration/api/whitelist-ips"
      }
    },
    {
      "name": "Spot Policy",
      "description": "Spots Latest Policy for AWS.\n* You can find and modify your Spot Policy in the AWS IAM Console.\n* For additional information and guide please see Updating the Spot Policy\n* You can restrict your Spot Policy using custom AWS IAM Condition Statements using this Guide.\n*  Make sure your policy is always up-to-date with the latest JSON\n",
      "externalDocs": {
        "url": "https://docs.spot.io/administration/api/spot-policy-in-aws"
      }
    },
    {
      "name": "Audit Service",
      "externalDocs": {
        "url": "https://docs.spot.io/api/#tag/Audit-Service"
      }
    },
    {
      "name": "Health Check Service",
      "externalDocs": {
        "url": "https://docs.spot.io/elastigroup/tools-integrations/custom-health-check-service"
      }
    },
    {
      "name": "Notifications Service",
      "description": "A Spot Notifications service enables you a fast, flexible, fully managed push notification service that lets you know about major events that happened in your Spot account.Ö¿ Spot Notifications makes it simple and cost-effective to get push notifications to your email address, HTTP, HTTPS or AWS SNS (Simple Notifications Service).\n"
    },
    {
      "name": "Insights Service"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Administration",
      "tags": [
        "Organizations",
        "Accounts"
      ]
    },
    {
      "name": "Ocean",
      "tags": [
        "Ocean AWS",
        "Ocean ECS",
        "Ocean GKE",
        "Ocean AKS",
        "Ocean On-Premise"
      ]
    },
    {
      "name": "Elastigroup",
      "tags": [
        "Elastigroup AWS",
        "Elastigroup AWS EMR Scaler",
        "Elastigroup GCP",
        "Elastigroup Azure Spot VMs",
        "Elastigroup Azure Scale Set VMs"
      ]
    },
    {
      "name": "Managed Instance",
      "tags": [
        "Managed Instance AWS"
      ]
    },
    {
      "name": "Services",
      "tags": [
        "Audit Service",
        "Health Check Service",
        "Notifications Service",
        "Insights Service"
      ]
    }
  ],
  "paths": {
    "/aws/ec2/group": {
      "summary": "Elastigroups for AWS",
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new AWS Elastigroup.\n\nThere are several third Party Integrations available, which can be activated based on your configuration, such as:\n* [Rancher Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/rancher)\n* [Route53 Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/route53)\n* [DockerSwarm Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/docker-swarm)\n* [ECS Elastigroup](https://docs.spot.io/elastigroup/features/amazon-ecs/elastigroup-for-ecs)\n* [Beanstalk Elastigroup](https://docs.spot.io/elastigroup/tools-integrations/elastic-beanstalk)\n\n\n  You can create a beanstalk elastigroup with the following steps:\n  * [Get the beanstalk configuration](https://docs.spot.io/api/#operation/elastigroupAwsGetBeanstalkConfiguration) to JSON format\n  * Modify required parameters and post the JSON as a body to create a new elastigroup\n",
        "operationId": "elastigroupAwsCreate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "AWS Elastigroup",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "description": "Elastigroup Configuration",
                        "required": [
                          "name",
                          "capacity"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "AWS Elastigroup Name\n",
                            "example": "my-Elastigroup"
                          },
                          "description": {
                            "type": "string",
                            "description": "Describe your AWS Elastigroup\n",
                            "example": "This Elastigroup is used for Development"
                          },
                          "region": {
                            "type": "string",
                            "description": "The AWS region your group will be created in.\n This parameter is required if you specify subnets (through compute.subnetIds).\n This parameter is optional if you specify Availability Zones (through compute.availabilityZones).\n",
                            "example": "use-east-1"
                          },
                          "capacity": {
                            "description": "Capacity Configuration",
                            "type": "object",
                            "title": "Elastigroup Capacity",
                            "required": [
                              "target",
                              "minimum",
                              "maximum",
                              "unit"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "description": "The number of instances to launch\n",
                                "example": 1
                              },
                              "minimum": {
                                "type": "integer",
                                "description": "The lower limit number of instances that you can scale down to\n",
                                "example": 0
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "The upper limit number of instances that you can scale up to\n",
                                "example": 10
                              },
                              "unit": {
                                "type": "string",
                                "enum": [
                                  "instance",
                                  "weight"
                                ],
                                "description": "The capacity unit to launch instances by.\nNote: for groups with integration to K8S / ECS weight option is not supported.\n",
                                "example": "instance"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "description": "Strategy",
                            "required": [
                              "availabilityVsCost"
                            ],
                            "properties": {
                              "risk": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100,
                                "example": 100,
                                "default": 0,
                                "description": "The percentage of Elastigroup that will run with spot market capacity\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "minimum": 0,
                                "example": 0,
                                "description": "Minimum number of instances that will always be on-demand\n"
                              },
                              "availabilityVsCost": {
                                "type": "string",
                                "enum": [
                                  "costOriented",
                                  "availabilityOriented",
                                  "balanced",
                                  "cheapest",
                                  "equalAzDistribution"
                                ],
                                "default": "balanced",
                                "description": "How Elastigroup determines which instances to add and replace.\n(please read this article before using [Equal AZ Instance Distribution](https://docs.spot.io/elastigroup-for-aws/concepts/general-concepts/equal-az-distribution))\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "When set to `true` Elastigroup will launch On Demand instances if no spot market is available\n"
                              },
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "description": "In case of any available Reserved Instances, Elastigroup will utilize them before purchasing Spot instances\n",
                                "example": false
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 120,
                                "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation\n"
                              },
                              "signals": {
                                "type": "array",
                                "description": "The signals defined for this group. For more information refer the below article: [Signals](https://docs.spot.io/elastigroup-for-aws/concepts/compute-concepts/using-signals-in-elastigroups)\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the signal defined for the group.\n",
                                      "enum": [
                                        "INSTANCE_READY",
                                        "INSTANCE_READY_TO_SHUTDOWN"
                                      ]
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "minimum": 60,
                                      "maximum": 1800,
                                      "description": "The timeout in seconds to hold the instance until a signal is sent.\nIf no signal is sent the instance will be replaced (INSTANCE_READY) or we will terminate the instance (INSTANCE_READY_TO_SHUTDOWN) after the timeout.\n",
                                      "default": 1800,
                                      "example": 120
                                    }
                                  }
                                }
                              },
                              "persistence": {
                                "type": "array",
                                "description": "You can register persistence (Stateful) recovery arguments\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "shouldPersistPrivateIp": {
                                      "type": "boolean",
                                      "description": "Should the instance maintain its private IP\n",
                                      "example": true
                                    },
                                    "shouldPersistRootDevice": {
                                      "type": "boolean",
                                      "description": "Should the instance maintain its root device volumes\n",
                                      "example": true
                                    },
                                    "shouldPersistBlockDevices": {
                                      "type": "boolean",
                                      "description": "Should the instance maintain its Data volumes\n",
                                      "example": true
                                    },
                                    "blockDevicesMode": {
                                      "type": "string",
                                      "description": "Determine the way we attach the data volumes to the data devices\n",
                                      "enum": [
                                        "reattach",
                                        "onLaunch"
                                      ],
                                      "example": "reattach"
                                    }
                                  }
                                }
                              },
                              "revertToSpot": {
                                "type": "object",
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot instances\n",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "description": "Settings for maintenance strategy - possible values: timeWindow, never, always.\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\nother groups allow either 'always' type or nothing which also means always.\n",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ],
                                    "example": "timeWindow",
                                    "default": "always"
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\nddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\nhh = hour 24 = 0 -23\nmm = minute = 0 - 59\n",
                                    "items": {
                                      "type": "string",
                                      "example": "Mon:03:00-Wed:02:30"
                                    }
                                  }
                                }
                              },
                              "scalingStrategy": {
                                "type": "object",
                                "description": "Set termination policy\n",
                                "properties": {
                                  "terminationPolicy": {
                                    "type": "string",
                                    "enum": [
                                      "default",
                                      "newestInstance"
                                    ],
                                    "example": "default"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Elastigroup Compute",
                            "required": [
                              "product",
                              "availabilityZones"
                            ],
                            "properties": {
                              "product": {
                                "type": "string",
                                "description": "Operation system type.\n",
                                "enum": [
                                  "Linux/UNIX (Amazon VPC)",
                                  "SUSE Linux (Amazon VPC)",
                                  "Windows (Amazon VPC)",
                                  "Red Hat Enterprise Linux (Amazon VPC)"
                                ],
                                "example": "Linux/UNIX"
                              },
                              "elasticIps": {
                                "type": "array",
                                "description": "List of ElasticIPs Allocation Ids to associate to the group instances\n",
                                "items": {
                                  "type": "string",
                                  "example": "eipalloc-9d4e16f8"
                                }
                              },
                              "privateIps": {
                                "type": "array",
                                "description": "List of Private IPs to associate to the group instances.\nPlease note: This setting will only apply if rategy.persistence.shouldPersistPrivateIp is set to true.\n",
                                "items": {
                                  "type": "string",
                                  "default": "172.1.1.0"
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "description": "Instance Types\n",
                                "required": [
                                  "ondemand",
                                  "spot"
                                ],
                                "properties": {
                                  "ondemand": {
                                    "type": "string",
                                    "description": "Available Instance types\n",
                                    "example": "m3.medium"
                                  },
                                  "spot": {
                                    "type": "array",
                                    "description": "Available Spot Instance types\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "c3.large",
                                        "c4.large",
                                        "m3.large",
                                        "r3.large"
                                      ]
                                    }
                                  },
                                  "preferredSpot": {
                                    "type": "array",
                                    "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "c4.large"
                                      ]
                                    }
                                  },
                                  "weights": {
                                    "type": "array",
                                    "description": "Custom weight for each instance type (only valid in weight capacity unit)\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceType": {
                                          "type": "string",
                                          "description": "The instance type to customize its weight\n",
                                          "example": "c4.large"
                                        },
                                        "weightedCapacity": {
                                          "type": "integer",
                                          "description": "The weight\n",
                                          "example": 8
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "subnetIds": {
                                "type": "array",
                                "description": "A comma-separated list of subnet identifiers for your group.\nWhen this parameter is set, compute.availabilityZones should be left unused.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "subnet-4c1d1538",
                                    "subnet-2791bb61",
                                    "subnet-703a6f58",
                                    "subnet-c62846fc"
                                  ]
                                }
                              },
                              "availabilityZones": {
                                "type": "array",
                                "description": "One or more availability Zones for the group.\nWhen this parameter is set, compute.subnetIds should be left unused.\n",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The Availability Zone name\n",
                                      "example": "us-west-2a"
                                    },
                                    "subnetIds": {
                                      "type": "array",
                                      "description": "A comma-separated list of subnet identifiers for your group.\n",
                                      "items": {
                                        "type": "string",
                                        "example": [
                                          "subnet-4333093a"
                                        ]
                                      }
                                    },
                                    "placementGroupName": {
                                      "type": "string",
                                      "description": "specify a Placement Group name, the instances will be launched in the Placement Group for the AZ.\n"
                                    }
                                  }
                                }
                              },
                              "preferredAvailabilityZones": {
                                "type": "array",
                                "description": "The AZs to prioritize when launching Spot instances.\nIf no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.\n* Must be a sublist of compute.AvailabilityZones\n* strategy.availabilityVsCost must not be equalAzDistribution\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "us-east-1a",
                                    "us-east-1b"
                                  ]
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "securityGroupIds",
                                  "monitoring",
                                  "imageId",
                                  "keyPair"
                                ],
                                "properties": {
                                  "creditSpecification": {
                                    "type": "object",
                                    "description": "creditSpecification is a parameter that indicates in what mode t2/t3 instances will be launched with. It consists of one key: cpuCredits (String)\n",
                                    "properties": {
                                      "cpuCredits": {
                                        "type": "string",
                                        "enum": [
                                          "unlimited",
                                          "standard"
                                        ],
                                        "example": "unlimited"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Elastic Load Balancers configurations\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "List of classic load balancers and/or application load balancer target groups and/or Multai load balancer target sets\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The AWS resource name. Required for Classic Load Balancer. Optional for Application Load Balancer.\n",
                                              "example": "MyTargetGroup"
                                            },
                                            "arn": {
                                              "type": "string",
                                              "description": "The AWS resource ARN (Required only for ALB target groups)\n",
                                              "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup/MyTargetGroup/1fe63217f8ff1234"
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "The resource type.\n",
                                              "enum": [
                                                "CLASSIC",
                                                "TARGET_GROUP",
                                                "MULTAI_TARGET_SET"
                                              ],
                                              "example": "TARGET_GROUP"
                                            },
                                            "balancerId": {
                                              "type": "string",
                                              "description": "The Multai load balancer ID\n",
                                              "example": "lb-123456789"
                                            },
                                            "targetSetId": {
                                              "description": "The Multai load target set ID\n",
                                              "type": "string",
                                              "example": "ts-123456789"
                                            },
                                            "azAwerness": {
                                              "description": "`AZ Awareness` will ensure that instances within the same AZ are using the corresponding MLB runtime instance in the same AZ. This feature reduces multi-zone data transfer fees\n",
                                              "type": "boolean",
                                              "example": false
                                            },
                                            "autoWeight": {
                                              "description": "`Auto Weight` will automatically provide a higher weight for instances that are larger as appropriate. For example, if you have configured your Elastigroup with m4.large and m4.xlarge instances the m4.large will have half the weight of an m4.xlarge. This ensures that larger instances receive a higher number of MLB requests\n",
                                              "type": "boolean",
                                              "example": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "healthCheckType": {
                                    "type": "string",
                                    "description": "The service to use for the health check.\n",
                                    "enum": [
                                      "ELB",
                                      "HCS",
                                      "TARGET_GROUP",
                                      "MLB",
                                      "ECS_CLUSTER_INSTANCE",
                                      "EC2",
                                      "OPSWORKS",
                                      "MULTAI_TARGET_SET",
                                      "K8S_NODE",
                                      "NOMAD_NODE"
                                    ],
                                    "example": "EC2"
                                  },
                                  "healthCheckGracePeriod": {
                                    "type": "integer",
                                    "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n",
                                    "default": 300,
                                    "example": 600
                                  },
                                  "healthCheckUnhealthyDurationBeforeReplacement": {
                                    "type": "integer",
                                    "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\nAfter the set time out the instance will be replaced\n",
                                    "example": 60
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "description": "One or more security group IDs. In case of update it will override the existing Security Group with the new given array\n",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "sg-0dfc2c8760df6fec7"
                                      ]
                                    }
                                  },
                                  "monitoring": {
                                    "type": "boolean",
                                    "description": "Describes whether instance Enhanced Monitoring is enabled\n",
                                    "example": false
                                  },
                                  "ebsOptimized": {
                                    "type": "boolean",
                                    "description": "Enable EBS optimization for supported instance which is not enabled by default.\nNote - additional charges will be applied.\n",
                                    "example": false
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "description": "The ID of the image used to launch the instance.\n* The following instance types are supported by HVM image: M3, M4, C3, C4, D2, G2, R3, CC2, CC1, CG1, CR1.\n* The following instance types are supported by PV image: M1, M2, M3, C1, C3.\n* In case of conflict between Instance type to image type, an error message will be returned\n",
                                    "example": "ami-01e24be29428c15b2"
                                  },
                                  "keyPair": {
                                    "type": "string",
                                    "description": "Specify a Key Pair to attach to the instances\n",
                                    "example": "labs-oregon"
                                  },
                                  "blockDeviceMappings": {
                                    "type": "array",
                                    "description": "Array list of block devices that are exposed to the instance, You can specify virtual devices and EBS volumes.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "description": "Set device name\n",
                                          "example": "/dev/xvdcz"
                                        },
                                        "ebs": {
                                          "type": "object",
                                          "description": "Set EBS properties\n",
                                          "properties": {
                                            "iops": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "description": "Must be greater than or equal to 0\n",
                                              "example": 0
                                            },
                                            "throughput": {
                                              "type": "integer",
                                              "minimum": 125,
                                              "maximum": 1000,
                                              "example": 125,
                                              "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=âgp3â.\n"
                                            },
                                            "volumeType": {
                                              "type": "string",
                                              "description": "Set volume type\n",
                                              "example": "gp2"
                                            },
                                            "deleteOnTermination": {
                                              "type": "boolean",
                                              "description": "Flag to delete the EBS on instance termination\n",
                                              "example": true
                                            },
                                            "volumeSize": {
                                              "type": "integer",
                                              "description": "Set volume size (in GB). When using this property - don't use dynamicVolumeSize.\nVolume size should be greater or equal than the size configured in the AMI\n",
                                              "example": 12
                                            },
                                            "dynamicVolumeSize": {
                                              "type": "object",
                                              "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                              "properties": {
                                                "baseSize": {
                                                  "type": "integer",
                                                  "description": "Initial size for volume\n",
                                                  "example": 50
                                                },
                                                "resource": {
                                                  "type": "string",
                                                  "example": "CPU"
                                                },
                                                "sizePerResourceUnit": {
                                                  "type": "integer",
                                                  "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be: 90GB\n",
                                                  "example": 20
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "type": "array",
                                    "description": "List of network interfaces in an EC2 instance.\nIf you define network interface, please pay attention to omit these properties from other sections in this JSON and set them here: subnetId - compute.availabilityZones\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "deviceIndex"
                                      ],
                                      "properties": {
                                        "description": {
                                          "type": "string",
                                          "description": "The description of the network interface. Applies only if creating a network interface when launching an instance.\n"
                                        },
                                        "deviceIndex": {
                                          "type": "integer",
                                          "description": "The position of the network interface in the attachment order.\nA primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.\n",
                                          "example": 0
                                        },
                                        "secondaryPrivateIpAddressCount": {
                                          "type": "integer",
                                          "description": "The number of secondary private IPv4 addresses to assign to a network interface.\nWhen you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range.\nYou can't specify this option and specify more than one private IP address using privateIpAddresses.\nThe number of IP addresses you can assign to a network interface varies by instance type.\nFor more information, see IP Addresses Per ENI Per Instance Type in the Amazon Virtual Private Cloud User Guide.\n"
                                        },
                                        "associatePublicIpAddress": {
                                          "type": "boolean",
                                          "description": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC.\nThe public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one.\nYou cannot specify more than one network interface in the request.\nIf launching into a default subnet, the default value is true.\n",
                                          "example": true
                                        },
                                        "deleteOnTermination": {
                                          "type": "boolean",
                                          "description": "If set to true, the interface is deleted when the instance is terminated.\nYou can specify true only if creating a new network interface when launching an instance.\n"
                                        },
                                        "networkInterfaceId": {
                                          "type": "string",
                                          "description": "The ID of the network interface. Used to attach the specified network interface to the instance.\n"
                                        },
                                        "privateIpAddresses": {
                                          "type": "array",
                                          "description": "One or more private IPv4 addresses to assign to the network interface.\nOnly one private IPv4 address can be designated as primary.\nYou cannot specify this option if you're launching more than one instance in a RunInstances request.\n",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "privateIpAddress",
                                              "primary"
                                            ],
                                            "properties": {
                                              "privateIpAddress": {
                                                "type": "string",
                                                "description": "The private IPv4 address.\n"
                                              },
                                              "primary": {
                                                "type": "boolean",
                                                "description": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n"
                                              }
                                            }
                                          }
                                        },
                                        "subnetId": {
                                          "type": "string",
                                          "description": "The ID of the subnet to associate with the network interface.\nRequired when creating a new Network Interface, and not attaching an existing one via networkInterfaceId.\n"
                                        },
                                        "associateIpv6Address": {
                                          "type": "boolean",
                                          "description": "Indicates whether to assign an IPv6 address. Amazon EC2 chooses the IPv6 addresses from the range of the subnet.\n"
                                        }
                                      }
                                    }
                                  },
                                  "iamRole": {
                                    "type": "object",
                                    "description": "The instance profile iamRole\n",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The iamRole name\n",
                                        "example": "my-iamRole"
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The Base64-encoded MIME user data to make available to the instances\n",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "The Base64-encoded shutdown script to execute prior to instance termination. For more information please see: [Shutdown Script](https://docs.spot.io/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "The tag's key\n",
                                          "example": "Creator"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "The tag's value\n",
                                          "example": "John Doe"
                                        }
                                      }
                                    }
                                  },
                                  "resourceTagSpecification": {
                                    "type": "object",
                                    "description": "Optional field. User will specified which resources should be tagged with group tags.",
                                    "properties": {
                                      "volumes": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Volume resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Volume resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "snapshots": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Snapshot resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Snapshot resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      },
                                      "enis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for ENI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. ENI resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "amis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for AMI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. AMI resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "metadataOptions": {
                                    "title": "Metadata Options",
                                    "type": "object",
                                    "description": "Optional field. Used for IMDSv2. In Create route can't be null. In Update route can be null.",
                                    "required": [
                                      "httpTokens"
                                    ],
                                    "properties": {
                                      "httpTokens": {
                                        "title": "HTTP Tokens",
                                        "type": "string",
                                        "description": "Required for IMDSv2. Canât be null in Create or Update. Values can be \"optional\" or \"required\".",
                                        "example": "optional"
                                      },
                                      "httpPutResponseHopLimit": {
                                        "type": "integer",
                                        "example": "33",
                                        "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n"
                                      }
                                    }
                                  },
                                  "cpuOptions": {
                                    "title": "CPU options",
                                    "type": "object",
                                    "description": "Optional field. The CPU options for the instances that are launched within the group.",
                                    "required": [
                                      "threadsPerCore"
                                    ],
                                    "properties": {
                                      "threadsPerCore": {
                                        "title": "thread per core",
                                        "type": "integer",
                                        "example": "1",
                                        "description": "The number of threads per CPU core.\nTo disable multithreading for the instances, specify a value of 1 .\nOtherwise, specify the default value of 2 .\n"
                                      }
                                    }
                                  },
                                  "autoHealing": {
                                    "type": "boolean",
                                    "description": "Optional field. Auto-healing replacement won't be triggered if this parameter value is \"false\".\nIn a case of a stateful group - no recycling will start if this parameter value is \"false\".\n",
                                    "default": true,
                                    "example": true
                                  }
                                }
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Elastigroup Scaling",
                            "properties": {
                              "up": {
                                "type": "object",
                                "properties": {
                                  "policyName": {
                                    "type": "string",
                                    "description": "The policy name\n",
                                    "example": "my-up-policy"
                                  },
                                  "metricName": {
                                    "type": "string",
                                    "description": "The name of the metric.\n",
                                    "default": "CPUUtilization",
                                    "example": "CPUUtilization"
                                  },
                                  "statistic": {
                                    "type": "string",
                                    "description": "The metric statistics to return.\n",
                                    "enum": [
                                      "average",
                                      "sum",
                                      "sampleCount",
                                      "maximum",
                                      "minimum",
                                      "percentile"
                                    ],
                                    "example": "average"
                                  },
                                  "extendedStatistic": {
                                    "type": "string",
                                    "description": "Percentile statistic. Valid values: p0.1 - p100\n",
                                    "example": "p1.5"
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "The unit for the alarm's associated metric.\n",
                                    "enum": [
                                      "seconds",
                                      "microseconds",
                                      "milliseconds",
                                      "bytes",
                                      "kilobytes",
                                      "megabytes",
                                      "gigabytes",
                                      "terabytes",
                                      "bits",
                                      "kilobits",
                                      "megabits",
                                      "gigabits",
                                      "terabits",
                                      "percent",
                                      "count",
                                      "bytes/second",
                                      "kilobytes/second",
                                      "megabytes/second",
                                      "gigabytes/second",
                                      "terabytes/second",
                                      "bits/second",
                                      "kilobits/second",
                                      "megabits/second",
                                      "gigabits/second",
                                      "terabits/second",
                                      "count/second",
                                      "none"
                                    ],
                                    "example": "percent"
                                  },
                                  "threshold": {
                                    "type": "integer",
                                    "description": "The value against which the specified statistic is compared\n",
                                    "example": 90
                                  },
                                  "action": {
                                    "type": "object",
                                    "example": "adjustment",
                                    "description": "The action to take when scale up is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"setMinTarget\", \"updateCapacity\".\n",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the action to take when scale up is needed.\n",
                                        "enum": [
                                          "adjustment",
                                          "updateCapacity setMinTarget",
                                          "percentageAdjustment"
                                        ],
                                        "example": "updateCapacity"
                                      },
                                      "adjustment": {
                                        "type": "integer",
                                        "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                        "example": 1
                                      },
                                      "minTargetCapacity": {
                                        "type": "integer",
                                        "description": "The number with the target capacity needed.\nRequired if using `setMinTarget` as action type\n",
                                        "example": 1
                                      },
                                      "target": {
                                        "type": "integer",
                                        "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are not defined.\n",
                                        "example": 1
                                      },
                                      "minimum": {
                                        "type": "integer",
                                        "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are not defined\n",
                                        "example": 0
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are not defined\n",
                                        "example": 5
                                      }
                                    }
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "description": "The namespace for the alarm's associated metric.\n",
                                    "default": "AWS/EC2"
                                  },
                                  "dimentions": {
                                    "type": "array",
                                    "description": "The dimensions for the alarm's associated metric.\nIf the user mentioned name as instanceId, there is NO value\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "InstanceId"
                                        }
                                      }
                                    }
                                  },
                                  "period": {
                                    "type": "integer",
                                    "description": "The period in seconds over which the statistic is applied.\n",
                                    "example": 300
                                  },
                                  "evaluationPeriods": {
                                    "type": "integer",
                                    "description": "The number of periods over which data is compared to the specified threshold.\n",
                                    "example": 1
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n",
                                    "example": 300
                                  },
                                  "operator": {
                                    "type": "string",
                                    "description": "The operator to use in order to determine if the scaling policy is applicable.\n",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ],
                                    "example": "gte"
                                  },
                                  "isEnabled": {
                                    "type": "boolean",
                                    "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                    "default": true,
                                    "example": true
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "properties": {
                                  "policyName": {
                                    "type": "string",
                                    "description": "The policy name\n",
                                    "example": "my-down-policy"
                                  },
                                  "metricName": {
                                    "type": "string",
                                    "description": "The name of the metric.\n",
                                    "default": "CPUUtilization",
                                    "example": "CPUUtilization"
                                  },
                                  "statistic": {
                                    "type": "string",
                                    "description": "The metric statistics to return.\n",
                                    "enum": [
                                      "average",
                                      "sum",
                                      "sampleCount",
                                      "maximum",
                                      "minimum",
                                      "percentile"
                                    ],
                                    "example": "average"
                                  },
                                  "extendedStatistic": {
                                    "type": "string",
                                    "description": "Percentile statistic. Valid values: p0.1 - p100\n",
                                    "example": "p1.5"
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "The unit for the alarm's associated metric.\n",
                                    "enum": [
                                      "seconds",
                                      "microseconds",
                                      "milliseconds",
                                      "bytes",
                                      "kilobytes",
                                      "megabytes",
                                      "gigabytes",
                                      "terabytes",
                                      "bits",
                                      "kilobits",
                                      "megabits",
                                      "gigabits",
                                      "terabits",
                                      "percent",
                                      "count",
                                      "bytes/second",
                                      "kilobytes/second",
                                      "megabytes/second",
                                      "gigabytes/second",
                                      "terabytes/second",
                                      "bits/second",
                                      "kilobits/second",
                                      "megabits/second",
                                      "gigabits/second",
                                      "terabits/second",
                                      "count/second",
                                      "none"
                                    ],
                                    "example": "percent"
                                  },
                                  "threshold": {
                                    "type": "integer",
                                    "description": "The value against which the specified statistic is compared\n",
                                    "example": 90
                                  },
                                  "action": {
                                    "type": "object",
                                    "example": "adjustment",
                                    "description": "The action to take when scale up is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"setMinTarget\", \"updateCapacity\".\n",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the action to take when scale up is needed.\n",
                                        "enum": [
                                          "adjustment",
                                          "updateCapacity setMinTarget",
                                          "percentageAdjustment"
                                        ],
                                        "example": "updateCapacity"
                                      },
                                      "adjustment": {
                                        "type": "integer",
                                        "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                        "example": 1
                                      },
                                      "minTargetCapacity": {
                                        "type": "integer",
                                        "description": "The number with the target capacity needed.\nRequired if using `setMinTarget` as action type\n",
                                        "example": 1
                                      },
                                      "target": {
                                        "type": "integer",
                                        "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are not defined.\n",
                                        "example": 1
                                      },
                                      "minimum": {
                                        "type": "integer",
                                        "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are not defined\n",
                                        "example": 0
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are not defined\n",
                                        "example": 5
                                      }
                                    }
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "description": "The namespace for the alarm's associated metric.\n",
                                    "default": "AWS/EC2"
                                  },
                                  "dimentions": {
                                    "type": "array",
                                    "description": "The dimensions for the alarm's associated metric.\nIf the user mentioned name as instanceId, there is NO value\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "InstanceId"
                                        }
                                      }
                                    }
                                  },
                                  "period": {
                                    "type": "integer",
                                    "description": "The period in seconds over which the statistic is applied.\n",
                                    "example": 300
                                  },
                                  "evaluationPeriods": {
                                    "type": "integer",
                                    "description": "The number of periods over which data is compared to the specified threshold.\n",
                                    "example": 1
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n",
                                    "example": 300
                                  },
                                  "operator": {
                                    "type": "string",
                                    "description": "The operator to use in order to determine if the scaling policy is applicable.\n",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ],
                                    "example": "gte"
                                  },
                                  "isEnabled": {
                                    "type": "boolean",
                                    "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                    "default": true,
                                    "example": true
                                  }
                                }
                              },
                              "target": {
                                "type": "object",
                                "properties": {
                                  "source": {
                                    "title": "Source",
                                    "description": "The source of the metric Supported values: âcloudWatchâ, âspectrumâ",
                                    "type": "string",
                                    "example": "spectrum"
                                  },
                                  "policyName": {
                                    "type": "string",
                                    "description": "The policy name\n",
                                    "example": "my-up-policy"
                                  },
                                  "metricName": {
                                    "type": "string",
                                    "description": "The name of the metric.\n",
                                    "default": "CPUUtilization",
                                    "example": "CPUUtilization"
                                  },
                                  "statistic": {
                                    "type": "string",
                                    "description": "The metric statistics to return.\n",
                                    "enum": [
                                      "average",
                                      "sum",
                                      "sampleCount",
                                      "maximum",
                                      "minimum",
                                      "percentile"
                                    ],
                                    "example": "average"
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "The unit for the alarm's associated metric.\n",
                                    "enum": [
                                      "seconds",
                                      "microseconds",
                                      "milliseconds",
                                      "bytes",
                                      "kilobytes",
                                      "megabytes",
                                      "gigabytes",
                                      "terabytes",
                                      "bits",
                                      "kilobits",
                                      "megabits",
                                      "gigabits",
                                      "terabits",
                                      "percent",
                                      "count",
                                      "bytes/second",
                                      "kilobytes/second",
                                      "megabytes/second",
                                      "gigabytes/second",
                                      "terabytes/second",
                                      "bits/second",
                                      "kilobits/second",
                                      "megabits/second",
                                      "gigabits/second",
                                      "terabits/second",
                                      "count/second",
                                      "none"
                                    ],
                                    "example": "percent"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "description": "The namespace for the alarm's associated metric.\n",
                                    "default": "AWS/EC2"
                                  },
                                  "target": {
                                    "type": "integer",
                                    "description": "The target value for the group\n",
                                    "example": 1
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n",
                                    "example": 300
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Elastigroup Scheduling",
                            "description": "Schedule tasks to execute, using CRON expressions.\n",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "The scheduling tasks for the group.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run.\n",
                                      "example": true
                                    },
                                    "startTime": {
                                      "type": "string",
                                      "description": "DATETIME in ISO-8601 format and is in UTC time. Sets a start time for scheduled actions.\nIf \"frequency\" or \"cronExpression\" are not used - the task will run only once at the start time and will then be deleted from the group configuration.\n",
                                      "example": "2018-05-23T10:55:09Z"
                                    },
                                    "frequency": {
                                      "type": "string",
                                      "description": "The recurrence frequency to run this task.\nOnly one of âfrequency' or âcronExpression' should be used at a time\n",
                                      "enum": [
                                        "hourly",
                                        "daily",
                                        "weekly"
                                      ],
                                      "example": "hourly"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script.\nOnly one of âfrequency' or âcronExpression' should be used at a time.\n",
                                      "example": "0 1 * * *"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type to run.\n",
                                      "enum": [
                                        "backup_ami",
                                        "scale",
                                        "scaleUp",
                                        "roll",
                                        "statefulUpdateCapacity",
                                        "statefulRecycle",
                                        "clusterRoll (For ECS Integration)"
                                      ],
                                      "example": "scale"
                                    },
                                    "scaleTargetCapacity": {
                                      "type": "integer",
                                      "description": "The target capacity of the group.\nShould be used when choosing âtaskType' of âscale'.\n"
                                    },
                                    "scaleMinCapacity": {
                                      "type": "integer",
                                      "description": "The min capacity of the group.\nShould be used when choosing âtaskType' of âscale'.\n"
                                    },
                                    "scaleMaxCapacity": {
                                      "type": "integer",
                                      "description": "The max capacity of the group.\nRequired when âtaskType' is âscale'.\n"
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "description": "Set a new target capacity for the Elastigroup.\nRequired when âtaskType' is âstatefulUpdateCapacity'.\n"
                                    },
                                    "MinCapacity": {
                                      "type": "integer",
                                      "description": "Set a new minimum capacity for the Elastigroup.\nRequired when âtaskType' is âstatefulUpdateCapacity'.\n"
                                    },
                                    "MaxCapacity": {
                                      "type": "integer",
                                      "description": "Set a new maximum capacity for the Elastigroup.\nRequired when âtaskType' is âstatefulUpdateCapacity'.\n"
                                    },
                                    "batchSizePercentage": {
                                      "type": "integer",
                                      "description": "The percentage size of each batch in the scheduled deployment roll.\nRequired when the taskType is roll.\n"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "type": "object",
                            "title": "Elastigroup Third Party Integrations",
                            "description": "All definitions for using third-party Integrations\n",
                            "properties": {
                              "rancher": {
                                "type": "object",
                                "description": "Rancher integration object.\n",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "description": "Rancher master url\n",
                                    "example": "http://myRancher.com:8080/v1"
                                  },
                                  "accessKey": {
                                    "type": "string",
                                    "description": "Rancher version\n",
                                    "example": "1",
                                    "default": "1"
                                  },
                                  "secretKey": {
                                    "type": "string",
                                    "example": "SECRET"
                                  },
                                  "version": {
                                    "type": "string",
                                    "example": 1
                                  }
                                }
                              },
                              "kubernetes": {
                                "type": "object",
                                "properties": {
                                  "integrationMode": {
                                    "type": "string",
                                    "example": "pod"
                                  },
                                  "clusterIdentifier": {
                                    "type": "string",
                                    "example": "test-k8s"
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "down": {
                                        "type": "object",
                                        "description": "Auto Scaling scale down operations.\n",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 5
                                          },
                                          "maxScaleDownPercentage": {
                                            "type": "integer",
                                            "description": "The maximum % of nodes that will be scaled down at once out of the total amount of potential nodes to scale down.\nexample: if 10 nodes can be scaled down, only 5 will be given 50% in this parameter.\nthe other 50% will be scaled down in the next autoscaling iteration.\n",
                                            "example": 70
                                          },
                                          "headroom": {
                                            "type": "object",
                                            "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                            "properties": {
                                              "cpuPerUnit": {
                                                "type": "integer",
                                                "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                                "example": 2048
                                              },
                                              "memoryPerUnit": {
                                                "type": "integer",
                                                "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                                "example": 3
                                              },
                                              "numOfUnits": {
                                                "type": "integer",
                                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                                "example": 2
                                              },
                                              "gpuPerUnit": {
                                                "type": "integer",
                                                "example": 2
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "labels": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "example": "group, kops.k8s.io/instancegroup"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "microservices"
                                            }
                                          }
                                        }
                                      },
                                      "isAutoConfig": {
                                        "type": "boolean",
                                        "example": false,
                                        "default": false
                                      }
                                    }
                                  }
                                }
                              },
                              "mesosphere": {
                                "type": "object",
                                "properties": {
                                  "apiServer": {
                                    "type": "string",
                                    "example": "1.2.3.4"
                                  }
                                }
                              },
                              "mlbRuntime": {
                                "type": "object",
                                "properties": {
                                  "deploymentId": {
                                    "type": "string",
                                    "example": "dp-rm0f5b912345"
                                  }
                                }
                              },
                              "nomad": {
                                "type": "object",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "example": "https://master.host.com"
                                  },
                                  "masterPort": {
                                    "type": "integer",
                                    "example": 443
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Enable the Autoscaler.\n",
                                        "example": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180\n",
                                        "example": 180
                                      },
                                      "down": {
                                        "type": "object",
                                        "description": "Auto Scaling scale down operations.\n",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 3
                                          }
                                        }
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                            "example": 2048
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                            "example": 3
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 2
                                          }
                                        }
                                      },
                                      "constraints": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "example": "${node.class}"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "value"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "aclToken": {
                                    "type": "string",
                                    "example": 123
                                  },
                                  "tlsConfig": {
                                    "type": "object",
                                    "description": "Configuration object for TLS integration. (optional)\n",
                                    "properties": {
                                      "tlsEnabled": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "When true, all communication to the master is with TLS. (required)\n"
                                      },
                                      "privateKey": {
                                        "type": "string",
                                        "example": "PRIVATE KEY CERTIFICATE STR",
                                        "description": "A generated client private key. (required)\n"
                                      },
                                      "certificate": {
                                        "type": "string",
                                        "example": "PUBLIC KEY CERTIFICATE STR",
                                        "description": "The certificates chain, first the client certificate then the ca certificate. (required)\n"
                                      }
                                    }
                                  }
                                }
                              },
                              "chef": {
                                "type": "object",
                                "properties": {
                                  "chefServer": {
                                    "type": "string",
                                    "example": "https://master.host.com"
                                  },
                                  "organization": {
                                    "type": "string",
                                    "example": "ORGNAME"
                                  },
                                  "chefVersion": {
                                    "type": "string",
                                    "example": 12.1
                                  },
                                  "user": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "pemKey": {
                                    "type": "string",
                                    "example": "Key"
                                  }
                                }
                              },
                              "rightScale": {
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "type": "string",
                                    "example": "ID"
                                  },
                                  "refreshToken": {
                                    "type": "string",
                                    "example": "TOKEN"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "us-east-1"
                                  }
                                }
                              },
                              "opsWorks": {
                                "type": "object",
                                "properties": {
                                  "layerId": {
                                    "type": "string",
                                    "example": "00d9m815-8aac-62b7-cc01-123456, xxxxxx-xxxxxxxx, xxxxxxx-xxxxxxxxxx"
                                  },
                                  "stackType": {
                                    "type": "string",
                                    "example": "CLASSIC"
                                  }
                                }
                              },
                              "codeDeploy": {
                                "type": "object",
                                "properties": {
                                  "cleanUpOnFailure": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "terminateInstanceOnFailure": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "deploymentGroups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "applicationName": {
                                          "type": "string",
                                          "example": "test-app"
                                        },
                                        "deploymentGroupName": {
                                          "type": "string",
                                          "example": "test-grp"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "route53": {
                                "type": "object",
                                "description": "Route53 integration object.\n",
                                "properties": {
                                  "domains": {
                                    "type": "array",
                                    "description": "Route53 domain configurations.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hostedZoneId": {
                                          "type": "string",
                                          "description": "The Route53 Hosted Zone ID for the registered domain.\n",
                                          "example": "Z3UFMBCGJMYLUT"
                                        },
                                        "spotinstAccountId": {
                                          "type": "string",
                                          "description": "The Spot account ID that is linked to the AWS account that holds the Route53 hosted Zone ID.\nThe default is the user Spot account provided as a URL parameter.\n",
                                          "example": "act-1234abcd"
                                        },
                                        "recordSetType": {
                                          "type": "string",
                                          "description": "Set the type of recordSet to update.\nValid values:\n* \"a\" - means register and de-register of instances done by IP address (IPv4).\nWhen it is \"a\" you should also specify usePublicIp.\n* \"cname\" - register and de-register of instances done by CNAME. When it is \"cname\", you should also specify usePublicDns.\n",
                                          "enum": [
                                            "a",
                                            "cname"
                                          ],
                                          "example": "a",
                                          "default": "a"
                                        },
                                        "recordSets": {
                                          "type": "array",
                                          "description": "List of record sets.\n",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the recordSet.\n",
                                                "example": "testcname.spot.io."
                                              },
                                              "usePublicIp": {
                                                "type": "boolean",
                                                "description": "Defines whether to use public or private IP. Relevant only when recordSetType=a.\n",
                                                "example": true,
                                                "default": false
                                              },
                                              "usePublicDns": {
                                                "type": "boolean",
                                                "description": "Defines whether to use a public DNS or private DNS in the instance registration process.\nRelevant only when recordSetType=cname.\n* False=Create a new weighted CNAME recordset with same name and the instance Private DNS.\n* True=instances should be registered with public DNS.\n",
                                                "example": true,
                                                "default": false
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "elasticBeanstalk": {
                                "type": "object",
                                "description": "Beanstalk integration object.\n",
                                "properties": {
                                  "environmentId": {
                                    "type": "string",
                                    "example": "e-12345"
                                  },
                                  "deploymentPreferences": {
                                    "type": "object",
                                    "properties": {
                                      "automaticRoll": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "batchSizePercentage": {
                                        "type": "integer",
                                        "example": 50
                                      },
                                      "gracePeriod": {
                                        "type": "integer",
                                        "example": 600
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "properties": {
                                          "action": {
                                            "type": "string",
                                            "example": "REPLACE_SERVER"
                                          },
                                          "shouldDrainInstances": {
                                            "type": "boolean",
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "managedActions": {
                                    "type": "object",
                                    "properties": {
                                      "platformUpdate": {
                                        "type": "object",
                                        "properties": {
                                          "performAt": {
                                            "type": "string",
                                            "example": "timeWindow"
                                          },
                                          "timeWindow": {
                                            "type": "string",
                                            "example": "Mon:23:50-Tue:00:20"
                                          },
                                          "updateLevel": {
                                            "type": "string",
                                            "example": "patch"
                                          },
                                          "instanceRefreshEnabled": {
                                            "type": "boolean",
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "ecs": {
                                "type": "object",
                                "description": "ECS integration object.\n",
                                "properties": {
                                  "clusterName": {
                                    "type": "string",
                                    "example": "test-ecs",
                                    "description": "ECS cluster name\n"
                                  },
                                  "autoScale": {
                                    "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                                  },
                                  "batch": {
                                    "type": "object",
                                    "properties": {
                                      "jobQueueNames": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "dumpy-big-processing"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "optimizeImages": {
                                    "type": "object",
                                    "properties": {
                                      "shouldOptimizeEcsAmi": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "performAt": {
                                        "type": "string",
                                        "description": "Settings for maintenance strategy.\\\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\\\nother groups allow either 'always' type or nothing which also means always.\n",
                                        "enum": [
                                          "never",
                                          "always",
                                          "timeWindow"
                                        ],
                                        "example": "timeWindow",
                                        "default": "always"
                                      },
                                      "timeWindows": {
                                        "type": "array",
                                        "description": "When performAt is 'timeWindow':\\\nmust specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\n* ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\n* hh = hour 24 = 0 -23\n* mm = minute = 0 - 59\n",
                                        "items": {
                                          "type": "string",
                                          "example": "Mon:03:00-Wed:02:30"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "dockerSwarm": {
                                "title": "DockerSwarm ThirdPartiesIntegration Object",
                                "type": "object",
                                "description": "DockerSwarm integration object.\n",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "example": "swarm1.swarm.com",
                                    "description": "Docker swarm master hostname\n"
                                  },
                                  "masterPort": {
                                    "type": "integer",
                                    "example": 1234,
                                    "description": "Docker swarm master port number\n"
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "description": "autoScale configuration\n",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "example": "true",
                                        "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                        "default": true
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "example": 300,
                                        "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n"
                                      },
                                      "down": {
                                        "type": "object",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 4,
                                            "description": "The number of periods over which data is compared to the specified threshold.\n"
                                          },
                                          "maxScaleDownPercentage": {
                                            "type": "integer",
                                            "example": 20,
                                            "description": "Would represent the maximum % to scale-down.\n",
                                            "minimum": 1,
                                            "maximum": 100
                                          }
                                        }
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Set custom headroom per launch spec. provide list of launchSpec.autoScale.headrooms object\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU\n",
                                            "example": 1000
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                            "example": 2048
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 3
                                          }
                                        }
                                      },
                                      "tlsConfig": {
                                        "type": "object",
                                        "properties": {
                                          "tlsEnabled": {
                                            "type": "boolean",
                                            "example": true
                                          },
                                          "privateKey": {
                                            "type": "string",
                                            "example": "PRIVATE KEY CERTIFICATE STR"
                                          },
                                          "certificate": {
                                            "type": "string",
                                            "example": "PUBLIC KEY CERTIFICATE STR"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "example": "spotinst:aws:ec2:group"
                            },
                            "items": {
                              "type": "array",
                              "items": [
                                {
                                  "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List All Elastigroups",
        "description": "List all AWS Elastigroups for a Spot Account\n",
        "operationId": "elastigroupAwsListAll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "List All Groups Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "ID",
                                              "example": "sig-1234567"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "EG Name",
                                              "example": "EG name"
                                            },
                                            "description": {
                                              "type": "string",
                                              "description": "Description",
                                              "example": "validation"
                                            },
                                            "capacity": {
                                              "type": "object",
                                              "description": "Capacity",
                                              "properties": {
                                                "minimum": {
                                                  "type": "integer",
                                                  "description": "Minimum Value",
                                                  "example": 1
                                                },
                                                "maximum": {
                                                  "type": "integer",
                                                  "description": "Maximum Value",
                                                  "example": 1
                                                },
                                                "target": {
                                                  "type": "integer",
                                                  "description": "Target Value",
                                                  "example": 1
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "description": "Unit",
                                                  "example": "instance"
                                                }
                                              }
                                            },
                                            "strategy": {
                                              "type": "object",
                                              "description": "Strategy",
                                              "properties": {
                                                "risk": {
                                                  "type": "integer",
                                                  "description": "Risk",
                                                  "example": 0
                                                },
                                                "onDemandCount": {
                                                  "type": "string",
                                                  "description": "On Demand Count",
                                                  "example": null
                                                },
                                                "availabilityVsCost": {
                                                  "type": "string",
                                                  "description": "Availability VS Cost",
                                                  "example": "balanced"
                                                }
                                              }
                                            },
                                            "compute": {
                                              "type": "object",
                                              "description": "Compute",
                                              "properties": {
                                                "instanceTypes": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ondemand": {
                                                      "type": "string",
                                                      "description": "On Demand",
                                                      "example": "m3.large"
                                                    },
                                                    "spot": {
                                                      "type": "string",
                                                      "description": "Spot",
                                                      "example": [
                                                        "c3.large m3.large"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "availabilityZones": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Name",
                                                      "example": "us-west-2a"
                                                    },
                                                    "subnetIds": {
                                                      "type": "string",
                                                      "description": "Subnet IDs",
                                                      "example": [
                                                        "subnet-1234567"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "product": {
                                                  "type": "string",
                                                  "description": "Operatin System",
                                                  "example": "Linux/UNIX"
                                                },
                                                "launchSpecification": {
                                                  "type": "object",
                                                  "properties": {
                                                    "securityGroupIds": {
                                                      "type": "string",
                                                      "description": "Security Group IDs",
                                                      "example": [
                                                        "sg-1234567"
                                                      ]
                                                    },
                                                    "monitoring": {
                                                      "type": "boolean",
                                                      "description": "Monitoring",
                                                      "example": true
                                                    },
                                                    "imageId": {
                                                      "type": "string",
                                                      "description": "Image ID",
                                                      "example": "ami-987654"
                                                    },
                                                    "keyPair": {
                                                      "type": "string",
                                                      "description": "Key Pair",
                                                      "example": "keyp"
                                                    },
                                                    "userData": {
                                                      "type": "string",
                                                      "description": "User Data",
                                                      "example": null
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "scaling": {
                                              "type": "object",
                                              "properties": {
                                                "up": {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "description": "Policy Name",
                                                      "example": "up Scaling Policy 1"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "description": "Metric Name",
                                                      "example": "CPUUtilization"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "description": "Statistics",
                                                      "example": "maximum"
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "description": "Unit",
                                                      "example": "percent"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "description": "Threshold",
                                                      "example": 90
                                                    },
                                                    "adjustment": {
                                                      "type": "integer",
                                                      "description": "Adjustment",
                                                      "example": 2
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "description": "Namespace",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "description": "Period",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "description": "Evaluation Period",
                                                      "example": 3
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "description": "Cool Down",
                                                      "example": 60
                                                    }
                                                  }
                                                },
                                                "down": {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "description": "Policy Name",
                                                      "example": "down Scaling Policy 1"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "description": "Metric Name",
                                                      "example": "CPUUtilization"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "description": "Statistics",
                                                      "example": "maximum"
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "description": "Unit",
                                                      "example": "percent"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "description": "Threshold",
                                                      "example": 50
                                                    },
                                                    "adjustment": {
                                                      "type": "integer",
                                                      "description": "Adjustment",
                                                      "example": 2
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "description": "Namespace",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "description": "Period",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "description": "Evaluation Period",
                                                      "example": 3
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "description": "Cool Down",
                                                      "example": 60
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Name",
                                                            "example": "InstanceId"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "scheduling": {
                                              "type": "object",
                                              "properties": {
                                                "tasks": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "frequency": {
                                                        "type": "string",
                                                        "description": "Frequency",
                                                        "example": "weekly"
                                                      },
                                                      "taskType": {
                                                        "type": "string",
                                                        "description": "Task Type",
                                                        "example": "backup_ami"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "thirdPartiesIntegration": {
                                              "type": "object"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "description": "Created At",
                                              "example": "2016-02-16T09:03:23.000Z"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "description": "Updated At",
                                              "example": "2018-01-07T00:10:30.000Z"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "ID",
                                              "example": "sig-897654"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "EG Name",
                                              "example": "Test EG"
                                            },
                                            "description": {
                                              "type": "string",
                                              "description": "Description",
                                              "example": "Test"
                                            },
                                            "capacity": {
                                              "type": "object",
                                              "description": "Capacity",
                                              "properties": {
                                                "minimum": {
                                                  "type": "integer",
                                                  "description": "Minimum Value",
                                                  "example": 0
                                                },
                                                "maximum": {
                                                  "type": "integer",
                                                  "description": "Maximum Value",
                                                  "example": 0
                                                },
                                                "target": {
                                                  "type": "integer",
                                                  "description": "Target Value",
                                                  "example": 0
                                                },
                                                "unit": {
                                                  "type": "string",
                                                  "description": "Unit",
                                                  "example": "instance"
                                                }
                                              }
                                            },
                                            "strategy": {
                                              "type": "object",
                                              "description": "Strategy",
                                              "properties": {
                                                "risk": {
                                                  "type": "integer",
                                                  "description": "Risk",
                                                  "example": 100
                                                },
                                                "onDemandCount": {
                                                  "type": "string",
                                                  "description": "On Demand Count",
                                                  "example": null
                                                },
                                                "availabilityVsCost": {
                                                  "type": "string",
                                                  "description": "Availability VS Cost",
                                                  "example": "balanced"
                                                }
                                              }
                                            },
                                            "compute": {
                                              "type": "object",
                                              "description": "Compute",
                                              "properties": {
                                                "instanceTypes": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ondemand": {
                                                      "type": "string",
                                                      "description": "On Demand",
                                                      "example": "m3.large"
                                                    },
                                                    "spot": {
                                                      "type": "string",
                                                      "description": "Spot",
                                                      "example": [
                                                        "m3.large c3.large"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "availabilityZones": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Name",
                                                      "example": "us-west-2b"
                                                    },
                                                    "subnetIds": {
                                                      "type": "string",
                                                      "description": "Subnet IDs",
                                                      "example": [
                                                        "subnet-657493"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "product": {
                                                  "type": "string",
                                                  "description": "Operatin System",
                                                  "example": "Linux/UNIX"
                                                },
                                                "launchSpecification": {
                                                  "type": "object",
                                                  "properties": {
                                                    "securityGroupIds": {
                                                      "type": "string",
                                                      "description": "Security Group IDs",
                                                      "example": [
                                                        "sg-987126"
                                                      ]
                                                    },
                                                    "monitoring": {
                                                      "type": "boolean",
                                                      "description": "Monitoring",
                                                      "example": true
                                                    },
                                                    "imageId": {
                                                      "type": "string",
                                                      "description": "Image ID",
                                                      "example": "ami-87236464"
                                                    },
                                                    "keyPair": {
                                                      "type": "string",
                                                      "description": "Key Pair",
                                                      "example": "PairKey"
                                                    },
                                                    "userData": {
                                                      "type": "string",
                                                      "description": "User Data",
                                                      "example": null
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "scaling": {
                                              "type": "object",
                                              "properties": {
                                                "up": {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "description": "Policy Name",
                                                      "example": "up Scaling Policy 1"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "description": "Metric Name",
                                                      "example": "CPUUtilization"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "description": "Statistics",
                                                      "example": "maximum"
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "description": "Unit",
                                                      "example": "percent"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "description": "Threshold",
                                                      "example": 90
                                                    },
                                                    "adjustment": {
                                                      "type": "integer",
                                                      "description": "Adjustment",
                                                      "example": 2
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "description": "Namespace",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "description": "Period",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "description": "Evaluation Period",
                                                      "example": 3
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "description": "Cool Down",
                                                      "example": 60
                                                    }
                                                  }
                                                },
                                                "down": {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "description": "Policy Name",
                                                      "example": "down Scaling Policy 1"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "description": "Metric Name",
                                                      "example": "CPUUtilization"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "description": "Statistics",
                                                      "example": "maximum"
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "description": "Unit",
                                                      "example": "percent"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "description": "Threshold",
                                                      "example": 50
                                                    },
                                                    "adjustment": {
                                                      "type": "integer",
                                                      "description": "Adjustment",
                                                      "example": 2
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "description": "Namespace",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "description": "Period",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "description": "Evaluation Period",
                                                      "example": 3
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "description": "Cool Down",
                                                      "example": 60
                                                    },
                                                    "dimensions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Name",
                                                            "example": "InstanceId"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "scheduling": {
                                              "type": "object",
                                              "properties": {
                                                "tasks": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "frequency": {
                                                        "type": "string",
                                                        "description": "Frequency",
                                                        "example": "weekly"
                                                      },
                                                      "taskType": {
                                                        "type": "string",
                                                        "description": "Task Type",
                                                        "example": "backup_ami"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "thirdPartiesIntegration": {
                                              "type": "object"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "description": "Created At",
                                              "example": "2016-02-16T06:35:03.000Z"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "description": "Updated At",
                                              "example": "2016-02-16T10:21:01.000Z"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}": {
      "put": {
        "summary": "Update Elastigroup",
        "description": "Describe a specific Elastigroup JSON\n",
        "operationId": "elastigroupAwsUpdate",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-12345",
            "description": "The Spot Elastigroup ID you want to update\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoApplyTags",
            "description": "Optionally update resource tags on the fly without performing a roll.\n",
            "schema": {
              "type": "boolean",
              "example": true,
              "default": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "AWS Elastigroup",
                "required": [
                  "group"
                ],
                "properties": {
                  "group": {
                    "type": "object",
                    "description": "Group",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "AWS Elastigroup Name\n",
                        "example": "my-Elastigroup",
                        "required": true
                      },
                      "description": {
                        "type": "string",
                        "description": "Describe your AWS Elastigroup\n",
                        "example": "This Elastigroup is used for Development"
                      },
                      "region": {
                        "type": "string",
                        "description": "The AWS region your group will be created in.\n This parameter is required if you specify subnets (through compute.subnetIds).\n This parameter is optional if you specify Availability Zones (through compute.availabilityZones).\n",
                        "example": "us-east-1"
                      },
                      "capacity": {
                        "type": "object",
                        "title": "Elastigroup Capacity",
                        "properties": {
                          "target": {
                            "type": "integer",
                            "description": "The number of instances to launch\n",
                            "example": 1
                          },
                          "minimum": {
                            "type": "integer",
                            "description": "The lower limit number of instances that you can scale down to\n",
                            "example": 0
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "The upper limit number of instances that you can scale up to\n",
                            "example": 10
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "instance",
                              "weight"
                            ],
                            "readOnly": true,
                            "description": "The capacity unit to launch instances by.\nNote: for groups with integration to K8S / ECS weight option is not supported.\n",
                            "example": "instance"
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "title": "Elastigroup Strategy",
                        "properties": {
                          "risk": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100,
                            "example": 100,
                            "default": 0,
                            "description": "The percentage of Elastigroup that will run with spot market capacity\n"
                          },
                          "onDemandCount": {
                            "type": "integer",
                            "minimum": 0,
                            "example": 0,
                            "description": "Minimum number of instances that will always be on-demand\n"
                          },
                          "availabilityVsCost": {
                            "type": "string",
                            "enum": [
                              "costOriented",
                              "availabilityOriented",
                              "balanced",
                              "cheapest",
                              "equalAzDistribution"
                            ],
                            "default": "balanced",
                            "description": "How Elastigroup determines which instances to add and replace.\n(please read this article before using [Equal AZ Instance Distribution](https://docs.spot.io/elastigroup-for-aws/concepts/general-concepts/equal-az-distribution))\n"
                          },
                          "fallbackToOd": {
                            "type": "boolean",
                            "default": false,
                            "example": true,
                            "description": "When set to `true` Elastigroup will launch On Demand instances if no spot market is available\n"
                          },
                          "utilizeReservedInstances": {
                            "type": "boolean",
                            "description": "In case of any available Reserved Instances, Elastigroup will utilize them before purchasing Spot instances\n",
                            "example": false
                          },
                          "drainingTimeout": {
                            "type": "integer",
                            "example": 120,
                            "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation\n"
                          },
                          "signals": {
                            "type": "array",
                            "description": "The signals defined for this group. For more information refer the below article: [Signals](https://docs.spot.io/elastigroup-for-aws/concepts/compute-concepts/using-signals-in-elastigroups)\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the signal defined for the group.\n",
                                  "enum": [
                                    "INSTANCE_READY",
                                    "INSTANCE_READY_TO_SHUTDOWN"
                                  ]
                                },
                                "timeout": {
                                  "type": "integer",
                                  "minimum": 60,
                                  "maximum": 1800,
                                  "description": "The timeout in seconds to hold the instance until a signal is sent.\nIf no signal is sent the instance will be replaced (INSTANCE_READY) or we will terminate the instance (INSTANCE_READY_TO_SHUTDOWN) after the timeout.\n",
                                  "default": 1800,
                                  "example": 120
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "array",
                            "description": "You can register persistence (Stateful) recovery arguments\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "shouldPersistPrivateIp": {
                                  "type": "boolean",
                                  "description": "Should the instance maintain its private IP\n",
                                  "example": true
                                },
                                "shouldPersistRootDevice": {
                                  "type": "boolean",
                                  "description": "Should the instance maintain its root device volumes\n",
                                  "example": true
                                },
                                "shouldPersistBlockDevices": {
                                  "type": "boolean",
                                  "description": "Should the instance maintain its Data volumes\n",
                                  "example": true
                                },
                                "blockDevicesMode": {
                                  "type": "string",
                                  "description": "Determine the way we attach the data volumes to the data devices\n",
                                  "enum": [
                                    "reattach",
                                    "onLaunch"
                                  ],
                                  "example": "reattach"
                                }
                              }
                            }
                          },
                          "revertToSpot": {
                            "type": "object",
                            "description": "Hold settings for strategy correction - replacing On-Demand for Spot instances\n",
                            "properties": {
                              "performAt": {
                                "type": "string",
                                "description": "Settings for maintenance strategy - possible values: timeWindow, never, always.\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\nother groups allow either 'always' type or nothing which also means always.\n",
                                "enum": [
                                  "never",
                                  "always",
                                  "timeWindow"
                                ],
                                "example": "timeWindow",
                                "default": "always"
                              },
                              "timeWindows": {
                                "type": "array",
                                "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\nddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\nhh = hour 24 = 0 -23\nmm = minute = 0 - 59\n",
                                "items": {
                                  "type": "string",
                                  "example": "Mon:03:00-Wed:02:30"
                                }
                              }
                            }
                          },
                          "scalingStrategy": {
                            "type": "object",
                            "description": "Set termination policy\n",
                            "properties": {
                              "terminationPolicy": {
                                "type": "string",
                                "enum": [
                                  "default",
                                  "newestInstance"
                                ],
                                "example": "default"
                              }
                            }
                          }
                        }
                      },
                      "compute": {
                        "type": "object",
                        "title": "Elastigroup Compute",
                        "properties": {
                          "product": {
                            "type": "string",
                            "description": "Operation system type.\n",
                            "enum": [
                              "Linux/UNIX (Amazon VPC)",
                              "SUSE Linux (Amazon VPC)",
                              "Windows (Amazon VPC)",
                              "Red Hat Enterprise Linux (Amazon VPC)"
                            ],
                            "readOnly": true,
                            "example": "Linux/UNIX"
                          },
                          "elasticIps": {
                            "type": "array",
                            "description": "List of ElasticIPs Allocation Ids to associate to the group instances\n",
                            "items": {
                              "type": "string",
                              "example": "eipalloc-9d4e16f8"
                            }
                          },
                          "privateIps": {
                            "type": "array",
                            "description": "List of Private IPs to associate to the group instances.\nPlease note: This setting will only apply if rategy.persistence.shouldPersistPrivateIp is set to true.\n",
                            "items": {
                              "type": "string",
                              "default": "172.1.1.0"
                            }
                          },
                          "instanceTypes": {
                            "type": "object",
                            "description": "Instance Types\n",
                            "properties": {
                              "ondemand": {
                                "type": "string",
                                "description": "Available Instance types\n",
                                "example": "m3.medium"
                              },
                              "spot": {
                                "type": "array",
                                "description": "Available Spot Instance types\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "c3.large",
                                    "c4.large",
                                    "m3.large",
                                    "r3.large"
                                  ]
                                }
                              },
                              "preferredSpot": {
                                "type": "array",
                                "description": "Prioritize a subset of spot instance types. Must be a subset of the selected spot instance types.\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "c4.large"
                                  ]
                                }
                              },
                              "weights": {
                                "type": "array",
                                "description": "Custom weight for each instance type (only valid in weight capacity unit)\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "instanceType": {
                                      "type": "string",
                                      "description": "The instance type to customize its weight\n",
                                      "example": "c4.large"
                                    },
                                    "weightedCapacity": {
                                      "type": "integer",
                                      "description": "The weight\n",
                                      "example": 8
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "subnetIds": {
                            "type": "array",
                            "description": "A comma-separated list of subnet identifiers for your group.\nWhen this parameter is set, compute.availabilityZones should be left unused.\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "subnet-4c1d1538",
                                "subnet-2791bb61",
                                "subnet-703a6f58",
                                "subnet-c62846fc"
                              ]
                            }
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "One or more availability Zones for the group.\nWhen this parameter is set, compute.subnetIds should be left unused.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The Availability Zone name\n",
                                  "example": "us-west-2a"
                                },
                                "subnetIds": {
                                  "type": "array",
                                  "description": "A comma-separated list of subnet identifiers for your group.\n",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "subnet-4333093a"
                                    ]
                                  }
                                },
                                "placementGroupName": {
                                  "type": "string",
                                  "description": "specify a Placement Group name, the instances will be launched in the Placement Group for the AZ.\n"
                                }
                              }
                            }
                          },
                          "preferredAvailabilityZones": {
                            "type": "array",
                            "description": "The AZs to prioritize when launching Spot instances.\nIf no markets are available in the Preferred AZs, Spot instances are launched in the non-preferred AZs.\n* Must be a sublist of compute.AvailabilityZones\n* strategy.availabilityVsCost must not be equalAzDistribution\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "us-east-1a",
                                "us-east-1b"
                              ]
                            }
                          },
                          "launchSpecification": {
                            "type": "object",
                            "properties": {
                              "creditSpecification": {
                                "type": "object",
                                "description": "creditSpecification is a parameter that indicates in what mode t2/t3 instances will be launched with. It consists of one key: cpuCredits (String)\n",
                                "properties": {
                                  "cpuCredits": {
                                    "type": "string",
                                    "enum": [
                                      "unlimited",
                                      "standard"
                                    ],
                                    "example": "unlimited"
                                  }
                                }
                              },
                              "loadBalancersConfig": {
                                "type": "object",
                                "description": "Elastic Load Balancers configurations\n",
                                "properties": {
                                  "loadBalancers": {
                                    "type": "array",
                                    "description": "List of classic load balancers and/or application load balancer target groups and/or Multai load balancer target sets\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The AWS resource name. Required for Classic Load Balancer. Optional for Application Load Balancer.\n",
                                          "example": "MyTargetGroup"
                                        },
                                        "arn": {
                                          "type": "string",
                                          "description": "The AWS resource ARN (Required only for ALB target groups)\n",
                                          "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup/MyTargetGroup/1fe63217f8ff1234"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The resource type.\n",
                                          "enum": [
                                            "CLASSIC",
                                            "TARGET_GROUP",
                                            "MULTAI_TARGET_SET"
                                          ],
                                          "example": "TARGET_GROUP"
                                        },
                                        "balancerId": {
                                          "type": "string",
                                          "description": "The Multai load balancer ID\n",
                                          "example": "lb-123456789"
                                        },
                                        "targetSetId": {
                                          "description": "The Multai load target set ID\n",
                                          "type": "string",
                                          "example": "ts-123456789"
                                        },
                                        "azAwerness": {
                                          "description": "`AZ Awareness` will ensure that instances within the same AZ are using the corresponding MLB runtime instance in the same AZ. This feature reduces multi-zone data transfer fees\n",
                                          "type": "boolean",
                                          "example": false
                                        },
                                        "autoWeight": {
                                          "description": "`Auto Weight` will automatically provide a higher weight for instances that are larger as appropriate. For example, if you have configured your Elastigroup with m4.large and m4.xlarge instances the m4.large will have half the weight of an m4.xlarge. This ensures that larger instances receive a higher number of MLB requests\n",
                                          "type": "boolean",
                                          "example": true
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "healthCheckType": {
                                "type": "string",
                                "description": "The service to use for the health check.\n",
                                "enum": [
                                  "ELB",
                                  "HCS",
                                  "TARGET_GROUP",
                                  "MLB",
                                  "ECS_CLUSTER_INSTANCE",
                                  "EC2",
                                  "OPSWORKS",
                                  "MULTAI_TARGET_SET",
                                  "K8S_NODE",
                                  "NOMAD_NODE"
                                ],
                                "example": "EC2"
                              },
                              "healthCheckGracePeriod": {
                                "type": "integer",
                                "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n",
                                "default": 300,
                                "example": 600
                              },
                              "healthCheckUnhealthyDurationBeforeReplacement": {
                                "type": "integer",
                                "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\nAfter the set time out the instance will be replaced\n",
                                "example": 60
                              },
                              "securityGroupIds": {
                                "type": "array",
                                "description": "One or more security group IDs. In case of update it will override the existing Security Group with the new given array\n",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "sg-0dfc2c8760df6fec7"
                                  ]
                                }
                              },
                              "monitoring": {
                                "type": "boolean",
                                "description": "Describes whether instance Enhanced Monitoring is enabled\n",
                                "example": false
                              },
                              "ebsOptimized": {
                                "type": "boolean",
                                "description": "Enable EBS optimization for supported instance which is not enabled by default.\nNote - additional charges will be applied.\n",
                                "example": false
                              },
                              "imageId": {
                                "type": "string",
                                "description": "The ID of the image used to launch the instance.\n* The following instance types are supported by HVM image: M3, M4, C3, C4, D2, G2, R3, CC2, CC1, CG1, CR1.\n* The following instance types are supported by PV image: M1, M2, M3, C1, C3.\n* In case of conflict between Instance type to image type, an error message will be returned\n",
                                "example": "ami-01e24be29428c15b2"
                              },
                              "keyPair": {
                                "type": "string",
                                "description": "Specify a Key Pair to attach to the instances\n",
                                "example": "labs-oregon"
                              },
                              "blockDeviceMappings": {
                                "type": "array",
                                "description": "Array list of block devices that are exposed to the instance, You can specify virtual devices and EBS volumes.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "deviceName": {
                                      "type": "string",
                                      "description": "Set device name\n",
                                      "example": "/dev/xvdcz"
                                    },
                                    "ebs": {
                                      "type": "object",
                                      "description": "Set EBS properties\n",
                                      "properties": {
                                        "iops": {
                                          "type": "integer",
                                          "minimum": 0,
                                          "description": "Must be greater than or equal to 0\n",
                                          "example": 0
                                        },
                                        "throughput": {
                                          "type": "integer",
                                          "minimum": 125,
                                          "maximum": 1000,
                                          "example": 125,
                                          "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=âgp3â.\n"
                                        },
                                        "volumeType": {
                                          "type": "string",
                                          "description": "Set volume type\n",
                                          "example": "gp2"
                                        },
                                        "deleteOnTermination": {
                                          "type": "boolean",
                                          "description": "Flag to delete the EBS on instance termination\n",
                                          "example": true
                                        },
                                        "volumeSize": {
                                          "type": "integer",
                                          "description": "Set volume size (in GB). When using this property - don't use dynamicVolumeSize.\nVolume size should be greater or equal than the size configured in the AMI\n",
                                          "example": 12
                                        },
                                        "dynamicVolumeSize": {
                                          "type": "object",
                                          "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                          "properties": {
                                            "baseSize": {
                                              "type": "integer",
                                              "description": "Initial size for volume\n",
                                              "example": 50
                                            },
                                            "resource": {
                                              "type": "string",
                                              "example": "CPU"
                                            },
                                            "sizePerResourceUnit": {
                                              "type": "integer",
                                              "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be: 90GB\n",
                                              "example": 20
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "networkInterfaces": {
                                "type": "array",
                                "description": "List of network interfaces in an EC2 instance.\nIf you define network interface, please pay attention to omit these properties from other sections in this JSON and set them here: subnetId - compute.availabilityZones\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "description": "The description of the network interface. Applies only if creating a network interface when launching an instance.\n"
                                    },
                                    "deviceIndex": {
                                      "type": "integer",
                                      "description": "The position of the network interface in the attachment order.\nA primary network interface has a device index of 0.\nIf you specify a network interface when launching an instance, you must specify the device index.\n",
                                      "example": 0
                                    },
                                    "secondaryPrivateIpAddressCount": {
                                      "type": "integer",
                                      "description": "The number of secondary private IPv4 addresses to assign to a network interface.\nWhen you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range.\nYou can't specify this option and specify more than one private IP address using privateIpAddresses.\nThe number of IP addresses you can assign to a network interface varies by instance type.\nFor more information, see IP Addresses Per ENI Per Instance Type in the Amazon Virtual Private Cloud User Guide.\n"
                                    },
                                    "associatePublicIpAddress": {
                                      "type": "boolean",
                                      "description": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC.\nThe public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one.\nYou cannot specify more than one network interface in the request.\nIf launching into a default subnet, the default value is true.\n",
                                      "example": true
                                    },
                                    "deleteOnTermination": {
                                      "type": "boolean",
                                      "description": "If set to true, the interface is deleted when the instance is terminated.\nYou can specify true only if creating a new network interface when launching an instance.\n"
                                    },
                                    "networkInterfaceId": {
                                      "type": "string",
                                      "description": "The ID of the network interface. Used to attach the specified network interface to the instance.\n"
                                    },
                                    "privateIpAddresses": {
                                      "type": "array",
                                      "description": "One or more private IPv4 addresses to assign to the network interface.\nOnly one private IPv4 address can be designated as primary.\nYou cannot specify this option if you're launching more than one instance in a RunInstances request.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "privateIpAddress": {
                                            "type": "string",
                                            "description": "The private IPv4 address.\n"
                                          },
                                          "primary": {
                                            "type": "boolean",
                                            "description": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.\n"
                                          }
                                        }
                                      }
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "description": "The ID of the subnet to associate with the network interface.\nRequired when creating a new Network Interface, and not attaching an existing one via networkInterfaceId.\n"
                                    },
                                    "associateIpv6Address": {
                                      "type": "boolean",
                                      "description": "Indicates whether to assign an IPv6 address. Amazon EC2 chooses the IPv6 addresses from the range of the subnet.\n"
                                    }
                                  }
                                }
                              },
                              "iamRole": {
                                "type": "object",
                                "description": "The instance profile iamRole\n",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The iamRole name\n",
                                    "example": "my-iamRole"
                                  }
                                }
                              },
                              "userData": {
                                "type": "string",
                                "format": "byte",
                                "description": "The Base64-encoded MIME user data to make available to the instances\n",
                                "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                              },
                              "shutdownScript": {
                                "type": "string",
                                "format": "byte",
                                "description": "The Base64-encoded shutdown script to execute prior to instance termination. For more information please see: [Shutdown Script](https://docs.spot.io/integration-docs/elastigroup/concepts/compute-concepts/shutdown-scripts/)\n",
                                "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "tagKey": {
                                      "type": "string",
                                      "description": "The tag's key\n",
                                      "example": "Creator"
                                    },
                                    "tagValue": {
                                      "type": "string",
                                      "description": "The tag's value\n",
                                      "example": "John Doe"
                                    }
                                  }
                                }
                              },
                              "metadataOptions": {
                                "title": "Metadata Options",
                                "type": "object",
                                "description": "Optional field. Used for IMDSv2. In Create route can't be null. In Update route can be null.",
                                "required": [
                                  "httpTokens"
                                ],
                                "properties": {
                                  "httpTokens": {
                                    "title": "HTTP Tokens",
                                    "type": "string",
                                    "description": "Required for IMDSv2. Canât be null in Create or Update. Values can be \"optional\" or \"required\".",
                                    "example": "optional"
                                  },
                                  "httpPutResponseHopLimit": {
                                    "type": "integer",
                                    "example": "33",
                                    "description": "An integer within 1,64 range (including).\nThe desired HTTP PUT response hop limit for instance metadata requests.\nThe larger the number, the further instance metadata requests can travel.\n"
                                  }
                                }
                              },
                              "cpuOptions": {
                                "title": "CPU options",
                                "type": "object",
                                "description": "Optional field. The CPU options for the instances that are launched within the group.",
                                "required": [
                                  "threadsPerCore"
                                ],
                                "properties": {
                                  "threadsPerCore": {
                                    "title": "thread per core",
                                    "type": "integer",
                                    "example": "1",
                                    "description": "The number of threads per CPU core.\nTo disable multithreading for the instances, specify a value of 1 .\nOtherwise, specify the default value of 2 .\n"
                                  }
                                }
                              },
                              "resourceTagSpecification": {
                                "type": "object",
                                "description": "Optional field. User will specified which resources should be tagged with group tags.",
                                "properties": {
                                  "volumes": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for Volume resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. Volume resources will be tagged with group tags.",
                                        "default": false,
                                        "example": false
                                      }
                                    }
                                  },
                                  "snapshots": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for Snapshot resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. Snapshot resources will be tagged with group tags.",
                                        "default": true,
                                        "example": true
                                      }
                                    }
                                  },
                                  "enis": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for ENI resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. ENI resources will be tagged with group tags.",
                                        "default": false,
                                        "example": false
                                      }
                                    }
                                  },
                                  "amis": {
                                    "type": "object",
                                    "description": "Optional field. Tag specification for AMI resources.",
                                    "properties": {
                                      "shouldTag": {
                                        "type": "boolean",
                                        "description": "Optional field. AMI resources will be tagged with group tags.",
                                        "default": true,
                                        "example": true
                                      }
                                    }
                                  }
                                }
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "description": "Optional field. Auto-healing replacement won't be triggered if this parameter value is \"false\".\nIn a case of a stateful group - no recycling will start if this parameter value is \"false\".\n",
                                "default": true,
                                "example": true
                              }
                            }
                          }
                        }
                      },
                      "scaling": {
                        "type": "object",
                        "title": "Elastigroup Scaling",
                        "properties": {
                          "up": {
                            "type": "object",
                            "properties": {
                              "policyName": {
                                "type": "string",
                                "description": "The policy name\n",
                                "example": "my-up-policy"
                              },
                              "metricName": {
                                "type": "string",
                                "description": "The name of the metric.\n",
                                "default": "CPUUtilization",
                                "example": "CPUUtilization"
                              },
                              "statistic": {
                                "type": "string",
                                "description": "The metric statistics to return.\n",
                                "enum": [
                                  "average",
                                  "sum",
                                  "sampleCount",
                                  "maximum",
                                  "minimum",
                                  "percentile"
                                ],
                                "example": "average"
                              },
                              "extendedStatistic": {
                                "type": "string",
                                "description": "Percentile statistic. Valid values: p0.1 - p100\n",
                                "example": "p1.5"
                              },
                              "unit": {
                                "type": "string",
                                "description": "The unit for the alarm's associated metric.\n",
                                "enum": [
                                  "seconds",
                                  "microseconds",
                                  "milliseconds",
                                  "bytes",
                                  "kilobytes",
                                  "megabytes",
                                  "gigabytes",
                                  "terabytes",
                                  "bits",
                                  "kilobits",
                                  "megabits",
                                  "gigabits",
                                  "terabits",
                                  "percent",
                                  "count",
                                  "bytes/second",
                                  "kilobytes/second",
                                  "megabytes/second",
                                  "gigabytes/second",
                                  "terabytes/second",
                                  "bits/second",
                                  "kilobits/second",
                                  "megabits/second",
                                  "gigabits/second",
                                  "terabits/second",
                                  "count/second",
                                  "none"
                                ],
                                "example": "percent"
                              },
                              "threshold": {
                                "type": "integer",
                                "description": "The value against which the specified statistic is compared\n",
                                "example": 90
                              },
                              "action": {
                                "type": "object",
                                "example": "adjustment",
                                "description": "The action to take when scale up is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"setMinTarget\", \"updateCapacity\".\n",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the action to take when scale up is needed.\n",
                                    "enum": [
                                      "adjustment",
                                      "updateCapacity setMinTarget",
                                      "percentageAdjustment"
                                    ],
                                    "example": "updateCapacity"
                                  },
                                  "adjustment": {
                                    "type": "integer",
                                    "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                    "example": 1
                                  },
                                  "minTargetCapacity": {
                                    "type": "integer",
                                    "description": "The number with the target capacity needed.\nRequired if using `setMinTarget` as action type\n",
                                    "example": 1
                                  },
                                  "target": {
                                    "type": "integer",
                                    "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are not defined.\n",
                                    "example": 1
                                  },
                                  "minimum": {
                                    "type": "integer",
                                    "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are not defined\n",
                                    "example": 0
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are not defined\n",
                                    "example": 5
                                  }
                                }
                              },
                              "namespace": {
                                "type": "string",
                                "description": "The namespace for the alarm's associated metric.\n",
                                "default": "AWS/EC2"
                              },
                              "dimentions": {
                                "type": "array",
                                "description": "The dimensions for the alarm's associated metric.\nIf the user mentioned name as instanceId, there is NO value\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "InstanceId"
                                    }
                                  }
                                }
                              },
                              "period": {
                                "type": "integer",
                                "description": "The period in seconds over which the statistic is applied.\n",
                                "example": 300
                              },
                              "evaluationPeriods": {
                                "type": "integer",
                                "description": "The number of periods over which data is compared to the specified threshold.\n",
                                "example": 1
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n",
                                "example": 300
                              },
                              "operator": {
                                "type": "string",
                                "description": "The operator to use in order to determine if the scaling policy is applicable.\n",
                                "enum": [
                                  "gt",
                                  "gte",
                                  "lt",
                                  "lte"
                                ],
                                "example": "gte"
                              },
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                "default": true,
                                "example": true
                              }
                            }
                          },
                          "down": {
                            "type": "object",
                            "properties": {
                              "policyName": {
                                "type": "string",
                                "description": "The policy name\n",
                                "example": "my-down-policy"
                              },
                              "metricName": {
                                "type": "string",
                                "description": "The name of the metric.\n",
                                "default": "CPUUtilization",
                                "example": "CPUUtilization"
                              },
                              "statistic": {
                                "type": "string",
                                "description": "The metric statistics to return.\n",
                                "enum": [
                                  "average",
                                  "sum",
                                  "sampleCount",
                                  "maximum",
                                  "minimum",
                                  "percentile"
                                ],
                                "example": "average"
                              },
                              "extendedStatistic": {
                                "type": "string",
                                "description": "Percentile statistic. Valid values: p0.1 - p100\n",
                                "example": "p1.5"
                              },
                              "unit": {
                                "type": "string",
                                "description": "The unit for the alarm's associated metric.\n",
                                "enum": [
                                  "seconds",
                                  "microseconds",
                                  "milliseconds",
                                  "bytes",
                                  "kilobytes",
                                  "megabytes",
                                  "gigabytes",
                                  "terabytes",
                                  "bits",
                                  "kilobits",
                                  "megabits",
                                  "gigabits",
                                  "terabits",
                                  "percent",
                                  "count",
                                  "bytes/second",
                                  "kilobytes/second",
                                  "megabytes/second",
                                  "gigabytes/second",
                                  "terabytes/second",
                                  "bits/second",
                                  "kilobits/second",
                                  "megabits/second",
                                  "gigabits/second",
                                  "terabits/second",
                                  "count/second",
                                  "none"
                                ],
                                "example": "percent"
                              },
                              "threshold": {
                                "type": "integer",
                                "description": "The value against which the specified statistic is compared\n",
                                "example": 90
                              },
                              "action": {
                                "type": "object",
                                "example": "adjustment",
                                "description": "The action to take when scale up is needed.\nA mandatory field, that should be filled with one of the following:\n\"adjustment\", \"percentageAdjustment\", \"setMaxTarget\", \"setMinTarget\", \"updateCapacity\".\n",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The type of the action to take when scale up is needed.\n",
                                    "enum": [
                                      "adjustment",
                                      "updateCapacity setMinTarget",
                                      "percentageAdjustment"
                                    ],
                                    "example": "updateCapacity"
                                  },
                                  "adjustment": {
                                    "type": "integer",
                                    "description": "The number / percentage associated with the specified adjustment type.\nRequired if using `adjustment` or `percentageAdjustment` as action type\n",
                                    "example": 1
                                  },
                                  "minTargetCapacity": {
                                    "type": "integer",
                                    "description": "The number with the target capacity needed.\nRequired if using `setMinTarget` as action type\n",
                                    "example": 1
                                  },
                                  "target": {
                                    "type": "integer",
                                    "description": "The desired number of instances. Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are not defined.\n",
                                    "example": 1
                                  },
                                  "minimum": {
                                    "type": "integer",
                                    "description": "The lower limit number of instances that you can scale down to. Optional, required if using `updateCapacity` as action type and neither `target` nor `maximum` are not defined\n",
                                    "example": 0
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "The upper limit number of instances that you can scale up to. Optional, required if using `updateCapacity` as action type and neither `target` nor `minimum` are not defined\n",
                                    "example": 5
                                  }
                                }
                              },
                              "namespace": {
                                "type": "string",
                                "description": "The namespace for the alarm's associated metric.\n",
                                "default": "AWS/EC2"
                              },
                              "dimentions": {
                                "type": "array",
                                "description": "The dimensions for the alarm's associated metric.\nIf the user mentioned name as instanceId, there is NO value\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "InstanceId"
                                    }
                                  }
                                }
                              },
                              "period": {
                                "type": "integer",
                                "description": "The period in seconds over which the statistic is applied.\n",
                                "example": 300
                              },
                              "evaluationPeriods": {
                                "type": "integer",
                                "description": "The number of periods over which data is compared to the specified threshold.\n",
                                "example": 1
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n",
                                "example": 300
                              },
                              "operator": {
                                "type": "string",
                                "description": "The operator to use in order to determine if the scaling policy is applicable.\n",
                                "enum": [
                                  "gt",
                                  "gte",
                                  "lt",
                                  "lte"
                                ],
                                "example": "gte"
                              },
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Specifies whether the scaling policy described in this block is enabled.\n",
                                "default": true,
                                "example": true
                              }
                            }
                          },
                          "target": {
                            "type": "object",
                            "properties": {
                              "policyName": {
                                "type": "string",
                                "description": "The policy name\n",
                                "example": "my-up-policy"
                              },
                              "metricName": {
                                "type": "string",
                                "description": "The name of the metric.\n",
                                "default": "CPUUtilization",
                                "example": "CPUUtilization"
                              },
                              "statistic": {
                                "type": "string",
                                "description": "The metric statistics to return.\n",
                                "enum": [
                                  "average",
                                  "sum",
                                  "sampleCount",
                                  "maximum",
                                  "minimum",
                                  "percentile"
                                ],
                                "example": "average"
                              },
                              "unit": {
                                "type": "string",
                                "description": "The unit for the alarm's associated metric.\n",
                                "enum": [
                                  "seconds",
                                  "microseconds",
                                  "milliseconds",
                                  "bytes",
                                  "kilobytes",
                                  "megabytes",
                                  "gigabytes",
                                  "terabytes",
                                  "bits",
                                  "kilobits",
                                  "megabits",
                                  "gigabits",
                                  "terabits",
                                  "percent",
                                  "count",
                                  "bytes/second",
                                  "kilobytes/second",
                                  "megabytes/second",
                                  "gigabytes/second",
                                  "terabytes/second",
                                  "bits/second",
                                  "kilobits/second",
                                  "megabits/second",
                                  "gigabits/second",
                                  "terabits/second",
                                  "count/second",
                                  "none"
                                ],
                                "example": "percent"
                              },
                              "namespace": {
                                "type": "string",
                                "description": "The namespace for the alarm's associated metric.\n",
                                "default": "AWS/EC2"
                              },
                              "target": {
                                "type": "integer",
                                "description": "The target value for the group\n",
                                "example": 1
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start.\n",
                                "example": 300
                              }
                            }
                          }
                        }
                      },
                      "scheduling": {
                        "type": "object",
                        "title": "Elastigroup Scheduling",
                        "description": "Schedule tasks to execute, using CRON expressions.\n",
                        "properties": {
                          "tasks": {
                            "type": "array",
                            "description": "The scheduling tasks for the group.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "description": "Describes whether the task is enabled. When true the task should run when false it should not run.\n",
                                  "example": true
                                },
                                "startTime": {
                                  "type": "string",
                                  "description": "DATETIME in ISO-8601 format and is in UTC time. Sets a start time for scheduled actions.\nIf \"frequency\" or \"cronExpression\" are not used - the task will run only once at the start time and will then be deleted from the group configuration.\n",
                                  "example": "2018-05-23T10:55:09Z"
                                },
                                "frequency": {
                                  "type": "string",
                                  "description": "The recurrence frequency to run this task.\nOnly one of âfrequency' or âcronExpression' should be used at a time\n",
                                  "enum": [
                                    "hourly",
                                    "daily",
                                    "weekly"
                                  ],
                                  "example": "hourly"
                                },
                                "cronExpression": {
                                  "type": "string",
                                  "description": "A valid cron expression.\nThe cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script.\nOnly one of âfrequency' or âcronExpression' should be used at a time.\n",
                                  "example": "0 1 * * *"
                                },
                                "taskType": {
                                  "type": "string",
                                  "description": "The task type to run.\n",
                                  "enum": [
                                    "backup_ami",
                                    "scale",
                                    "scaleUp",
                                    "roll",
                                    "statefulUpdateCapacity",
                                    "statefulRecycle",
                                    "clusterRoll (For ECS Integration)"
                                  ],
                                  "example": "scale"
                                },
                                "scaleTargetCapacity": {
                                  "type": "integer",
                                  "description": "The target capacity of the group.\nShould be used when choosing âtaskType' of âscale'.\n"
                                },
                                "scaleMinCapacity": {
                                  "type": "integer",
                                  "description": "The min capacity of the group.\nShould be used when choosing âtaskType' of âscale'.\n"
                                },
                                "scaleMaxCapacity": {
                                  "type": "integer",
                                  "description": "The max capacity of the group.\nRequired when âtaskType' is âscale'.\n"
                                },
                                "targetCapacity": {
                                  "type": "integer",
                                  "description": "Set a new target capacity for the Elastigroup.\nRequired when âtaskType' is âstatefulUpdateCapacity'.\n"
                                },
                                "MinCapacity": {
                                  "type": "integer",
                                  "description": "Set a new minimum capacity for the Elastigroup.\nRequired when âtaskType' is âstatefulUpdateCapacity'.\n"
                                },
                                "MaxCapacity": {
                                  "type": "integer",
                                  "description": "Set a new maximum capacity for the Elastigroup.\nRequired when âtaskType' is âstatefulUpdateCapacity'.\n"
                                },
                                "batchSizePercentage": {
                                  "type": "integer",
                                  "description": "The percentage size of each batch in the scheduled deployment roll.\nRequired when the taskType is roll.\n"
                                }
                              }
                            }
                          }
                        }
                      },
                      "thirdPartiesIntegration": {
                        "type": "object",
                        "title": "Elastigroup Third Party Integrations",
                        "description": "All definitions for using third-party Integrations\n",
                        "properties": {
                          "ecs": {
                            "type": "object",
                            "description": "ECS integration object.\n",
                            "properties": {
                              "clusterName": {
                                "type": "string",
                                "example": "test-ecs",
                                "description": "ECS cluster name\n"
                              },
                              "autoScale": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                              },
                              "batch": {
                                "type": "object",
                                "properties": {
                                  "jobQueueNames": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "dumpy-big-processing"
                                      ]
                                    }
                                  }
                                }
                              },
                              "optimizeImages": {
                                "type": "object",
                                "properties": {
                                  "shouldOptimizeEcsAmi": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "performAt": {
                                    "type": "string",
                                    "description": "Settings for maintenance strategy.\\\nperformAt of type: 'never' OR 'timeWindow' can only be applied to groups with \"availabilityOriented\" OR groups with \"persistence\",\\\nother groups allow either 'always' type or nothing which also means always.\n",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ],
                                    "example": "timeWindow",
                                    "default": "always"
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "When performAt is 'timeWindow':\\\nmust specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm\n* ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat\n* hh = hour 24 = 0 -23\n* mm = minute = 0 - 59\n",
                                    "items": {
                                      "type": "string",
                                      "example": "Mon:03:00-Wed:02:30"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "rancher": {
                            "type": "object",
                            "description": "All definitions for using Rancher Labs integration.\n",
                            "properties": {
                              "masterHost": {
                                "type": "string",
                                "description": "Rancher master url\n",
                                "example": "http://myRancher.com:8080/v1"
                              },
                              "accessKey": {
                                "type": "string",
                                "description": "Rancher version\n",
                                "example": "1",
                                "default": "1"
                              },
                              "secretKey": {
                                "type": "string",
                                "example": "SECRET"
                              },
                              "version": {
                                "type": "string",
                                "example": 1
                              }
                            }
                          },
                          "kubernetes": {
                            "type": "object",
                            "properties": {
                              "integrationMode": {
                                "type": "string",
                                "example": "pod"
                              },
                              "clusterIdentifier": {
                                "type": "string",
                                "example": "test-k8s"
                              },
                              "autoScale": {
                                "type": "object",
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "down": {
                                    "type": "object",
                                    "description": "Auto Scaling scale down operations.\n",
                                    "properties": {
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "example": 5
                                      },
                                      "maxScaleDownPercentage": {
                                        "type": "integer",
                                        "description": "The maximum % of nodes that will be scaled down at once out of the total amount of potential nodes to scale down.\nexample: if 10 nodes can be scaled down, only 5 will be given 50% in this parameter.\nthe other 50% will be scaled down in the next autoscaling iteration.\n",
                                        "example": 70
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                            "example": 2048
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                            "example": 3
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                            "example": 2
                                          },
                                          "gpuPerUnit": {
                                            "type": "integer",
                                            "example": 2
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "labels": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "group, kops.k8s.io/instancegroup"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "microservices"
                                        }
                                      }
                                    }
                                  },
                                  "isAutoConfig": {
                                    "type": "boolean",
                                    "example": false,
                                    "default": false
                                  }
                                }
                              }
                            }
                          },
                          "mesosphere": {
                            "type": "object",
                            "properties": {
                              "apiServer": {
                                "type": "string",
                                "example": "1.2.3.4"
                              }
                            }
                          },
                          "mlbRuntime": {
                            "type": "object",
                            "properties": {
                              "deploymentId": {
                                "type": "string",
                                "example": "dp-rm0f5b912345"
                              }
                            }
                          },
                          "nomad": {
                            "type": "object",
                            "properties": {
                              "masterHost": {
                                "type": "string",
                                "example": "https://master.host.com"
                              },
                              "masterPort": {
                                "type": "integer",
                                "example": 443
                              },
                              "autoScale": {
                                "type": "object",
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "description": "Enable the Autoscaler.\n",
                                    "example": true
                                  },
                                  "cooldown": {
                                    "type": "integer",
                                    "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180\n",
                                    "example": 180
                                  },
                                  "down": {
                                    "type": "object",
                                    "description": "Auto Scaling scale down operations.\n",
                                    "properties": {
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "example": 3
                                      }
                                    }
                                  },
                                  "headroom": {
                                    "type": "object",
                                    "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                    "properties": {
                                      "cpuPerUnit": {
                                        "type": "integer",
                                        "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                        "example": 2048
                                      },
                                      "memoryPerUnit": {
                                        "type": "integer",
                                        "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                        "example": 3
                                      },
                                      "numOfUnits": {
                                        "type": "integer",
                                        "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                        "example": 2
                                      }
                                    }
                                  },
                                  "constraints": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "${node.class}"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "value"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "aclToken": {
                                "type": "string",
                                "example": 123
                              },
                              "tlsConfig": {
                                "type": "object",
                                "description": "Configuration object for TLS integration. (optional)\n",
                                "properties": {
                                  "tlsEnabled": {
                                    "type": "boolean",
                                    "description": "When true, all communication to the master is with TLS. (required)\n",
                                    "example": true
                                  },
                                  "privateKey": {
                                    "type": "string",
                                    "description": "A generated client private key. (required)\n",
                                    "example": "PRIVATE KEY CERTIFICATE STR"
                                  },
                                  "certificate": {
                                    "type": "string",
                                    "description": "The certificates chain, first the client certificate then the ca certificate. (required)\n",
                                    "example": "PUBLIC KEY CERTIFICATE STR"
                                  }
                                }
                              }
                            }
                          },
                          "chef": {
                            "type": "object",
                            "properties": {
                              "chefServer": {
                                "type": "string",
                                "example": "https://master.host.com"
                              },
                              "organization": {
                                "type": "string",
                                "example": "ORGNAME"
                              },
                              "chefVersion": {
                                "type": "string",
                                "example": 12.1
                              },
                              "user": {
                                "type": "string",
                                "example": "User"
                              },
                              "pemKey": {
                                "type": "string",
                                "example": "Key"
                              }
                            }
                          },
                          "rightScale": {
                            "type": "object",
                            "properties": {
                              "accountId": {
                                "type": "string",
                                "example": "ID"
                              },
                              "refreshToken": {
                                "type": "string",
                                "example": "TOKEN"
                              },
                              "region": {
                                "type": "string",
                                "example": "us-east-1"
                              }
                            }
                          },
                          "route53": {
                            "type": "object",
                            "description": "Route53 integration object.\n",
                            "properties": {
                              "domains": {
                                "type": "array",
                                "description": "Route53 domain configurations.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostedZoneId": {
                                      "type": "string",
                                      "description": "The Route53 Hosted Zone ID for the registered domain.\n",
                                      "example": "Z3UFMBCGJMYLUT"
                                    },
                                    "spotinstAccountId": {
                                      "type": "string",
                                      "description": "The Spot account ID that is linked to the AWS account that holds the Route53 hosted Zone ID.\nThe default is the user Spot account provided as a URL parameter.\n",
                                      "example": "act-1234abcd"
                                    },
                                    "recordSetType": {
                                      "type": "string",
                                      "description": "Set the type of recordSet to update.\nValid values:\n* \"a\" - means register and de-register of instances done by IP address (IPv4).\nWhen it is \"a\" you should also specify usePublicIp.\n* \"cname\" - register and de-register of instances done by CNAME. When it is \"cname\", you should also specify usePublicDns.\n",
                                      "enum": [
                                        "a",
                                        "cname"
                                      ],
                                      "example": "a",
                                      "default": "a"
                                    },
                                    "recordSets": {
                                      "type": "array",
                                      "description": "List of record sets.\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the recordSet.\n",
                                            "example": "testcname.spot.io."
                                          },
                                          "usePublicIp": {
                                            "type": "boolean",
                                            "description": "Defines whether to use public or private IP. Relevant only when recordSetType=a.\n",
                                            "example": true,
                                            "default": false
                                          },
                                          "usePublicDns": {
                                            "type": "boolean",
                                            "description": "Defines whether to use a public DNS or private DNS in the instance registration process.\nRelevant only when recordSetType=cname.\n* False=Create a new weighted CNAME recordset with same name and the instance Private DNS.\n* True=instances should be registered with public DNS.\n",
                                            "example": true,
                                            "default": false
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "dockerSwarm": {
                            "$ref": "#/paths/~1aws~1ec2~1group/post/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/thirdPartiesIntegration/properties/dockerSwarm"
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "readOnly": true,
                        "title": "Creation Time Indicator",
                        "description": "Creation Time Indicator",
                        "example": "2020-10-01T05:23:59.302Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "readOnly": true,
                        "title": "Update Time Indicator",
                        "description": "Update Time Indicator",
                        "example": "2020-10-01T05:23:59.302Z"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup AWS\n",
        "operationId": "elastigroupAwsDelete",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Delete",
                    "properties": {
                      "statefulDeallocation": {
                        "type": "object",
                        "title": "Stateful deallocation options",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes persistent images\n"
                          },
                          "shouldDeleteNetworkInterfaces": {
                            "type": "boolean",
                            "default": true,
                            "example": true,
                            "description": "For stateful groups, removes network interfaces\n"
                          },
                          "shouldDeleteVolumes": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes persistent volumes\n"
                          },
                          "shouldDeleteSnapshots": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "For stateful groups, removes snapshots\n"
                          }
                        }
                      },
                      "beanstalk": {
                        "type": "object",
                        "title": "Beanstalk Dellocation Options",
                        "properties": {
                          "rollbackToAsg": {
                            "type": "boolean",
                            "example": true,
                            "default": true,
                            "description": "For groups with Beanstalk integration, roll back the attached ASG to the state prior to integration.\n"
                          }
                        }
                      },
                      "amiBackup": {
                        "type": "object",
                        "title": "AMI Dellocation Options",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": false,
                            "default": false,
                            "description": "Mark if images collected during AMI Auto Backup should be deleted during group deletion\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delete Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3b750eff-3940-46b3-a309-aa2b415272fd",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-98765",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-20T11:35:01.745Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Elastigroup",
        "description": "Describe a specific Elastigroup JSON\n",
        "operationId": "elastigroupAwsListElastigroup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-1234567",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sig-1234567"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "Name",
                                          "example": "EG"
                                        },
                                        "description": {
                                          "type": "string",
                                          "title": "Validation",
                                          "example": "validation"
                                        },
                                        "capacity": {
                                          "type": "object",
                                          "title": "Capacity",
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "title": "Min Capacity Amount",
                                              "example": 1
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "title": "Max Capacity Amount",
                                              "example": 1
                                            },
                                            "target": {
                                              "type": "integer",
                                              "title": "Target Amount",
                                              "example": 1
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "instance"
                                            }
                                          }
                                        },
                                        "strategy": {
                                          "type": "object",
                                          "title": "Strategy",
                                          "properties": {
                                            "risk": {
                                              "type": "integer",
                                              "title": "Risk",
                                              "example": 100
                                            },
                                            "onDemandCount": {
                                              "type": "integer",
                                              "title": "On Demand Count",
                                              "example": null
                                            },
                                            "availabilityVsCost": {
                                              "type": "string",
                                              "title": "Availability VS Cost",
                                              "example": "balanced"
                                            },
                                            "lifetimePeriod": {
                                              "type": "string",
                                              "title": "Life Time Period",
                                              "example": "days"
                                            },
                                            "fallbackToOd": {
                                              "type": "boolean",
                                              "title": "Fallback To On-Demand",
                                              "example": true
                                            },
                                            "persistence": {
                                              "type": "object",
                                              "title": "Fallback To On-Demand"
                                            },
                                            "revertToSpot": {
                                              "type": "object",
                                              "title": "Revert To Spot",
                                              "properties": {
                                                "performAt": {
                                                  "type": "string",
                                                  "title": "Perform At",
                                                  "example": "always"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "compute": {
                                          "type": "object",
                                          "title": "Compute",
                                          "properties": {
                                            "instanceTypes": {
                                              "type": "object",
                                              "title": "Insatnce Types",
                                              "properties": {
                                                "ondemand": {
                                                  "type": "string",
                                                  "title": "On Demand",
                                                  "example": "c3.4xlarge"
                                                },
                                                "spot": {
                                                  "type": "string",
                                                  "title": "On Demand",
                                                  "example": [
                                                    "c3.2xlarge",
                                                    "c4.2xlarge"
                                                  ]
                                                }
                                              }
                                            },
                                            "availabilityZones": {
                                              "type": "object",
                                              "title": "Availability Zones",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "title": "Name",
                                                  "example": "eu-west-1b"
                                                },
                                                "subnetIds": {
                                                  "type": "string",
                                                  "title": "SubnetIds",
                                                  "example": [
                                                    "eu-west-1b"
                                                  ]
                                                }
                                              }
                                            },
                                            "product": {
                                              "type": "object",
                                              "title": "Product",
                                              "example": "Linux/UNIX (Amazon VPC)"
                                            },
                                            "launchSpecification": {
                                              "type": "object",
                                              "title": "Launch Specification",
                                              "properties": {
                                                "loadBalancerNames": {
                                                  "type": "string",
                                                  "title": "Load Balancer Names",
                                                  "example": null
                                                },
                                                "loadBalancersConfig": {
                                                  "type": "object",
                                                  "title": "Load Balancers Config",
                                                  "properties": {
                                                    "loadBalancers": {
                                                      "type": "string",
                                                      "title": "Load Balancer Names",
                                                      "example": null
                                                    }
                                                  }
                                                },
                                                "healthCheckGracePeriod": {
                                                  "type": "integer",
                                                  "title": "Health Check Grace Period",
                                                  "example": 300
                                                },
                                                "securityGroupIds": {
                                                  "type": "string",
                                                  "title": "Security Groups IDs",
                                                  "example": [
                                                    "sg-1234567"
                                                  ]
                                                },
                                                "monitoring": {
                                                  "type": "boolean",
                                                  "title": "Monitoring",
                                                  "example": false
                                                },
                                                "ebsOptimized": {
                                                  "type": "boolean",
                                                  "title": "EBS Optimized",
                                                  "example": false
                                                },
                                                "imageId": {
                                                  "type": "boolean",
                                                  "title": "Image ID",
                                                  "example": "ami-1234567"
                                                },
                                                "iamRole": {
                                                  "type": "object",
                                                  "title": "IAM Role",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "title": "Name",
                                                      "example": null
                                                    },
                                                    "arn": {
                                                      "type": "string",
                                                      "title": "ARN",
                                                      "example": "arn:aws:iam::1234356789:instance-profile/Loader"
                                                    }
                                                  }
                                                },
                                                "keyPair": {
                                                  "type": "string",
                                                  "title": "Key Pair",
                                                  "example": "PA"
                                                },
                                                "userData": {
                                                  "type": "string",
                                                  "title": "User Data",
                                                  "example": "sldkfoisnfgodng"
                                                },
                                                "shutdownScript": {
                                                  "type": "string",
                                                  "title": "Shut Down Script",
                                                  "example": null
                                                },
                                                "tags": {
                                                  "type": "object",
                                                  "title": "Tags",
                                                  "properties": {
                                                    "tagKey": {
                                                      "type": "string",
                                                      "title": "Tag Key",
                                                      "example": "Env"
                                                    },
                                                    "tagValue": {
                                                      "type": "string",
                                                      "title": "Tag Value",
                                                      "example": "TEST"
                                                    }
                                                  }
                                                },
                                                "tenancy": {
                                                  "type": "string",
                                                  "title": "Tenancy",
                                                  "example": "default"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "scaling": {
                                          "type": "object",
                                          "title": "Scaling"
                                        },
                                        "scheduling": {
                                          "type": "object",
                                          "title": "Scheduling",
                                          "properties": {
                                            "tasks": {
                                              "type": "array",
                                              "title": "Tasks",
                                              "items": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "frequency": {
                                                      "type": "boolean",
                                                      "title": "Frequency",
                                                      "example": "hourly"
                                                    },
                                                    "taskType": {
                                                      "type": "string",
                                                      "title": "Task Type",
                                                      "example": "backup_ami"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "isEnabled": {
                                                      "type": "boolean",
                                                      "title": "Is Enabled",
                                                      "example": true
                                                    },
                                                    "taskType": {
                                                      "type": "boolean",
                                                      "title": "Task Type",
                                                      "example": "scale"
                                                    },
                                                    "cronExpression": {
                                                      "type": "string",
                                                      "title": "Cron Expression",
                                                      "example": "55 19 * * 0-4"
                                                    },
                                                    "scaleTargetCapacity": {
                                                      "type": "integer",
                                                      "title": "Scale Target Capacity",
                                                      "example": 1
                                                    },
                                                    "scaleMinCapacity": {
                                                      "type": "integer",
                                                      "title": "Scale Min Capacity",
                                                      "example": 1
                                                    },
                                                    "scaleMaxCapacity": {
                                                      "type": "integer",
                                                      "title": "Scale Max Capacity",
                                                      "example": 1
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "groupId": {
                                                      "type": "string",
                                                      "title": "Group Id",
                                                      "example": "sig-12345"
                                                    },
                                                    "eventType": {
                                                      "type": "string",
                                                      "title": "Event Type",
                                                      "example": "Scale"
                                                    },
                                                    "createdAt": {
                                                      "type": "string",
                                                      "title": "Created At",
                                                      "example": "2016-01-21T16:51:09.000+0000"
                                                    },
                                                    "subEvents": {
                                                      "type": "object",
                                                      "title": "Sub Event",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "title": "Type",
                                                          "example": "scaleUp"
                                                        },
                                                        "terminatedSpots": {
                                                          "type": "string",
                                                          "example": [
                                                            {
                                                              "spotInstanceRequestId": "sir-029404xk"
                                                            },
                                                            {
                                                              "instanceId": "i-7fb4facc"
                                                            }
                                                          ]
                                                        },
                                                        "terminatedInstances": {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "thirdPartiesIntegration": {
                                          "type": "object",
                                          "title": "Third Parties Integration"
                                        },
                                        "multai": {
                                          "type": "string",
                                          "title": "Multai",
                                          "example": null
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2015-10-23T09:00:00.000Z"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-08-01T14:11:39.000Z"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance": {
      "get": {
        "summary": "List Stateful Instances",
        "description": "List all stateful instances associated with the Elastigroup\n",
        "operationId": "listStatefulInstances",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "AWS Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "ssi-046b119c",
                                    "description": "ssi-046b119c\n"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-08878aad7f35d20f5",
                                    "description": "i-08878aad7f35d20f5\n"
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "172.31.30.122",
                                    "description": "172.31.30.122\n"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-082b5a644766e0e6f",
                                    "description": "ami-082b5a644766e0e6f\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "ACTIVE",
                                    "enum": [
                                      "ACTIVE",
                                      "PAUSE",
                                      "PAUSING",
                                      "PAUSED",
                                      "RESUME",
                                      "RESUMING",
                                      "RECYCLE",
                                      "RECYCLING",
                                      "DEALLOCATE",
                                      "DEALLOCATING",
                                      "DEALLOCATED",
                                      "ERROR"
                                    ],
                                    "description": "Possible values: <ul>ACTIVE The sateful instance is running.</li> <li>PAUSE Initiating a Pause action.</li> <li>PAUSING Pause in progress.</li> <li>PAUSED Stateful instance is Paused.</li> <li>RESUME Initiating a Resume action.</li> <li>RESUMING Resume in progress.</li> <li>RECYCLE Initiating a Recycle process.</li> <li>RECYCLING Recycle in progress.</li> <li>DEALLOCATE Initiating a Deallocate process.</li> <li>DEALLOCATING Deallocation in progress.</li> <li>DEALLOCATED Stateful instance is Deallocated.</li> <li>ERROR Error state.</ul>\n"
                                  },
                                  "devices": {
                                    "type": "array",
                                    "items": {
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "example": "/dev/xvda",
                                          "description": "/dev/xvda\n"
                                        },
                                        "volumeId": {
                                          "type": "string",
                                          "example": "vol-0bb1c83fb203ad686",
                                          "description": "vol-0bb1c83fb203ad686\n"
                                        },
                                        "snapshotId": {
                                          "type": "string",
                                          "example": "snap-0a2803e5e45d63c3a",
                                          "description": "snap-0a2803e5e45d63c3a\n"
                                        }
                                      }
                                    }
                                  },
                                  "launchedAt": {
                                    "type": "string",
                                    "example": "2019-12-10T08:01:43.000Z",
                                    "description": "2019-12-10T08:01:43.000Z\n"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2019-12-10T08:02:16.000Z",
                                    "description": "2019-12-10T08:02:16.000Z\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{StatefulInstanceId}/pause": {
      "put": {
        "summary": "Pause Stateful Instance",
        "description": "Pause a stateful instance\n",
        "operationId": "pauseStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "in": "path",
            "name": "statefulInstanceId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "exmaple": "ssi-227a0005",
            "description": "Stateful instance ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{StatefulInstanceId}/resume": {
      "put": {
        "summary": "Resume Stateful Instance",
        "description": "Resume a stateful instance\n",
        "operationId": "resumeStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BStatefulInstanceId%7D~1pause/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{StatefulInstanceId}/recycle": {
      "put": {
        "summary": "Recycle Stateful Instance",
        "description": "Recycle a stateful instance AWS\n",
        "operationId": "elastigroupAwsRecycleStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BStatefulInstanceId%7D~1pause/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/statefulInstance/{StatefulInstanceId}/deallocate": {
      "put": {
        "summary": "De-allocate Stateful Instance",
        "description": "De-allocate a stateful instance â delete all the resources associated with the instance (network interface, snapshots, volumes)\n",
        "operationId": "elastigroupAwsDeAllocateStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1statefulInstance~1%7BStatefulInstanceId%7D~1pause/put/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/statefulMigrationGroup": {
      "post": {
        "summary": "Import Stateful Instance",
        "description": "Create a new Stateful Elastigroup â this Elastigroup will have the same configuration and state of the imported instance.\n",
        "operationId": "importStatefulInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "statefulMigrationGroup"
                    ],
                    "properties": {
                      "statefulMigrationGroup": {
                        "type": "object",
                        "required": [
                          "shouldKeepPrivateIp",
                          "originalInstanceId",
                          "originalInstanceId",
                          "name"
                        ],
                        "properties": {
                          "originalInstanceId": {
                            "type": "string",
                            "example": "i-123c53d9f152a1234",
                            "description": "The originating Instance ID. This instance will be imported along with its State.\n"
                          },
                          "shouldKeepPrivateIp": {
                            "type": "Boolean",
                            "example": "false",
                            "description": "Setting this value to true will maintain the initial instance private IP. This will also require that the original instance be terminated in the import process incurring maintenance time. Note: This value must be false if you would like to configure availability zones and subnet ids.\n"
                          },
                          "shouldTerminateInstance": {
                            "type": "Boolean",
                            "description": "Decide if the instance termination should be automatic or manual. True = automatic termination. False = manual termination.\n",
                            "example": true
                          },
                          "name": {
                            "type": "string",
                            "example": "MyNewElastigroup",
                            "description": "Specify the new Elastigroup name.\n"
                          },
                          "product": {
                            "type": "string",
                            "example": "Linux/UNIX (Amazon VPC)",
                            "description": "Operation system type. Possible values: Linux/UNIX | SUSE | Linux Windows | Linux/UNIX (Amazon VPC) | SUSE Linux (Amazon VPC) | Windows (Amazon VPC).\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "description": "An Array holding the types of instances to be used in the Elastigroup.\n",
                            "items": {
                              "type": "string",
                              "example": "m3.large"
                            }
                          },
                          "region": {
                            "type": "string",
                            "example": "us-west-2",
                            "description": "Specify the AWS Region the instance is running in and the new Elastigroup will be created in.\n"
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "An Array holding an object of availabilityZones, this configures the availability zones the group may launch instances in. If this is not passed, the availability zone configuration is taken from the imported instance. Note: This field must be null if statefulMigrationGroup.shouldKeepPrivateIp is true, and must have a minimum of one availability zone.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "us-west-2b",
                                  "description": "This is the name of the Availability Zone, must be a valid availability zone name.\n"
                                },
                                "subnetIds": {
                                  "type": "array",
                                  "description": "This is the ids of the subnets, if this is not defined, then the default subnet for the availability zone is used.\n                Note: This field must be a valid subnet id, this field may be null.\n",
                                  "items": {
                                    "type": "string",
                                    "example": "subnet-12345678"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "smg-7f041234"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-1ed12345"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_START"
                                  },
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "originalInstanceId": {
                                        "type": "string",
                                        "example": "i-0a9c53d9f15212345"
                                      },
                                      "shouldKeepPrivateIp": {
                                        "type": "Boolean",
                                        "example": false
                                      },
                                      "shouldTerminateInstance": {
                                        "type": "Boolean",
                                        "example": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:statefulMigrationGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}": {
      "get": {
        "summary": "Get Stateful Import Status",
        "description": "Get the current status of the import process. Possible values are: <ul> <li>MIGRATE_PREPARE_AWS_INSTANCE</li> <li>MIGRATE_CREATE_IMAGE</li> <li>MIGRATE_AWAIT_FOR_IMAGE</li> <li>MIGRATE_AWAIT_USER_ACTION</li> <li>MIGRATE_TERMINATE_INSTANCE</li> <li>MIGRATE_AWAIT_INSTANCE_TERMINATION</li> <li>MIGRATE_UPDATE_GROUP</li> <li>MIGRATE_LAUNCH_INSTANCE</li> <li>MIGRATE_AWAIT_INSTANCE_RUNNING</li> <li>MIGRATE_RESUME_STATEFUL_INSTANCE</li> <li>MIGRATE_AWAIT_STATEFUL_INSTANCE_RUNNING</li> <li>MIGRATE_CANCEL</li> <li>MIGRATE_FINISH</li> <li>MIGRATE_ERROR</li>\n",
        "operationId": "getStatefulImportStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "statefulMigrationGroupID",
            "schema": {
              "type": "string"
            },
            "example": "smg-7f041234",
            "required": true,
            "description": "The Process ID you want to query\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "statefulMigrationId": {
                                    "type": "string",
                                    "description": "smg-07791234\n"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "description": "sig-cc6b1234\n"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "description": "i-05ab1b1c2b95a1234\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "MIGRATE_START\n"
                                  },
                                  "stateDescription": {
                                    "type": "string",
                                    "description": "Creating an image from the instance, Instance Id: i-05ab1b1c2b95a1234\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Stateful Import Status",
        "description": "Cancel the ongoing stateful import\n",
        "operationId": "deleteStatefulImportStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "statefulMigrationGroupID",
            "schema": {
              "type": "string"
            },
            "example": "smg-7f041234",
            "required": true,
            "description": "The Process ID you want to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "smg-07791234\n"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "description": "sig-cc6b1234\n"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "MIGRATE_CANCEL\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/statefulMigrationGroup/{statefulMigrationGroupId}/userAction": {
      "post": {
        "summary": "Terminate Stateful Instance During Import Process",
        "description": "Manually terminate the source stateful instance during an stateful instance import.\n",
        "operationId": "elastigroupAwsTerminateStatefulInstanceDuringImportProcess",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "statefulMigrationGroupID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The Process ID you want to terminate\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "userAction": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "terminate",
                            "description": "Valid values: \"terminate\"\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "userAction": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "smg-63d3c336"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-de019081"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_TERMINATE_INSTANCE"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/lock": {
      "post": {
        "summary": "Instance Lock",
        "description": "Set termination protection for specific instance\n",
        "operationId": "awsElastigroupInstanceLock",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "AWS Instance ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "ttlInMinutes",
            "example": "23",
            "description": "Specify a TTL (in minutes) for this lock, meaning, for how long the protection will be valid for.\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Lock Instances Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/lock",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/unlock": {
      "post": {
        "summary": "Instance Unlock",
        "description": "Remove the termination protection from specific instance\n",
        "operationId": "awsElastigroupInstanceUnlock",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1instance~1%7BinstanceId%7D~1lock/post/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Unlock Instances Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/unlock",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler": {
      "get": {
        "summary": "List All Scalers",
        "description": "List all MR Scalers and their configuration.",
        "operationId": "elastigroupAwsEmrListAll",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "title": "createdAt & updatedAt object",
                                    "properties": {
                                      "createdAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-10-10T10:50:29.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-11-01T10:50:29.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Scaler",
        "description": "Create a new EMR cluster.",
        "operationId": "elastigroupAwsEmrCreate",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "MRScaler object Wrapper",
                    "required": [
                      "mrScaler"
                    ],
                    "properties": {
                      "mrScaler": {
                        "required": [
                          "name",
                          "region",
                          "strategy"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "MRScaler name",
                            "example": "my MRScaler"
                          },
                          "description": {
                            "type": "string",
                            "description": "description for the MRScaler",
                            "example": "this is an MRScaler created with Spot"
                          },
                          "region": {
                            "type": "string",
                            "description": "The region of the source cluster",
                            "example": "us-west-2"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Strategy Object",
                            "description": "The strategy for creating the group. At least one of `wrapping`, `cloning`, or `new` is required.\n",
                            "properties": {
                              "wrapping": {
                                "type": "object",
                                "description": "Required unless either of `strategy.cloning` or `strategy.new` is specified. In wrap mode, MRScaler will manage an existing cluster and will scale up/down cluster task groups only. MRScaler will manage only instance groups that were created by Spot.\n",
                                "properties": {
                                  "sourceClusterId": {
                                    "type": "string",
                                    "example": "c-1234"
                                  }
                                }
                              },
                              "new": {
                                "type": "object",
                                "description": "Required unless `strategy.wrapping` or `strategy.cloning` is specified. In new mode, MRScaler will create a new cluster with the parameters specified in the request.\n",
                                "properties": {
                                  "releaseLabel": {
                                    "type": "string",
                                    "example": "emr-5.17.0"
                                  },
                                  "numberOfRetries": {
                                    "type": "integer",
                                    "example": 5
                                  }
                                }
                              },
                              "cloning": {
                                "type": "object",
                                "description": "Required unless either of `strategy.wrapping` or `strategy.new` is specified. In clone mode, MRScaler will create a new cluster that will be copied from the origin cluster. MRScaler will manage the entire cluster (the origin cluster will not be affected)\n",
                                "properties": {
                                  "originClusterId": {
                                    "type": "string",
                                    "description": "The ID of the cluster to clone",
                                    "example": "j-38EE27G2QY02I"
                                  },
                                  "includeSteps": {
                                    "type": "boolean",
                                    "description": "Include cloning of steps from the original cluster",
                                    "example": false
                                  },
                                  "numberOfRetries": {
                                    "type": "integer",
                                    "description": "number of times to retry if provisioning timeout is exceeded",
                                    "example": 5
                                  }
                                }
                              },
                              "provisioningTimeout": {
                                "type": "object",
                                "description": "EMR clusters occasionally get stuck in provisioning status due to unhealthy clusters, slowness or other issues. In such cases, a timeout can be used to automatically terminate the cluster after the defined period of time.\n",
                                "properties": {
                                  "timeout": {
                                    "type": "integer",
                                    "description": "Time (minutes) after which the cluster is automatically terminated if it's still in provisioning status.\n",
                                    "example": 15
                                  },
                                  "timeoutAction": {
                                    "type": "string",
                                    "enum": [
                                      "terminate",
                                      "terminateAndRetry"
                                    ],
                                    "description": "Desired action if the timeout is exceeded. Currently `terminate` and `terminateAndRetry` are supported.\n",
                                    "example": "terminate"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Compute Object",
                            "description": "describes the compute resources for the MR scaler",
                            "properties": {
                              "ebsRootVolumeSize": {
                                "type": "integer",
                                "description": "The EBS root volume size in GB",
                                "example": 4
                              },
                              "availabilityZones": {
                                "type": "array",
                                "description": "Array of availability zone objects",
                                "items": {
                                  "type": "object",
                                  "title": "AZ Object",
                                  "description": "Availability Zone object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "AZ name - **required in clone or new strategy only**\n",
                                      "example": "us-west-2a"
                                    },
                                    "subnetId": {
                                      "type": "string",
                                      "description": "EC2/VPC subnet ID - **required in clone or new strategy only**\n",
                                      "example": "subnet-3b5b3601"
                                    }
                                  }
                                }
                              },
                              "bootstrapActions": {
                                "type": "object",
                                "title": "BootstrapActions Object",
                                "description": "Describe bootstrap actions. For more information please see: [Advanced - Using Bootstrap And Configuration Files](https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/advanced-import-use-bootstrap-and-configuration-files)\n",
                                "properties": {
                                  "file": {
                                    "type": "object",
                                    "description": "Bootstrap file information",
                                    "properties": {
                                      "bucket": {
                                        "type": "string",
                                        "description": "The S3 bucket name",
                                        "example": "emr-test"
                                      },
                                      "key": {
                                        "type": "string",
                                        "description": "The S3 Bucket key",
                                        "example": "MyFile.json"
                                      }
                                    }
                                  }
                                }
                              },
                              "instanceGroups": {
                                "type": "array",
                                "description": "Array of instance groups for this MR scaler",
                                "items": {
                                  "type": "object",
                                  "title": "InstanceGroup Object",
                                  "properties": {
                                    "masterGroup": {
                                      "type": "object",
                                      "title": "Master Group Object",
                                      "required": [
                                        "lifeCycle"
                                      ],
                                      "properties": {
                                        "instanceTypes": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/instanceTypes"
                                        },
                                        "target": {
                                          "type": "integer",
                                          "description": "Number of instances in the master group - **required in clone or new strategy only**",
                                          "example": 1
                                        },
                                        "lifeCycle": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/lifeCycle",
                                          "example": "ON_DEMAND"
                                        },
                                        "configurations": {
                                          "oneOf": [
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/configurations/oneOf/0"
                                            },
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/configurations/oneOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "coreGroup": {
                                      "type": "object",
                                      "title": "Core Group Object",
                                      "properties": {
                                        "instanceTypes": {
                                          "type": "array",
                                          "title": "Instance Types Array",
                                          "description": "Instance types to choose from for the group - **required in clone or new strategy only**",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "m3.xlarge",
                                            "m4.large",
                                            "m4.xlarge",
                                            "m4.2xlarge"
                                          ]
                                        },
                                        "capacity": {
                                          "type": "object",
                                          "title": "Capacity Object",
                                          "description": "Capacity specifications for the group: minimum, maximum, and target compute resources\n",
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Minimum number of instances in group",
                                              "example": 1
                                            },
                                            "target": {
                                              "type": "integer",
                                              "description": "Desired number of instances in group",
                                              "example": 5
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Maximum number of instances in group",
                                              "example": 10
                                            },
                                            "unit": {
                                              "type": "string",
                                              "description": "Unit of \"instance\" for the number of instances or unit of \"weight\" for the number of vCPU",
                                              "example": "instance"
                                            }
                                          }
                                        },
                                        "lifeCycle": {
                                          "example": "SPOT",
                                          "description": "**required** only with `clone` or `new` strategy\n",
                                          "type": "string",
                                          "title": "LifeCycle Enum",
                                          "enum": [
                                            "SPOT",
                                            "ON_DEMAND"
                                          ]
                                        },
                                        "ebsConfiguration": {
                                          "type": "object",
                                          "title": "EBS Configuration Object",
                                          "description": "Information about the EBS configurations that will be attached to each EC2 instance in the group.\n",
                                          "required": [
                                            "ebsBlockDeviceConfigs",
                                            "ebsOptimized"
                                          ],
                                          "properties": {
                                            "ebsBlockDeviceConfigs": {
                                              "type": "array",
                                              "description": "An array of Amazon EBS volume specifications attached to a cluster instance.",
                                              "items": {
                                                "type": "object",
                                                "title": "Block Device Config Object",
                                                "description": "Amazon EBS volume specification attached to a cluster instance.",
                                                "required": [
                                                  "volumeSpecification",
                                                  "volumesPerInstance"
                                                ],
                                                "properties": {
                                                  "volumeSpecification": {
                                                    "type": "object",
                                                    "title": "Volume Specification Object",
                                                    "description": "EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster - required if `ebsConfiguration` is defined.\n",
                                                    "properties": {
                                                      "volumeType": {
                                                        "type": "string",
                                                        "description": "The volume type. Volume types supported are `gp2`, `io1`, and `standard` - required if `ebsConfiguration` is defined\n",
                                                        "enum": [
                                                          "gp2",
                                                          "io1",
                                                          "standard"
                                                        ],
                                                        "example": "io1"
                                                      },
                                                      "dynamicVolumeSize": {
                                                        "type": "object",
                                                        "title": "Dynamic Volume Size Object",
                                                        "required": [
                                                          "baseSize",
                                                          "resource",
                                                          "sizePerResourceUnit"
                                                        ],
                                                        "description": "Set dynamic volume size properties. **When using this object, you cannot use sizeInGB**. You must use one or the other.\n",
                                                        "properties": {
                                                          "baseSize": {
                                                            "type": "integer",
                                                            "description": "Initial size for volume.",
                                                            "example": 50
                                                          },
                                                          "resource": {
                                                            "type": "string",
                                                            "description": "Valid values: \"CPU\"\n",
                                                            "enum": [
                                                              "CPU"
                                                            ],
                                                            "example": "CPU"
                                                          },
                                                          "sizePerResourceUnit": {
                                                            "type": "integer",
                                                            "description": "Additional size per resource unit (in GB). Example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be of size 90GB\n",
                                                            "example": 20
                                                          }
                                                        }
                                                      },
                                                      "sizeInGB": {
                                                        "type": "integer",
                                                        "description": "The volume size, in gigabytes (GiB). This can be a number from 1 - 1024. **If the volume type is EBS-optimized, the minimum value is 10** - required if `ebsConfiguration` is defined\n",
                                                        "example": 8
                                                      },
                                                      "iops": {
                                                        "type": "integer",
                                                        "description": "The number of I/O operations per second (IOPS) that the volume supports.",
                                                        "example": 200
                                                      }
                                                    }
                                                  },
                                                  "volumesPerInstance": {
                                                    "type": "integer",
                                                    "description": "Number of EBS volumes with a specific volume configuration that will be associated with every instance in the instance group - required if `ebsConfiguration` is defined.\n",
                                                    "example": 1
                                                  }
                                                }
                                              }
                                            },
                                            "ebsOptimized": {
                                              "type": "boolean",
                                              "description": "Indicates whether an Amazon EBS volume is EBS-optimized.",
                                              "example": true
                                            }
                                          }
                                        },
                                        "configurations": {
                                          "oneOf": [
                                            {
                                              "type": "object",
                                              "title": "Json Configuration Object",
                                              "description": "EMR cluster configuration in JSON format. You can use `jsonConfiguration` or `file`, but not both. Can be used in `masterGroup`, `coreGroup`, and `taskGroup`.\n",
                                              "requierd": [
                                                "jsonConfiguration"
                                              ],
                                              "properties": {
                                                "jsonConfiguration": {
                                                  "type": "object",
                                                  "properties": {
                                                    "classification": {
                                                      "type": "string",
                                                      "description": "The grouping within a configuration.",
                                                      "example": "mapred-site"
                                                    },
                                                    "properties": {
                                                      "type": "object",
                                                      "description": "Within a configuration classification, a set of properties that represent the settings that you want to change in the configuration file. Duplicates not allowed.\n",
                                                      "example": {
                                                        "mapred.tasktracker.map.tasks.maximum": 2
                                                      }
                                                    },
                                                    "configuartions": {
                                                      "type": "array",
                                                      "description": "Array of objects with any keys. This can include additional levels (i.e., nested) of classification, properties, and configurations.\n",
                                                      "items": {
                                                        "type": "object",
                                                        "title": "Nested Configuration Object",
                                                        "properties": {
                                                          "classification": {
                                                            "type": "string",
                                                            "description": "The grouping within a configuration.",
                                                            "example": "hadoop-env"
                                                          },
                                                          "properties": {
                                                            "type": "object",
                                                            "description": "Within a configuration classification, a set of properties that represent the settings that you want to change in the configuration file. Duplicates not allowed.\n",
                                                            "example": {
                                                              "HADOOP_DATANODE_HEAPSIZE": 2048,
                                                              "HADOOP_NAMENODE_OPTS": "-XX:GCTimeRatio=19"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "title": "Configurations object",
                                              "required": [
                                                "file"
                                              ],
                                              "properties": {
                                                "file": {
                                                  "type": "object",
                                                  "description": "Configurations file for the group",
                                                  "properties": {
                                                    "bucket": {
                                                      "type": "string",
                                                      "description": "S3 bucket name of the configurations file for the instance group",
                                                      "example": "spot-labs"
                                                    },
                                                    "key": {
                                                      "type": "string",
                                                      "description": "S3 key name of the configurations file for the instance group",
                                                      "example": "emr_configurations.json"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "taskGroup": {
                                      "type": "object",
                                      "title": "Task Group Object",
                                      "properties": {
                                        "instanceTypes": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/instanceTypes"
                                        },
                                        "capacity": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/capacity"
                                        },
                                        "lifeCycle": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/lifeCycle",
                                          "example": "SPOT",
                                          "description": "**required** only with `clone` or `new` strategy\n"
                                        },
                                        "ebsConfiguration": {
                                          "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/ebsConfiguration"
                                        },
                                        "configurations": {
                                          "oneOf": [
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/configurations/oneOf/0"
                                            },
                                            {
                                              "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0/properties/mrScaler/properties/compute/properties/instanceGroups/items/properties/coreGroup/properties/configurations/oneOf/1"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "instanceWeights": {
                                "type": "array",
                                "description": "An array of custom-weight settings",
                                "items": {
                                  "type": "object",
                                  "title": "Instance Weight Object",
                                  "description": "Settings for a single custom weight",
                                  "required": [
                                    "instanceType",
                                    "weightedCapacity"
                                  ],
                                  "properties": {
                                    "instanceType": {
                                      "type": "string",
                                      "description": "The instance type to set weight for\n",
                                      "example": "m4.large"
                                    },
                                    "weightedCapacity": {
                                      "type": "integer",
                                      "description": "Weight for the chosen instance type.\n",
                                      "example": 3
                                    }
                                  }
                                }
                              },
                              "emrManagedMasterSecurityGroup": {
                                "type": "string",
                                "description": "EMR Managed Security group that will be set to the master instance group",
                                "example": "sg-123456789"
                              },
                              "emrManagedSlaveSecurityGroup": {
                                "type": "string",
                                "description": "EMR Managed Security group that will be set to the slave instance group",
                                "example": "sg-123456789"
                              },
                              "additionalMasterSecurityGroups": {
                                "type": "array",
                                "description": "A list of additional Amazon EC2 security group IDs for the master node.",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "sg-123456789"
                                ]
                              },
                              "additionalSlaveSecurityGroups": {
                                "type": "array",
                                "description": "A list of additional Amazon EC2 security group IDs for the core and task nodes.",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "sg-123456789"
                                ]
                              },
                              "serviceAccessSecurityGroup": {
                                "type": "string",
                                "description": "The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets\n",
                                "example": "EMR_DefaultRole"
                              },
                              "customAmiId": {
                                "type": "string",
                                "description": "The ID of a custom Amazon EBS-backed Linux AMI if the cluster uses a custom AMI.",
                                "example": "ami-123456789"
                              },
                              "repoUpgradeOnBoot": {
                                "type": "string",
                                "description": "**Applies only when CustomAmiID is used**. Specifies the type of updates that are applied from the Amazon Linux AMI package repositories when an instance boots using the AMI.\n",
                                "enum": [
                                  "SECURITY",
                                  "NONE"
                                ],
                                "example": "SECURITY"
                              },
                              "tags": {
                                "type": "array",
                                "description": "array of key:value pairs of tags\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "tagKey": {
                                      "type": "string",
                                      "description": "The tag's key",
                                      "example": "Creator"
                                    },
                                    "tagValue": {
                                      "type": "string",
                                      "description": "The tag's value",
                                      "example": "someUser"
                                    }
                                  }
                                }
                              },
                              "ec2KeyName": {
                                "type": "string",
                                "description": "The name of an Amazon EC2 key-pair that can be used to `SSH` to the master node.\n",
                                "example": "myEC2KeyName"
                              },
                              "applications": {
                                "type": "array",
                                "description": "A case-insensitive array of applications for Amazon EMR to install and configure when launching the cluster.\n",
                                "items": {
                                  "type": "object",
                                  "title": "Application Object",
                                  "description": "Application for Amazon EMR to install and configure when launching the cluster",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Application name",
                                      "example": "Hue"
                                    },
                                    "args": {
                                      "type": "array",
                                      "description": "Application arguments",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "version": {
                                      "type": "string",
                                      "description": "Application version",
                                      "example": "1.0"
                                    }
                                  }
                                }
                              },
                              "configurations": {
                                "type": "object",
                                "title": "Cluster Configuration Object",
                                "description": "Information about the configurations file that will be used in the EMR cluster. for more information please see [Advanced - Using Bootstrap And Configuration Files](https://docs.spot.io/elastigroup/tools-integrations/elastic-mapreduce/advanced-import-use-bootstrap-and-configuration-files)\n",
                                "properties": {
                                  "file": {
                                    "type": "object",
                                    "description": "Location and name of the configurations file that will be used in the EMR cluster.",
                                    "properties": {
                                      "bucket": {
                                        "type": "string",
                                        "description": "The S3 bucket where the file is stored.",
                                        "example": "emr-test"
                                      },
                                      "key": {
                                        "type": "string",
                                        "description": "The S3 Bucket key of the file.",
                                        "example": "MyFile.json"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "cluster": {
                            "type": "object",
                            "title": "EMR Cluster Object",
                            "description": "**Allowed only when the `new` strategy is chosen.**\n",
                            "properties": {
                              "terminationProtected": {
                                "type": "boolean",
                                "description": "Specifies whether the Amazon EC2 instances in the cluster are protected from termination by API calls, user intervention, or in the event of a job-flow error\n",
                                "example": false
                              },
                              "keepJobFlowAliveWhenNoSteps": {
                                "type": "boolean",
                                "description": "Specifies whether the cluster should remain available after completing all steps",
                                "example": true
                              },
                              "logUri": {
                                "type": "string",
                                "description": "The path to the Amazon S3 location where logs for this cluster are stored.",
                                "example": "s3://job-status"
                              },
                              "additionalInfo": {
                                "type": "string",
                                "description": "This is meta information about third-party applications that third-party vendors use for testing purposes.\n",
                                "example": "{'test':'more information'}"
                              },
                              "jobFlowRole": {
                                "type": "string",
                                "description": "The IAM role that was specified when the job flow was launched. The EC2 instances of the job flow assume this role.\n",
                                "example": "EMR_EC2_DefaultRole"
                              },
                              "serviceRole": {
                                "type": "string",
                                "description": "The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf\n",
                                "example": "someIAMRole"
                              },
                              "securityConfiguration": {
                                "type": "string",
                                "description": "The name of the security configuration applied to the cluster",
                                "example": "testConfig"
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Scheduling Object",
                            "description": "Schedule tasks to execute on the Elastigroup.",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "An array of scheduled tasks.",
                                "items": {
                                  "type": "object",
                                  "title": "Task Object",
                                  "description": "A scheduled task",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Enable/Disable the specified scheduling task.",
                                      "example": true,
                                      "default": true
                                    },
                                    "instanceGroupType": {
                                      "type": "string",
                                      "description": "Select the EMR instance groups to execute the scheduled task on. Valid values: `task`\n",
                                      "example": "task",
                                      "enum": [
                                        "task"
                                      ]
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The type of task to be scheduled. Valid values: `setCapacity`\n",
                                      "example": "setCapacity",
                                      "enum": [
                                        "setCapacity"
                                      ]
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid Cron expression",
                                      "example": "* 8 * 10 *"
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "description": "Set a new target capacity for the Elastigroup.",
                                      "example": 2
                                    },
                                    "minCapacity": {
                                      "type": "integer",
                                      "description": "Set a new minimum capacity for the Elastigroup.",
                                      "example": 2
                                    },
                                    "maxCapacity": {
                                      "type": "integer",
                                      "description": "Set a new maximum capacity for the Elastigroup.",
                                      "example": 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Scaling Object",
                            "description": "Set scaling polices.",
                            "properties": {
                              "up": {
                                "type": "object",
                                "title": "Scaling Up Object",
                                "description": "A scale-up policy",
                                "properties": {
                                  "policyName": {
                                    "type": "string",
                                    "description": "The Scaling policy name",
                                    "example": "myScaleUpPolicyName"
                                  },
                                  "metricName": {
                                    "type": "string",
                                    "description": "The name of the metric",
                                    "default": "AppsPending",
                                    "example": "AppsPending"
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "The unit for the alarm's associated metric.",
                                    "example": "count",
                                    "enum": [
                                      "seconds",
                                      "microseconds",
                                      "milliseconds",
                                      "bytes",
                                      "kilobytes",
                                      "megabytes",
                                      "gigabytes",
                                      "terabytes",
                                      "bits",
                                      "kilobits",
                                      "megabits",
                                      "gigabits",
                                      "terabits",
                                      "percent",
                                      "count",
                                      "bytes/second",
                                      "kilobytes/second",
                                      "megabytes/second",
                                      "gigabytes/second",
                                      "terabytes/second",
                                      "bits/second",
                                      "kilobits/second",
                                      "megabits/second",
                                      "gigabits/second",
                                      "terabits/second",
                                      "count/second",
                                      "none"
                                    ]
                                  },
                                  "threshold": {
                                    "type": "integer",
                                    "description": "The value against which the specified statistic is compared.",
                                    "example": 100
                                  },
                                  "action": {
                                    "type": "object",
                                    "title": "Scaling up Action Object",
                                    "description": "The action to take when scale up is needed.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the action to take when scale up is needed. Valid Values: `adjustment` | `updateCapacity` | `setMinTarget`\n",
                                        "enum": [
                                          "adjustment",
                                          "updateCapacity",
                                          "setMinTarget"
                                        ],
                                        "example": "adjustment"
                                      },
                                      "minTargetCapacity": {
                                        "type": "integer",
                                        "description": "Required if using `setMinTarget` as action type. A number specifying the target capacity needed.\n",
                                        "example": 1
                                      },
                                      "adjustment": {
                                        "type": "integer",
                                        "description": "Required if using `adjustment` as action type. The number associated with the specified adjustment type.\n",
                                        "example": 2
                                      },
                                      "target": {
                                        "type": "integer",
                                        "description": "Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined. The desired number of instances.\n",
                                        "example": 2
                                      },
                                      "minimum": {
                                        "type": "integer",
                                        "description": "Required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined. The lower limit number of instances that you can scale down to.\n",
                                        "example": 1
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "Required if using `updateCapacity` as action type and neither `target` nor `minimum` defined. The upper limit number of instances that you can scale up to.\n",
                                        "example": 5
                                      }
                                    }
                                  },
                                  "adjustment": {
                                    "type": "integer",
                                    "description": "**Required if using `adjustment` as action type**. The number associated with the specified adjustment type.\n",
                                    "example": 2
                                  },
                                  "period": {
                                    "type": "integer",
                                    "description": "The period in seconds over which the statistic is applied.",
                                    "example": 300
                                  },
                                  "evaluationPeriods": {
                                    "type": "integer",
                                    "description": "The number of periods over which data is compared to the specified threshold",
                                    "example": 1
                                  },
                                  "dimensions": {
                                    "type": "array",
                                    "description": "The dimensions for the alarm's associated metric.",
                                    "items": {
                                      "type": "object",
                                      "description": "The dimension for the alarm's associated metric.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "the dimension name",
                                          "example": "JobFlowId"
                                        }
                                      }
                                    }
                                  },
                                  "operator": {
                                    "type": "string",
                                    "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                                    "enum": [
                                      "gte",
                                      "lte",
                                      "lt",
                                      "gt"
                                    ],
                                    "example": "gte"
                                  },
                                  "statistic": {
                                    "type": "string",
                                    "description": "The metric statistics to return.  Valid Values: `average`, `sum`, `sampleCount`, `maximum`, `minimum`\n",
                                    "enum": [
                                      "average",
                                      "sum",
                                      "sampleCount",
                                      "maximum",
                                      "minimum"
                                    ]
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "description": "The namespace for the alarm's associated metric.",
                                    "default": "AWS/ElasticMapReduce",
                                    "example": "AWS/ElasticMapReduce"
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "title": "Scaling Down Object",
                                "description": "A scale-down policy",
                                "properties": {
                                  "policyName": {
                                    "type": "string",
                                    "description": "The Scaling policy name",
                                    "example": "myScaleDownPolicyName"
                                  },
                                  "metricName": {
                                    "type": "string",
                                    "description": "The name of the metric",
                                    "default": "AppsPending",
                                    "example": "AppsPending"
                                  },
                                  "unit": {
                                    "type": "string",
                                    "description": "The unit for the alarm's associated metric.",
                                    "example": "count",
                                    "enum": [
                                      "seconds",
                                      "microseconds",
                                      "milliseconds",
                                      "bytes",
                                      "kilobytes",
                                      "megabytes",
                                      "gigabytes",
                                      "terabytes",
                                      "bits",
                                      "kilobits",
                                      "megabits",
                                      "gigabits",
                                      "terabits",
                                      "percent",
                                      "count",
                                      "bytes/second",
                                      "kilobytes/second",
                                      "megabytes/second",
                                      "gigabytes/second",
                                      "terabytes/second",
                                      "bits/second",
                                      "kilobits/second",
                                      "megabits/second",
                                      "gigabits/second",
                                      "terabits/second",
                                      "count/second",
                                      "none"
                                    ]
                                  },
                                  "threshold": {
                                    "type": "integer",
                                    "description": "The value against which the specified statistic is compared.",
                                    "example": 100
                                  },
                                  "action": {
                                    "type": "object",
                                    "title": "Scaling Down Action Object",
                                    "description": "The action to take when scale down is needed.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the action to take when scale down is needed. Valid Values: `adjustment` | `updateCapacity` | `setMaxTarget`\n",
                                        "enum": [
                                          "adjustment",
                                          "updateCapacity",
                                          "setMaxTarget"
                                        ],
                                        "example": "adjustment"
                                      },
                                      "maxTargetCapacity": {
                                        "type": "integer",
                                        "description": "Required if using `setMaxTarget` as action type. A number specifying the target capacity needed.\n",
                                        "example": 1
                                      },
                                      "adjustment": {
                                        "type": "integer",
                                        "description": "Required if using `adjustment` as action type. The number associated with the specified adjustment type.\n",
                                        "example": 2
                                      },
                                      "target": {
                                        "type": "integer",
                                        "description": "Required if using `updateCapacity` as action type and neither `minimum` nor `maximum` are defined. The desired number of instances.\n",
                                        "example": 2
                                      },
                                      "minimum": {
                                        "type": "integer",
                                        "description": "Required if using `updateCapacity` as action type and neither `target` nor `maximum` are defined. The lower limit number of instances that you can scale down to.\n",
                                        "example": 1
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "Required if using `updateCapacity` as action type and neither `target` nor `minimum` defined. The upper limit number of instances that you can scale up to.\n",
                                        "example": 5
                                      }
                                    }
                                  },
                                  "adjustment": {
                                    "type": "integer",
                                    "description": "**Required if using `adjustment` as action type**. The number associated with the specified adjustment type.\n",
                                    "example": 2
                                  },
                                  "period": {
                                    "type": "integer",
                                    "description": "The period in seconds over which the statistic is applied.",
                                    "example": 300
                                  },
                                  "evaluationPeriods": {
                                    "type": "integer",
                                    "description": "The number of periods over which data is compared to the specified threshold",
                                    "example": 1
                                  },
                                  "dimensions": {
                                    "type": "array",
                                    "description": "The dimensions for the alarm's associated metric.",
                                    "items": {
                                      "type": "object",
                                      "description": "The dimension for the alarm's associated metric.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "the dimension name",
                                          "example": "JobFlowId"
                                        }
                                      }
                                    }
                                  },
                                  "operator": {
                                    "type": "string",
                                    "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                                    "enum": [
                                      "gte",
                                      "lte",
                                      "lt",
                                      "gt"
                                    ],
                                    "example": "lte"
                                  },
                                  "statistic": {
                                    "type": "string",
                                    "description": "The metric statistics to return.  Valid Values: `average`, `sum`, `sampleCount`, `maximum`, `minimum`\n",
                                    "enum": [
                                      "average",
                                      "sum",
                                      "sampleCount",
                                      "maximum",
                                      "minimum"
                                    ]
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "description": "The namespace for the alarm's associated metric.",
                                    "default": "AWS/ElasticMapReduce",
                                    "example": "AWS/ElasticMapReduce"
                                  }
                                }
                              }
                            }
                          },
                          "terminationPolicies": {
                            "type": "array",
                            "description": "Termination policies for EMR clusters based on CloudWatch Metrics.\n",
                            "items": {
                              "type": "object",
                              "title": "Termination Policy Object",
                              "description": "A termination policy for EMR clusters based on CloudWatch Metrics.",
                              "properties": {
                                "statements": {
                                  "type": "array",
                                  "description": "Array of termination statements to execute",
                                  "items": {
                                    "type": "object",
                                    "title": "Termination Statement Object",
                                    "description": "A termination statement to execute",
                                    "required": [
                                      "namespace",
                                      "metricName",
                                      "threshold"
                                    ],
                                    "properties": {
                                      "namespace": {
                                        "type": "string",
                                        "description": "**Must be `AWS/ElasticMapReduce`\"\n",
                                        "example": "AWS/ElasticMapReduce"
                                      },
                                      "metricName": {
                                        "type": "string",
                                        "description": "The name of the metric in CloudWatch which the statement will be based on.",
                                        "example": "AppsRunning"
                                      },
                                      "statistic": {
                                        "type": "string",
                                        "description": "The aggregation method of the given metric",
                                        "enum": [
                                          "average",
                                          "sum",
                                          "sampleCount",
                                          "maximum",
                                          "minimum"
                                        ],
                                        "default": "sum"
                                      },
                                      "unit": {
                                        "type": "string",
                                        "description": "The unit for a given metric.",
                                        "example": "count",
                                        "enum": [
                                          "seconds",
                                          "microseconds",
                                          "milliseconds",
                                          "bytes",
                                          "kilobytes",
                                          "megabytes",
                                          "gigabytes",
                                          "terabytes",
                                          "bits",
                                          "kilobits",
                                          "megabits",
                                          "gigabits",
                                          "terabits",
                                          "percent",
                                          "count",
                                          "bytes/second",
                                          "kilobytes/second",
                                          "megabytes/second",
                                          "gigabytes/second",
                                          "terabytes/second",
                                          "bits/second",
                                          "kilobits/second",
                                          "megabits/second",
                                          "gigabits/second",
                                          "terabits/second",
                                          "count/second",
                                          "none"
                                        ],
                                        "default": "count"
                                      },
                                      "threshold": {
                                        "type": "number",
                                        "format": "double",
                                        "description": "The value that the specified statistic is compared to.",
                                        "example": 2
                                      },
                                      "period": {
                                        "type": "integer",
                                        "description": "The period in seconds over which the statistic is applied.",
                                        "example": 300
                                      },
                                      "evaluationPeriods": {
                                        "type": "integer",
                                        "description": "The number of periods over which data is compared to the specified threshold",
                                        "example": 1
                                      },
                                      "operator": {
                                        "type": "string",
                                        "description": "The operator to use in order to determine if the scaling policy is applicable. Valid values: `gt` | `gte` | `lt` | `lte`\n",
                                        "enum": [
                                          "gte",
                                          "lte",
                                          "lt",
                                          "gt"
                                        ],
                                        "example": "gte",
                                        "default": "gte"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScalerOperator": {
      "post": {
        "summary": "Create Scaler Operator",
        "description": "mrScaler â required will have the same configuration as in createMrScaler with one exception:\nwe will only work with strategy of ânewâ, no âcloneâ/âwarpâ will be allowed.\n",
        "operationId": "elastigroupAwsEmrOperatorCreate",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "MRScaler object Wrapper",
                    "required": [
                      "mrScaler"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "GuyEmrOperatorTest"
                      },
                      "mrScaler": {
                        "required": [
                          "name",
                          "region",
                          "strategy"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "MRScaler name",
                            "example": "my MRScaler"
                          },
                          "description": {
                            "type": "string",
                            "description": "description for the MRScaler",
                            "example": "this is an MRScaler created with Spot"
                          },
                          "region": {
                            "type": "string",
                            "description": "The region of the source cluster",
                            "example": "us-west-2"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/strategy"
                          },
                          "compute": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/compute"
                          },
                          "cluster": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/cluster"
                          },
                          "scheduling": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/scheduling"
                          },
                          "scaling": {
                            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/scaling"
                          },
                          "terminationPolicies": {
                            "type": "array",
                            "description": "Termination policies for EMR clusters based on CloudWatch Metrics.\n",
                            "items": {
                              "$ref": "#/paths/~1aws~1emr~1mrScaler/post/requestBody/content/application~1json/schema/allOf/0/properties/mrScaler/properties/terminationPolicies/items"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1emr~1mrScaler/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}": {
      "get": {
        "summary": "Get Scaler",
        "description": "Get a description of a specific MR Scaler and its configuration.",
        "operationId": "elastigroupAwsEmrListScaler",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "mrScalerId",
            "required": true,
            "description": "The MRScaler ID\n",
            "schema": {
              "type": "string"
            },
            "example": "simrs-12223"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Scaler",
        "description": "Update an MR Scaler. Partial updating is supported.",
        "operationId": "elastigroupAwsEmrUpdateScaler",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "description": "An EMR Scaler Object",
                    "properties": {
                      "mrScaler": {
                        "type": "object",
                        "description": "MR Scaler Object - Update Task Capacity",
                        "properties": {
                          "compute": {
                            "type": "object",
                            "properties": {
                              "instanceGroups": {
                                "type": "object",
                                "properties": {
                                  "taskGroup": {
                                    "type": "object",
                                    "properties": {
                                      "capacity": {
                                        "type": "object",
                                        "properties": {
                                          "maximum": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "target": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "minimum": {
                                            "type": "integer",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "An EMR Scaler Object",
                    "properties": {
                      "mrScaler": {
                        "type": "object",
                        "description": "MR Scaler Object - Update Dynamic Volume Size in EBS Configuration",
                        "properties": {
                          "compute": {
                            "type": "object",
                            "properties": {
                              "instanceGroups": {
                                "type": "object",
                                "properties": {
                                  "taskGroup": {
                                    "type": "object",
                                    "properties": {
                                      "ebsConfiguration": {
                                        "type": "object",
                                        "properties": {
                                          "ebsBlockDeviceConfigs": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "volumeSpecification": {
                                                  "type": "object",
                                                  "properties": {
                                                    "dynamicVolumeSize": {
                                                      "type": "object",
                                                      "properties": {
                                                        "baseSize": {
                                                          "type": "integer",
                                                          "example": 30
                                                        },
                                                        "resource": {
                                                          "type": "string",
                                                          "example": "CPU"
                                                        },
                                                        "sizePerResourceUnit": {
                                                          "type": "integer",
                                                          "example": 15
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Scaler",
        "description": "Delete an MR Scaler",
        "operationId": "elastigroupAwsEmrDeleteMrsScaler",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/instance": {
      "get": {
        "summary": "List Instances",
        "description": "Get a list of all instances and instances groups in the cluster",
        "operationId": "elastigroupAwsEmrListInstances",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "EMR Scaler Instance Object",
                                "description": "An instance in the cluster",
                                "properties": {
                                  "instanceId": {
                                    "type": "string",
                                    "description": "The instance ID",
                                    "example": "i-asdfjk3989"
                                  },
                                  "instanceGroupId": {
                                    "type": "string",
                                    "example": "ig-asdfjl2",
                                    "description": "The instance group ID"
                                  },
                                  "instanceGroupRole": {
                                    "type": "string",
                                    "example": "MASTER",
                                    "description": "The instance group role"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "m1.medium",
                                    "description": "The instance type"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "example": "us-east-1a",
                                    "description": "The availability zone for the instance"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "Running",
                                    "description": "The instance status"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2015-08-02T09:11:16.356Z",
                                    "description": "The last date-time this item was updated"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:instance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Scale up MR Scaler instances",
        "operationId": "elastigroupAwsEmrScaleUp",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "adjustment",
            "schema": {
              "type": "integer",
              "example": 3
            },
            "description": "Number of instances to add to the MR Scaler",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "An EMR Scale Up Object",
                                "description": "An EMR Scale Up Object",
                                "properties": {
                                  "modifiedInstanceGroups": {
                                    "type": "array",
                                    "description": "The groups modified by this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-2470IUVXLJ652S",
                                      "ig-9870IUVXMYYW9"
                                    ]
                                  },
                                  "newInstanceGroups": {
                                    "type": "array",
                                    "description": "Newly launched instances due to this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-0570LPWAZXBSR3"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:scale"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Scale down MR Scaler instances",
        "operationId": "elastigroupAwsEmrScaleDown",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "adjustment",
            "description": "Number of instances to remove from the MR Scaler",
            "schema": {
              "type": "integer",
              "example": 3
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "An EMR Scale Down Object",
                                "description": "An EMR Scale Down Object",
                                "properties": {
                                  "modifiedInstanceGroups": {
                                    "type": "array",
                                    "description": "The groups modified by this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-2470IUVXLJ652S",
                                      "ig-9870IUVXMYYW9"
                                    ]
                                  },
                                  "victimInstances": {
                                    "type": "array",
                                    "description": "Terminated instances due to this change",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "ig-0570LPWAZXBSR3"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:scale"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/cluster": {
      "get": {
        "summary": "List Scalers",
        "description": "Get MR Scaler cluster",
        "operationId": "elastigroupAwsEmrListMrScalerClusters",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "MR Scaler Cluster Object",
                                "description": "An MR Scaler cluster",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The cluster's ID",
                                    "example": "j-3N7WPI3R0D1R7"
                                  },
                                  "availabilityZone": {
                                    "type": "string",
                                    "description": "The cluster's AZ",
                                    "example": "us-east-1a"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "The cluster's state",
                                    "example": "terminated"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date-time this cluster was created",
                                    "example": "2015-08-02T09:11:16.356Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date-time this cluster was last updated",
                                    "example": "2015-08-02T10:11:16.356Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:cluster"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/emr/mrScaler/{mrScalerId}/costs": {
      "get": {
        "summary": "Get Scaler Costs",
        "description": "Get financial information on the MR Scaler, including running time, costs, and savings",
        "operationId": "elastigroupAwsEmrListMrScalerCosts",
        "tags": [
          "Elastigroup AWS EMR Scaler"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1aws~1emr~1mrScaler~1%7BmrScalerId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "MR Scaler Costs Object",
                                "description": "MR Scaler Costs Object",
                                "properties": {
                                  "running": {
                                    "type": "object",
                                    "description": "Info about the running duration of this MR Scaler",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The duration this object has been running, denominated in `unit`\n",
                                        "example": 294.3
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "hours",
                                        "description": "Unit of denomination\n"
                                      }
                                    }
                                  },
                                  "savings": {
                                    "type": "object",
                                    "description": "Info about the savings accrued on this MR Scaler",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The savings accrued during the running duration\n",
                                        "example": 60.5263
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage",
                                        "description": "Unit of denomination\n"
                                      }
                                    }
                                  },
                                  "costs": {
                                    "type": "object",
                                    "description": "Info on the costs of running this MR Scaler",
                                    "properties": {
                                      "actual": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The costs during the running duration\n",
                                        "example": 8.829
                                      },
                                      "potential": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The costs that would have been incurred if this MR Scaler wasn't running on Spot\n",
                                        "example": 22.3668
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:emr:mrScaler:costs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Describes the current status of a specific Elastigroup â entailing information regarding running instance and their status\n",
        "operationId": "elastigroupAwsStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "e593ff58-067d-4340-92f9-8b1c0bad70d7",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345678/status",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-20T11:35:01.745Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "spotInstanceRequestId": {
                                          "type": "string",
                                          "title": "Spot Instance Request ID",
                                          "example": "sir-3thgagpn"
                                        },
                                        "instanceId": {
                                          "type": "string",
                                          "title": "Instance ID",
                                          "example": "i-0cc289f12538e4758"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "title": "Instance Type",
                                          "example": "t2.micro"
                                        },
                                        "product": {
                                          "type": "string",
                                          "title": "Operating System",
                                          "example": "Linux/UNIX"
                                        },
                                        "groupId": {
                                          "type": "string",
                                          "title": "Group ID",
                                          "example": "sig-12345678"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "title": "AWS Availability Zone",
                                          "example": "us-west-2a"
                                        },
                                        "privateIp": {
                                          "type": "string",
                                          "title": "Private IP",
                                          "example": "172.31.28.210"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Creation Date & Time",
                                          "example": "2018-06-25T11:49:00.000Z"
                                        },
                                        "publicIp": {
                                          "type": "string",
                                          "title": "Public IP",
                                          "example": "10.10.10.10"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "fulfilled"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "groupId": {
                                          "type": "string",
                                          "title": "Group Id",
                                          "example": "sig-12345"
                                        },
                                        "eventType": {
                                          "type": "string",
                                          "title": "Event Type",
                                          "example": "Update"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2016-01-21T17:10:04.000+0000"
                                        },
                                        "subEvents": {
                                          "type": "object",
                                          "title": "Sub Evenet",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "title": "Type",
                                              "example": "scaleUp"
                                            },
                                            "newSpots": {
                                              "type": "string",
                                              "example": [
                                                {
                                                  "spotInstanceRequestId": "sir-0294dbzt"
                                                },
                                                {
                                                  "spotInstanceRequestId": "sir-02940b7h"
                                                },
                                                {
                                                  "spotInstanceRequestId": "sir-028z1age"
                                                },
                                                {
                                                  "spotInstanceRequestId": "sir-028z456e"
                                                },
                                                {
                                                  "spotInstanceRequestId": "sir-028wg6gr"
                                                },
                                                {
                                                  "spotInstanceRequestId": "sir-0294a9v5"
                                                }
                                              ]
                                            },
                                            "newInstances": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/events": {
      "get": {
        "summary": "Activity Events",
        "description": "Get historical data on events that happened in a specific Elastigroup like update, scaling activities, creation of new instances, etc.\n",
        "operationId": "elastigroupAwsActivityEvents",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2016-10-01",
            "description": "Starting date to fetch the events from\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/events?fromDate=2016-10-01",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "groupId": {
                                              "type": "string",
                                              "title": "Group Id",
                                              "example": "sig-12345"
                                            },
                                            "eventType": {
                                              "type": "string",
                                              "title": "Event Type",
                                              "example": "Update"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "title": "Created At",
                                              "example": "2016-01-21T17:10:04.000+0000"
                                            },
                                            "subEvents": {
                                              "type": "object",
                                              "title": "Sub Event",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "title": "Type",
                                                  "example": "scaleUp"
                                                },
                                                "newSpots": {
                                                  "type": "string",
                                                  "example": [
                                                    {
                                                      "spotInstanceRequestId": "sir-0294dbzt"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-02940b7h"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z1age"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z456e"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028wg6gr"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-0294a9v5"
                                                    }
                                                  ]
                                                },
                                                "newInstances": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "groupId": {
                                              "type": "string",
                                              "title": "Group Id",
                                              "example": "sig-12345"
                                            },
                                            "eventType": {
                                              "type": "string",
                                              "title": "Event Type",
                                              "example": "Update"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "title": "Created At",
                                              "example": "2016-01-21T17:10:04.000+0000"
                                            },
                                            "subEvents": {
                                              "type": "object",
                                              "title": "Sub Event",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "title": "Type",
                                                  "example": "scaleUp"
                                                },
                                                "newSpots": {
                                                  "type": "string",
                                                  "example": [
                                                    {
                                                      "spotInstanceRequestId": "sir-0294dbzt"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-02940b7h"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z1age"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z456e"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028wg6gr"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-0294a9v5"
                                                    }
                                                  ]
                                                },
                                                "newInstances": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "groupId": {
                                              "type": "string",
                                              "title": "Group Id",
                                              "example": "sig-12345"
                                            },
                                            "eventType": {
                                              "type": "string",
                                              "title": "Event Type",
                                              "example": "Update"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "title": "Created At",
                                              "example": "2016-01-21T17:10:04.000+0000"
                                            },
                                            "subEvents": {
                                              "type": "object",
                                              "title": "Sub Event",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "title": "Type",
                                                  "example": "scaleUp"
                                                },
                                                "newSpots": {
                                                  "type": "string",
                                                  "example": [
                                                    {
                                                      "spotInstanceRequestId": "sir-0294dbzt"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-02940b7h"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z1age"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z456e"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028wg6gr"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-0294a9v5"
                                                    }
                                                  ]
                                                },
                                                "newInstances": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "groupId": {
                                              "type": "string",
                                              "title": "Group Id",
                                              "example": "sig-12345"
                                            },
                                            "eventType": {
                                              "type": "string",
                                              "title": "Event Type",
                                              "example": "Update"
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "title": "Created At",
                                              "example": "2016-01-21T17:10:04.000+0000"
                                            },
                                            "subEvents": {
                                              "type": "object",
                                              "title": "Sub Event",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "title": "Type",
                                                  "example": "scaleUp"
                                                },
                                                "newSpots": {
                                                  "type": "string",
                                                  "example": [
                                                    {
                                                      "spotInstanceRequestId": "sir-0294dbzt"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-02940b7h"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z1age"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028z456e"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-028wg6gr"
                                                    },
                                                    {
                                                      "spotInstanceRequestId": "sir-0294a9v5"
                                                    }
                                                  ]
                                                },
                                                "newInstances": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/logs": {
      "get": {
        "summary": "Get Elastilog",
        "description": "You can fetch a group's (Elastigroup/Ocean/Managed Instance) elastilog via the Spot API, in order to be able to consume elastilog from various tools used for log storing and analyzing. Logs have retention of 3 months back, so minimal fromDate should be up to 3 months back at runtime.\n",
        "operationId": "elastigroupAwsGetLogs",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "1540036800000",
            "description": "Epoch number that represents the date from which to collect the log (millisecond format)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "1542715200000",
            "description": "Epoch number that represents the date until which log is collected (millisecond format)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "severity",
            "example": "ALL",
            "description": "Severity of log entries to extract. Valid Values: ALL, INFO,DEBUG,WARN. Default: ALL\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "resourceId",
            "example": "i-12345678",
            "description": "Filter extracted log entries for a specific resource id. Default: Null\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "example": "i-12345678",
            "description": "Maximum number of lines to extract in a response. Max value allowed - 1000. Default: 500\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-123456/logs",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:log",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "example": [
                                        {
                                          "message": "ECS Max Capacity. ECS Autoscaler - Cannot scale up since group has reached maximum capacity",
                                          "severity": "WARN",
                                          "createdAt": "2018-11-19T14:38:34.000Z"
                                        },
                                        {
                                          "message": "Group sig-e0a2bd7c successfully created.",
                                          "severity": "INFO",
                                          "createdAt": "2018-11-19T14:34:15.000Z"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/capacity": {
      "put": {
        "summary": "Update Capacity",
        "description": "Update the capacity of an Elastigroup",
        "operationId": "elastigroupAwsUpdateCapacity",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "capacity": {
                        "type": "object",
                        "title": "Capacity",
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "example": 1,
                            "default": 0,
                            "description": "Number that indicates minimum instance amount\n"
                          },
                          "maximum": {
                            "type": "integer",
                            "example": 10,
                            "default": 0,
                            "description": "Number that indicates minimum instance amount\n"
                          },
                          "target": {
                            "type": "integer",
                            "example": 2,
                            "default": 0,
                            "description": "Number that indicates amount of desired instances\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "3ab3fdf7-3af3-46db-9e63-b88cfdac058c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-b255ac/capacity?accountId=act-567c21",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-08-20T15:31:12.730Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:capacity",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1capacity/put/requestBody/content/application~1json/schema/allOf/0"
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Add instances to your Elastigroup",
        "operationId": "elastigroupAwsScaleUp",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": "1",
            "description": "The number of instances to add to the Elastigroup\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "b57207d0-3ab1-4170-8122-a3db9ac92093",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-abcd1234/scale/up?adjustment=2",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2017-10-04T08:56:38.071Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:scale",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "newSpotRequests": {
                                          "type": "array",
                                          "description": "New Spot Requests",
                                          "example": [
                                            {
                                              "spotInstanceRequestId": "sir-45sr8c7n",
                                              "instanceId": "i-12345abcde12345",
                                              "availabilityZone": "us-west-2a",
                                              "instanceType": "m3.medium"
                                            },
                                            {
                                              "spotInstanceRequestId": "sir-pzb8a2an",
                                              "instanceId": "i-abcde12345abcde",
                                              "availabilityZone": "us-west-2a",
                                              "instanceType": "m3.medium"
                                            }
                                          ]
                                        },
                                        "newInstances": {
                                          "type": "string",
                                          "description": "New Instances",
                                          "example": null
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Remove instances from your Elastigroup. Note - Scale Advanced expression Remove instances from your Elastigroup",
        "operationId": "elastigroupAwsScaleDown",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": "1",
            "description": "The number of instances to add to the Elastigroup\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/down?adjustment=1",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "time": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:scale",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "victimSpotRequests": {
                                          "type": "array",
                                          "description": "Victim Spot Requests",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "spotInstanceRequestId": {
                                                "type": "string",
                                                "description": "Spot Instance Request ID",
                                                "example": "sir-02447qg2"
                                              },
                                              "instanceId": {
                                                "type": "string",
                                                "description": "Instance ID",
                                                "example": "i-933esr1"
                                              }
                                            }
                                          }
                                        },
                                        "victimInstances": {
                                          "type": "array",
                                          "description": "Victim Instances",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "instanceId": {
                                                "type": "string",
                                                "description": "Instance ID",
                                                "example": "i-02447t22"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/suspendPolicy": {
      "post": {
        "summary": "Suspend Scaling Policies",
        "description": "Suspend processes inside your Elastigroup",
        "operationId": "elastigroupAwsSuspendScalingPolicies",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "policyName",
            "example": "Example Policy Name",
            "description": "Policy Name of scaling policy to suspend\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "suspension": {
                        "type": "object",
                        "title": "Suspension",
                        "properties": {
                          "ttlInMinutes": {
                            "type": "integer",
                            "example": 10,
                            "description": "Set TTL in minutes. min value: 1 (one minute). max value: 10080 (one week)\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suspend Scaling Policies Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/suspendPolicy?accountId=act-1234567&policyName=myscalingpolicyname",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "groupId": {
                                          "type": "string",
                                          "title": "Group ID",
                                          "example": "sig-12345"
                                        },
                                        "policyName": {
                                          "type": "string",
                                          "title": "Policy Name",
                                          "example": "myscalingpolicyname"
                                        },
                                        "state": {
                                          "type": "string",
                                          "title": "State",
                                          "example": "suspended"
                                        },
                                        "expiresAt": {
                                          "type": "string",
                                          "title": "Expires At",
                                          "example": "2016-06-19T08:51:00:00Z"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/suspension": {
      "post": {
        "summary": "Suspend Processes",
        "description": "Suspend processes inside your Elastigroup",
        "operationId": "elastigroupAwsSuspend",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "groupId": {
                        "type": "array",
                        "description": "groupId",
                        "items": {
                          "type": "string",
                          "example": "sig-12345"
                        }
                      },
                      "suspensions": {
                        "type": "array",
                        "description": "Suspensions",
                        "items": {
                          "type": "object",
                          "example": [
                            {
                              "name": "AUTO_SCALE",
                              "expiresAt": null
                            },
                            {
                              "name": "OUT_OF_STRATEGY",
                              "expiresAt": "2018-10-03T07:23:24.000+0000"
                            },
                            {
                              "name": "PREVENTIVE_REPLACEMENT",
                              "expiresAt": "2018-10-03T09:03:24.000+0000"
                            },
                            {
                              "name": "REVERT_PREFERRED",
                              "expiresAt": null
                            },
                            {
                              "name": "SCHEDULING",
                              "expiresAt": null
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suspend Processes  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "groupId": {
                                        "type": "string",
                                        "description": "Elastigroup ID",
                                        "example": "sig-12345"
                                      },
                                      "processes": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "AUTO_SCALE"
                                          ]
                                        }
                                      },
                                      "suspensions": {
                                        "type": "array",
                                        "description": "Suspensions",
                                        "items": {
                                          "type": "object",
                                          "example": [
                                            {
                                              "name": "AUTO_SCALE",
                                              "expiresAt": null
                                            },
                                            {
                                              "name": "OUT_OF_STRATEGY",
                                              "expiresAt": "2018-10-03T07:23:24.000+0000"
                                            },
                                            {
                                              "name": "PREVENTIVE_REPLACEMENT",
                                              "expiresAt": "2018-10-03T09:03:24.000+0000"
                                            },
                                            {
                                              "name": "REVERT_PREFERRED",
                                              "expiresAt": null
                                            },
                                            {
                                              "name": "SCHEDULING",
                                              "expiresAt": null
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 4,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Suspended Processes",
        "description": "List all active Suspended processes for specific Elastigroup",
        "operationId": "elastigroupAwsListSuspended",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List Suspended Processes  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "groupId": {
                                        "type": "string",
                                        "example": "sig-12345",
                                        "description": "Elastigroup ID"
                                      },
                                      "processes": {
                                        "type": "string",
                                        "description": "Processes",
                                        "example": [
                                          "AUTO_SCALE"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Remove Suspended Processes",
        "description": "Remove active suspension from Elastigroup",
        "operationId": "elastigroupAwsRemoveSuspended",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "processes": {
                        "type": "array",
                        "title": "Processes",
                        "description": "The list of processes to remove from suspension. Valid values are: AUTO_SCALE, AUTO_HEALING, OUT_OF_STRATEGY, PREVENTIVE_REPLACEMENT, REVERT_PREFERRED, SCHEDULING\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "AUTO_SCALE"
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Remove Suspended Processes  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "848f3db7-b731-4b1b-9227-253a545e90eb",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-21T11:54:12.513Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "title": "Metadata Options Update",
                                    "description": "Request - Example 6 - Update Metadata Options",
                                    "properties": {
                                      "group": {
                                        "type": "object",
                                        "title": "AWS Elastigroup",
                                        "properties": {
                                          "compute": {
                                            "type": "object",
                                            "title": "Compute Attribute",
                                            "properties": {
                                              "launchSpecification": {
                                                "type": "object",
                                                "title": "Launch Specification Attribute",
                                                "properties": {
                                                  "metadataOptions": {
                                                    "type": "object",
                                                    "title": "Metadata Options Attribute",
                                                    "properties": {
                                                      "httpTokens": {
                                                        "type": "string",
                                                        "example": "optional",
                                                        "description": "Http Token\n"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 0,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/suspensions": {
      "get": {
        "summary": "List Suspended Scaling Policies",
        "description": "Suspended scaling policies inside your Elastigroup",
        "operationId": "elastigroupAwsListSuspendScalingPolicies",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List Suspended Scaling Policies  Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/suspensions?accountId=act-1234567",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "scalePolicySuspensions": {
                                        "type": "object",
                                        "example": [
                                          {
                                            "groupId": "sig-12345",
                                            "policyName": "test",
                                            "state": "suspended"
                                          },
                                          {
                                            "groupId": "sig-12345",
                                            "policyName": "down Scaling Policy 1",
                                            "state": "suspended"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/scale/resumePolicy": {
      "post": {
        "summary": "Remove Suspended Scaling Policies",
        "description": "Resume suspended scaling policies inside your Elastigroup",
        "operationId": "elastigroupAwsResumeScalingPolicies",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "policyName",
            "example": "policy_1",
            "description": "Name of the suspended scaling policy to remove from suspension\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "848f3db7-b731-4b1b-9227-253a545e90eb",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/scale/resumePolicy?policyName=myscalingpolicyname",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-06-21T11:54:12.513Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:suspension",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 0,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/potentialSavings": {
      "get": {
        "summary": "Potential Savings",
        "description": "Describe Potential Savings for AWS resources like - ASG (Auto-scaling groups), Beanstalk, ELB, ECS, EMR and tagged instances. The response will provide Potential monthly savings in USD",
        "operationId": "elastigroupAwsPotentialSavings",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Potential Savings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/suspension",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:cs:aws:potentialSavings",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "resourceType": {
                                            "type": "string",
                                            "example": "Auto Scaling Group"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "Prod_ASG"
                                          },
                                          "region": {
                                            "type": "string",
                                            "example": "us-west-1"
                                          },
                                          "instances": {
                                            "type": "integer",
                                            "example": 5
                                          },
                                          "instanceTypes": {
                                            "type": "string",
                                            "example": [
                                              "c4.4xlarge"
                                            ]
                                          },
                                          "potentialSavings": {
                                            "type": "integer",
                                            "example": 2700
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/instancePotentialSavings": {
      "get": {
        "summary": "Instances Potential Savings",
        "description": "Describe potential savings for the listed instances. You can provide multiple instance IDs separated by a comma. The response will provide potential monthly savings in USD.",
        "operationId": "elastigroupAwsInstancesPotentialSavings",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "The AWS Region\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "instanceIds",
            "example": "i-1234567",
            "description": "The instance ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Instances Potential Savings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/instancePotentialSavings?instanceIds=i-08674ba9a6ddb73f4%2Ci-0973dc7a755d34894Â®ion=us-west-2",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:cs:aws:potentialSavings",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "newSpotRequests": {
                                          "type": "array",
                                          "description": "New Spot Requests",
                                          "example": [
                                            {
                                              "resourceType": "EC2Instance",
                                              "name": "i-12345abcde12345",
                                              "instances": 1,
                                              "instanceTypes": [
                                                "t2.medium"
                                              ],
                                              "potentialSavings": 28
                                            },
                                            {
                                              "resourceType": "EC2Instance",
                                              "name": "i-0973dc7a755d34894",
                                              "instances": 1,
                                              "instanceTypes": [
                                                "m4.large"
                                              ],
                                              "potentialSavings": 60
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/costs": {
      "get": {
        "summary": "Get Costs per Account",
        "description": "Retrieve costs per specified account over a specified time period. Example of URL with with daily aggregation period over a time period of 30 days - https://api.spotinst.io/aws/ec2/account/costs?fromDate=1585699200000&toDate=1588291199000&aggregationPeriod=daily",
        "operationId": "awsCostsPerAccount",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2018-06-20",
            "description": "Date can be either in ISO-8601 date format (yyyy-mm-dd) or in Unix Timestamp format (e.g. 1494751821472).\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2018-11-20",
            "description": "Date can be either in ISO-8601 date format (yyyy-mm-dd) or in Unix Timestamp format (e.g. 1494751821472).\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "example": "daily",
            "description": "Optional. The time period over which data is aggregated. Can only be \"daily\". For example, the figures in each data set are per day\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "timestamp": {
                                            "type": "string",
                                            "example": "2020-03-06T00:00:00.000Z",
                                            "description": "Time"
                                          },
                                          "spot": {
                                            "type": "object",
                                            "properties": {
                                              "runningHours": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 1470.8
                                              },
                                              "actualCosts": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 107.3
                                              },
                                              "potentialCosts": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 378.41
                                              },
                                              "savingsPercentage": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 71.64
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/costs": {
      "get": {
        "summary": "Get Costs per Elastigroup",
        "description": "Get financial information on a specific Elastigroup",
        "operationId": "awsCostsPerElastigroup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2018-06-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2018-11-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "example": "daily",
            "description": "Optional. The time period over which data is aggregated. Can only be \"daily\". For example, the figures in each data set are per day\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-48d79900/costs?fromDate=2018-03-06&toDate=2019-02-27",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:stats",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "running": {
                                            "type": "object",
                                            "title": "Running",
                                            "properties": {
                                              "value": {
                                                "type": "string",
                                                "example": 0,
                                                "description": "Value\n"
                                              },
                                              "unit": {
                                                "type": "string",
                                                "example": "hours",
                                                "description": "Unit\n"
                                              }
                                            }
                                          },
                                          "savings": {
                                            "type": "object",
                                            "title": "Running",
                                            "properties": {
                                              "value": {
                                                "type": "integer",
                                                "example": 0
                                              },
                                              "unit": {
                                                "type": "string",
                                                "example": "percentage"
                                              }
                                            }
                                          },
                                          "costs": {
                                            "type": "object",
                                            "title": "Running",
                                            "properties": {
                                              "actual": {
                                                "type": "integer",
                                                "example": 0
                                              },
                                              "potential": {
                                                "type": "integer",
                                                "example": 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/costs/detailed": {
      "get": {
        "summary": "Detailed Cost",
        "description": "Get detailed financial information on a specific Elastigroup",
        "operationId": "elastigroupAwsDetailedCosts",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2018-06-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2018-11-20",
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed Cost Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/costs/detailed",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "groupId": {
                                          "type": "string",
                                          "title": "Group Id",
                                          "example": "sig-12345"
                                        },
                                        "instanceId": {
                                          "type": "string",
                                          "title": "Instance ID",
                                          "example": "i-326129e1"
                                        },
                                        "spotInstanceRequestId": {
                                          "type": "string",
                                          "title": "Spot Instance Request ID",
                                          "example": null
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "title": "Instance Type",
                                          "example": "m3.medium"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "title": "Availability Zone",
                                          "example": "us-east-1a"
                                        },
                                        "running": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 4
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "hours"
                                            }
                                          }
                                        },
                                        "savings": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 4
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percentage"
                                            }
                                          }
                                        },
                                        "costs": {
                                          "type": "object",
                                          "properties": {
                                            "actual": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Actual",
                                              "example": 0.268
                                            },
                                            "potential": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Potential",
                                              "example": 0.268
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "groupId": {
                                          "type": "string",
                                          "title": "Group Id",
                                          "example": "sig-d56b9e37v"
                                        },
                                        "instanceId": {
                                          "type": "string",
                                          "title": "Instance ID",
                                          "example": "i-326129e1"
                                        },
                                        "spotInstanceRequestId": {
                                          "type": "string",
                                          "title": "Spot Instance Request ID",
                                          "example": "sir-02epa938"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "title": "Instance Type",
                                          "example": "m3.large"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "title": "Availability Zone",
                                          "example": "us-east-1a"
                                        },
                                        "running": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 4
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "hours"
                                            }
                                          }
                                        },
                                        "savings": {
                                          "type": "object",
                                          "properties": {
                                            "value": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Value",
                                              "example": 89.3233
                                            },
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percentage"
                                            }
                                          }
                                        },
                                        "costs": {
                                          "type": "object",
                                          "properties": {
                                            "actual": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Actual",
                                              "example": 0.0568
                                            },
                                            "potential": {
                                              "type": "number",
                                              "format": "float",
                                              "title": "Potential",
                                              "example": 0.532
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}": {
      "get": {
        "summary": "Instance Status",
        "description": "Get the current instance status Possible status values - Active and Terminating",
        "operationId": "awsInstanceStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "The instance ID you want to query\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:instance",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "title": "Instance ID",
                                          "example": "i-326129e1"
                                        },
                                        "lifeCycleState": {
                                          "type": "string",
                                          "title": "Lifecycle State",
                                          "example": "ACTIVE"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/instance/import": {
      "post": {
        "summary": "Import EC2 Instance",
        "description": "Import an EC2 instance into a new Elastigroup\n",
        "operationId": "elastigroupAwsImportInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "example": "us-east-2",
            "description": "The AWS region to create the new Elastigroup in\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "instanceId",
            "example": "i-008a13360040aa88e",
            "description": "Enter the AWS instance Id of the instance to import\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Group",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "EG_Name",
                            "description": "The name of the new Elastigroup\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "description": "Optionally provide a list of spot instance types to improve spot market availability for the Elastigroup. Overrides the imported instance type.\n",
                            "example": [
                              "m3.large",
                              "c3.large"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import EC2 Instance Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "string",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object"
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/amiBackup": {
      "post": {
        "summary": "AMI Backup",
        "description": "Get status of a specific deployment",
        "operationId": "elastigroupAwsAmiBackup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "AMI Backup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-61236h9d/amiBackup",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:amiBackup",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "example": true
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/instanceHealthiness": {
      "get": {
        "summary": "Instance Healthiness",
        "description": "Get a list of instances with health status.",
        "operationId": "elastigroupAwsInstanceHealthiness",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Healthiness Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-1b656b92/instanceHealthiness",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:instanceHealthiness",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "description": "Instance ID",
                                          "example": "i-07593cd9173cd9667"
                                        },
                                        "spotRequestId": {
                                          "type": "string",
                                          "description": "Spot Request ID",
                                          "example": "sir-xjag9yqp"
                                        },
                                        "groupId": {
                                          "type": "string",
                                          "description": "Group ID",
                                          "example": "sig-1b656b92"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "description": "Availability Zone",
                                          "example": "us-west-2b"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "description": "Life Cycle",
                                          "example": "SPOT"
                                        },
                                        "healthStatus": {
                                          "type": "string",
                                          "description": "Health Status",
                                          "example": "HEALTHY"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/detachInstances": {
      "put": {
        "summary": "Detach Instance",
        "description": "Detach instances from your Elastigroup",
        "operationId": "elastigroupAwsDetachInstance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instancesToDetach": {
                        "type": "object",
                        "title": "Instances to be detached",
                        "description": "Instances to be detached",
                        "example": [
                          "i-123456",
                          "i-456798"
                        ]
                      },
                      "shouldTerminateInstances": {
                        "type": "boolean",
                        "title": "Termination criteria",
                        "description": "Should Terminate Instances Criteria",
                        "example": true
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "title": "Decrement target capacity criteria",
                        "description": "Should Decrement Target Capacity Criteria",
                        "example": false
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "title": "Time",
                        "description": "Draining Timeout",
                        "example": 300
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach Instance Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/detachInstances",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:detachInstances",
                                  "description": "The data type of each item in the response\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/autoScalingGroup/import": {
      "post": {
        "summary": "Import ASG",
        "description": "Create a new Elastigroup â this Elastigroup will have the same configuration of the imported Autoscaling group",
        "operationId": "elastigroupAwsImportAsg",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "autoScalingGroupName",
            "example": "MyASG",
            "description": "The ASG name\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "The AWS region for the ASG\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-12345",
            "description": "Your account ID in Spot\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "dryRun",
            "example": "act-12345",
            "description": "When `dryRun` is set to `true`, the API call will return the Elastigroup configuration without actually performing any action\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Group",
                        "properties": {
                          "product": {
                            "type": "string",
                            "title": "Product (OS)",
                            "example": "Linux/UNIX",
                            "description": "Operation system type. Possible values: Linux/UNIX | SUSE | Linux Windows | Linux/UNIX (Amazon VPC) | SUSE Linux (Amazon VPC) | Windows (Amazon VPC)\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "title": "Product (OS)",
                            "example": [
                              "c3.large",
                              "m4.large"
                            ],
                            "description": "An Array holding the types of instances to be used in the Elastigroup\n"
                          },
                          "name": {
                            "type": "object",
                            "title": "Name",
                            "example": "My Group",
                            "description": "Specify the actual auto scaling group name that the configuration will be imported from\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import ASG Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/autoScalingGroup/import?region=us-west-2&TESTING_ASG",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "group"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sig-e2927aac"
                                        },
                                        "name": {
                                          "type": "string",
                                          "title": "name",
                                          "example": "TESTING_ASG"
                                        },
                                        "description": {
                                          "type": "string",
                                          "title": "name",
                                          "example": "Imported from auto scaling group TESTING_ASG"
                                        },
                                        "capacity": {
                                          "type": "object",
                                          "properties": {
                                            "target": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "minimum": {
                                              "type": "integer",
                                              "example": 0
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "example": 5
                                            },
                                            "unit": {
                                              "type": "integer",
                                              "example": "instance"
                                            }
                                          }
                                        },
                                        "strategy": {
                                          "type": "object",
                                          "properties": {
                                            "risk": {
                                              "type": "integer",
                                              "example": 100
                                            },
                                            "drainingTimeout": {
                                              "type": "integer",
                                              "example": 0
                                            }
                                          }
                                        },
                                        "compute": {
                                          "type": "object",
                                          "properties": {
                                            "instanceTypes": {
                                              "type": "object",
                                              "properties": {
                                                "ondemand": {
                                                  "type": "string",
                                                  "example": "m3.medium"
                                                },
                                                "spot": {
                                                  "type": "string",
                                                  "example": [
                                                    "c3.large"
                                                  ]
                                                }
                                              }
                                            },
                                            "availabilityZones": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "us-west-2b"
                                                  },
                                                  "subnetIds": {
                                                    "type": "string",
                                                    "example": "subnet-2e967065"
                                                  }
                                                }
                                              }
                                            },
                                            "product": {
                                              "type": "string",
                                              "example": "Linux/UNIX"
                                            },
                                            "launchSpecification": {
                                              "type": "object",
                                              "properties": {
                                                "loadBalancersConfig": {
                                                  "type": "object",
                                                  "properties": {
                                                    "loadBalancers": {
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "title": "Name",
                                                          "example": "TESTING_ASG"
                                                        },
                                                        "type": {
                                                          "type": "string",
                                                          "title": "Type",
                                                          "example": "CLASSIC"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "healthCheckType": {
                                                    "type": "string",
                                                    "title": "Health Check Type",
                                                    "example": "EC2"
                                                  },
                                                  "healthCheckGracePeriod": {
                                                    "type": "integer",
                                                    "title": "Health Check Grace Period",
                                                    "example": 600
                                                  },
                                                  "securityGroupIds": {
                                                    "type": "string",
                                                    "title": "Security Group IDs",
                                                    "example": [
                                                      "sg-451f8b3a"
                                                    ]
                                                  },
                                                  "monitoring": {
                                                    "type": "boolean",
                                                    "title": "Monitoring",
                                                    "example": false
                                                  },
                                                  "imageId": {
                                                    "type": "string",
                                                    "title": "Image ID",
                                                    "example": "ami-485eef30"
                                                  },
                                                  "ebsOptimized": {
                                                    "type": "boolean",
                                                    "title": "EBS Optomozed",
                                                    "example": true
                                                  },
                                                  "blockDeviceMappings": {
                                                    "type": "array",
                                                    "title": "Block Device Mappings",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "deviceName": {
                                                          "type": "string",
                                                          "title": "device Name",
                                                          "example": "/dev/sda1"
                                                        },
                                                        "ebs": {
                                                          "type": "object",
                                                          "properties": {
                                                            "deleteOnTermination": {
                                                              "type": "booleang",
                                                              "title": "Delete On Termination",
                                                              "example": true
                                                            },
                                                            "volumeSize": {
                                                              "type": "integer",
                                                              "title": "Volume Size",
                                                              "example": 30
                                                            },
                                                            "volumeType": {
                                                              "type": "string",
                                                              "title": "Volume Type",
                                                              "example": "gp2"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "scaling": {
                                          "type": "object"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2020-10-01T05:23:59.302Z"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "example": "2020-10-01T05:23:59.302Z"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/spotType": {
      "get": {
        "summary": "Instance Type By Region",
        "description": "Get the available spot instances types available in a specific region\n",
        "operationId": "awsElastigroupGetInstanceTypeByRegion",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "region",
            "example": "us-east-2",
            "description": "The AWS region\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Type By Region Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/spotType?region=us-west-2",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:spot:type",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "example": [
                                        {
                                          "instanceType": "hi1.4xlarge"
                                        },
                                        {
                                          "instanceType": "r5d.4xlarge"
                                        },
                                        {
                                          "instanceType": "r5ad.12xlarge"
                                        },
                                        {
                                          "instanceType": "r4.4xlarge"
                                        },
                                        {
                                          "instanceType": "m1.xlarge"
                                        },
                                        {
                                          "instanceType": "a1.4xlarge"
                                        },
                                        {
                                          "instanceType": "m5a.4xlarge"
                                        },
                                        {
                                          "instanceType": "m3.large"
                                        },
                                        {
                                          "instanceType": "x1e.4xlarge"
                                        },
                                        {
                                          "instanceType": "m5d.4xlarge"
                                        },
                                        {
                                          "instanceType": "m5a.24xlarge"
                                        },
                                        {
                                          "instanceType": "m5a.large"
                                        },
                                        {
                                          "instanceType": "r5d.8xlarge"
                                        },
                                        {
                                          "instanceType": "m3.medium"
                                        },
                                        {
                                          "instanceType": "p2.xlarge"
                                        },
                                        {
                                          "instanceType": "m4.large"
                                        },
                                        {
                                          "instanceType": "m5.24xlarge"
                                        },
                                        {
                                          "instanceType": "r5a.4xlarge"
                                        },
                                        {
                                          "instanceType": "c5.large"
                                        },
                                        {
                                          "instanceType": "m5ad.xlarge"
                                        },
                                        {
                                          "instanceType": "m5d.large"
                                        },
                                        {
                                          "instanceType": "r5d.12xlarge"
                                        },
                                        {
                                          "instanceType": "r5a.2xlarge"
                                        },
                                        {
                                          "instanceType": "m3.2xlarge"
                                        },
                                        {
                                          "instanceType": "t3a.large"
                                        },
                                        {
                                          "instanceType": "t2.medium"
                                        },
                                        {
                                          "instanceType": "i3.2xlarge"
                                        },
                                        {
                                          "instanceType": "p3.2xlarge"
                                        },
                                        {
                                          "instanceType": "cc2.8xlarge"
                                        },
                                        {
                                          "instanceType": "i3.xlarge"
                                        },
                                        {
                                          "instanceType": "r3.2xlarge"
                                        },
                                        {
                                          "instanceType": "i3.8xlarge"
                                        },
                                        {
                                          "instanceType": "c4.8xlarge"
                                        },
                                        {
                                          "instanceType": "r5.metal"
                                        },
                                        {
                                          "instanceType": "m4.10xlarge"
                                        },
                                        {
                                          "instanceType": "m1.large"
                                        },
                                        {
                                          "instanceType": "r5d.2xlarge"
                                        },
                                        {
                                          "instanceType": "t1.micro"
                                        },
                                        {
                                          "instanceType": "i2.4xlarge"
                                        },
                                        {
                                          "instanceType": "r5a.24xlarge"
                                        },
                                        {
                                          "instanceType": "z1d.2xlarge"
                                        },
                                        {
                                          "instanceType": "r5.xlarge"
                                        },
                                        {
                                          "instanceType": "m5ad.large"
                                        },
                                        {
                                          "instanceType": "h1.4xlarge"
                                        },
                                        {
                                          "instanceType": "m5d.12xlarge"
                                        },
                                        {
                                          "instanceType": "c5.2xlarge"
                                        },
                                        {
                                          "instanceType": "x1e.8xlarge"
                                        },
                                        {
                                          "instanceType": "d2.8xlarge"
                                        },
                                        {
                                          "instanceType": "r5.8xlarge"
                                        },
                                        {
                                          "instanceType": "c3.large"
                                        },
                                        {
                                          "instanceType": "r4.xlarge"
                                        },
                                        {
                                          "instanceType": "m5ad.24xlarge"
                                        },
                                        {
                                          "instanceType": "t3a.xlarge"
                                        },
                                        {
                                          "instanceType": "d2.4xlarge"
                                        },
                                        {
                                          "instanceType": "c5.24xlarge"
                                        },
                                        {
                                          "instanceType": "c5.metal"
                                        },
                                        {
                                          "instanceType": "c1.medium"
                                        },
                                        {
                                          "instanceType": "m1.medium"
                                        },
                                        {
                                          "instanceType": "g3.8xlarge"
                                        },
                                        {
                                          "instanceType": "r4.2xlarge"
                                        },
                                        {
                                          "instanceType": "i3en.6xlarge"
                                        },
                                        {
                                          "instanceType": "t3.small"
                                        },
                                        {
                                          "instanceType": "i3en.large"
                                        },
                                        {
                                          "instanceType": "i3en.24xlarge"
                                        },
                                        {
                                          "instanceType": "t2.xlarge"
                                        },
                                        {
                                          "instanceType": "t3a.medium"
                                        },
                                        {
                                          "instanceType": "m4.16xlarge"
                                        },
                                        {
                                          "instanceType": "x1.32xlarge"
                                        },
                                        {
                                          "instanceType": "r5a.12xlarge"
                                        },
                                        {
                                          "instanceType": "c5d.4xlarge"
                                        },
                                        {
                                          "instanceType": "i3en.12xlarge"
                                        },
                                        {
                                          "instanceType": "c5d.large"
                                        },
                                        {
                                          "instanceType": "g3.16xlarge"
                                        },
                                        {
                                          "instanceType": "c3.2xlarge"
                                        },
                                        {
                                          "instanceType": "x1e.2xlarge"
                                        },
                                        {
                                          "instanceType": "a1.2xlarge"
                                        },
                                        {
                                          "instanceType": "r5ad.xlarge"
                                        },
                                        {
                                          "instanceType": "m5a.xlarge"
                                        },
                                        {
                                          "instanceType": "t2.large"
                                        },
                                        {
                                          "instanceType": "r5ad.large"
                                        },
                                        {
                                          "instanceType": "i3.metal"
                                        },
                                        {
                                          "instanceType": "t3.nano"
                                        },
                                        {
                                          "instanceType": "r5ad.2xlarge"
                                        },
                                        {
                                          "instanceType": "f1.16xlarge"
                                        },
                                        {
                                          "instanceType": "h1.8xlarge"
                                        },
                                        {
                                          "instanceType": "m5.12xlarge"
                                        },
                                        {
                                          "instanceType": "a1.medium"
                                        },
                                        {
                                          "instanceType": "i3en.3xlarge"
                                        },
                                        {
                                          "instanceType": "m5d.8xlarge"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 322,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instanceTypeRecommendation": {
      "post": {
        "summary": "Suggested Instance Type",
        "description": "Get suggested instance types by required resources.\nNote that request must include region, and at least one of the following values - baselineInstanceType, requiredVCpu, requiredMemoryGib",
        "operationId": "elastigroupAwsSuggestedInstanceType",
        "tags": [
          "Insights Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "requirements": {
                        "type": "object",
                        "title": "AWS Elastigroup",
                        "properties": {
                          "region": {
                            "type": "string",
                            "description": "Set valid AWS region",
                            "example": "us-east-1"
                          },
                          "baselineInstanceType": {
                            "type": "string",
                            "description": "Set valid AWS instance type as baseline",
                            "example": "m5.large"
                          },
                          "requiredVCpu": {
                            "type": "object",
                            "description": "Set required CPU resources by min / max",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Minimum amount of VCpu",
                                "example": 2
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Maximum amount of VCpu",
                                "example": 4
                              }
                            }
                          },
                          "requiredMemoryGib": {
                            "type": "object",
                            "description": "Set required Memory (in Gib) resources by min / max",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Minimum amount of Gib",
                                "example": 16
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Maximum amount of Gib",
                                "example": 64
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Suggested Instance Type Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "0bb5db74-2457-4a34-b8f3-174e6bf5578e",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instanceTypeRecommendation",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-06-19T08:41:57.516Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:instanceTypeRecommendation",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": null,
                                      "example": [
                                        {
                                          "instanceType": "m4.large"
                                        },
                                        {
                                          "instanceType": "m5.large"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/interruption": {
      "post": {
        "summary": "Simulate an Instance Interruption",
        "description": "The simulate instance interruption API is used for simulating a spot interruption in AWS, so that customers can verify specific applicative behaviors in case an interruption takes place. Once the interruption api is called, instances posted in the API body will be terminated in AWS, thus mocking a spot interruption.",
        "operationId": "elastigroupAwsInstanceInterruption",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instancesToInterrupt": {
                        "type": "string",
                        "description": "A list of group's instance ids to interrupt\n",
                        "example": [
                          "i-123456",
                          "i-9876543"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Simulate An Instance Interruption",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/interruption?accountId=act-4fb595c6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/signal": {
      "post": {
        "summary": "Create Instance Signal",
        "description": "The instance signal API is used for notifying Spot about the instance state, so Spot can act accordingly. Supported signals are - INSTANCE_READY â Whenever this signal is sent, Spot will register the instance to the ELB INSTANCE_READY_TO_SHUTDOWN â Whenever this signal is sent, Spot will terminate the instance after it was marked for termination. Important - You need to define the expected signals for your Elastigroup in the group configuration.",
        "operationId": "elastigroupAwsCreateInstanceSignal",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "instanceId": {
                        "type": "string",
                        "example": "i-123456",
                        "description": "The instance ID the signal refers to."
                      },
                      "signal": {
                        "type": "string",
                        "example": "INSTANCE_READY",
                        "description": "The specific signal you want to trigger. Valid Values - INSTANCE_READY, INSTANCE_READY_TO_SHUTDOWN"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Instance Signal Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/signal",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/standby/enter": {
      "post": {
        "summary": "Instance Standby",
        "description": "Instance Standby enables you to put an instance in Standby state , update or troubleshoot the instance, and then return the instance to service. Instances that are on standby are still part of the Elastigroup, but they don't get application traffic.\nWhenever instance is standby state -\nIt will be de-registered from all the ELBs / ALBs in the Elastigroup It won't be affected from Scale down activities in the Elastigroup The instance health won't be checked, and it won't be replaced When the instance exits the Standby state -\nThe instance will be register back to all the ELBs / ALBs that are defined in the Elastigroup It will be considered and affected from all the Elastigroup activities (helth checks, scaling, etc.)",
        "operationId": "elastigroupAwsInstanceStandBy",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "The instance ID you want to put in standby state\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Standby Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/standby/enter",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/instance/{instanceId}/standby/exit": {
      "post": {
        "summary": "Exit Instance Standby",
        "description": "Exit standby by mode",
        "operationId": "elastigroupAwsInstanceExitStandBy",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "example": "i-123456",
            "description": "The instance ID you want to put in standby state\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Exit Instance Standby Responce",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/instance/i-123456/standby/exit",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll": {
      "get": {
        "summary": "Group's Deployments Status",
        "description": "Get list of all the deployments of a specific Elastigroup and their status",
        "operationId": "elastigroupAwsDeploymentsStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "example": "5",
            "description": "Limits results\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "example": "createdAt:ASC",
            "description": "Field to sort by the results Default: createdAt:DESC\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Group's Deployments Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/roll?limit=5&sort=createdAt%3ADESC",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-781c6212"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "starting"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 0
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2018-03-27T19:50:12.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-03-27T19:50:16.000+0000"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-3f127ed0"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "starting"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 0
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2018-03-27T19:46:22.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-03-27T19:46:35.000+0000"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-3ee19606"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "stopped"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 0
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2018-03-27T19:35:41.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-03-27T19:39:18.000+0000"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-cc4c44e2"
                                        },
                                        "status": {
                                          "type": "string",
                                          "title": "Status",
                                          "example": "finished"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 100
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "title": "Created At",
                                          "example": "2018-03-26T19:22:45.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "title": "Updated At",
                                          "example": "2018-03-26T19:26:17.000+0000"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Start Deployment",
        "description": "Deploy your Elastigroup (triggers Blue/Green Deployment that replaces the existing instances in the Elastigroup)",
        "operationId": "elastigroupAwsDeploy",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "batchSizePercentage",
                      "gracePeriod"
                    ],
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "example": 20,
                        "description": "Indicates (in percentage) the batch size of the deployment (meaning, how many instances to replace in each batch)\n"
                      },
                      "gracePeriod": {
                        "type": "integer",
                        "example": 300,
                        "description": "Indicates (in seconds) the timeout to wait until instance become healthy based on the healthCheckType\n"
                      },
                      "healthCheckType": {
                        "type": "string",
                        "example": "EC2",
                        "description": "Define a health check type.\\\nIf no value is set the roll will use the groupâs auto-healing health check.\n",
                        "enum": [
                          "ELB",
                          "ECS_CLUSTER_INSTANCE",
                          "TARGET_GROUP",
                          "OPSWORKS",
                          "NOMAD_NODE",
                          "MULTAI_TARGET_SET",
                          "HCS",
                          "EC2",
                          "NONE"
                        ]
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "default": 120,
                        "example": 60,
                        "description": "Indicates (in seconds) the timeout to drain the instances. Override the group value.\n",
                        "minimum": 0
                      },
                      "strategy": {
                        "description": "The roll strategy\n",
                        "properties": {
                          "action": {
                            "type": "string",
                            "default": "REPLACE_SERVER",
                            "example": "REPLACE_SERVER",
                            "description": "The roll action to perform.\n",
                            "enum": [
                              "REPLACE_SERVER",
                              "RESTART_SERVER"
                            ]
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "default": 50,
                            "example": 25,
                            "description": "Indicates the threshold of minimum healthy instances in single batch.\\\nIf the amount of healthy instances in single batch is under the threshold, the deployment will fail.\\\nIn case of null as value, the default value in the backend will be 50%.\\\nValue of param should represent the number in percentage (%) of the batch.\n",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "onFailure": {
                            "type": "object",
                            "required": [
                              "actionType"
                            ],
                            "description": "Set detach options to the deployment\n",
                            "properties": {
                              "actionType": {
                                "type": "string",
                                "example": "DETACH_NEW",
                                "description": "Sets the action that will take place.\n",
                                "enum": [
                                  "DETACH_OLD",
                                  "DETACH_NEW"
                                ]
                              },
                              "shouldHandleAllBatches": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "Indicator if the action should apply to all batches of the deployment or only the latest batch\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "default": "The Elastigroups draining time out",
                                "example": 120,
                                "description": "Indicates (in seconds) the timeout to drain the instances\n"
                              },
                              "shouldDecrementTargetCapacity": {
                                "type": "boolean",
                                "default": true,
                                "example": true,
                                "description": "Decrementing the group target capacity after detaching the instances\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deploy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/roll?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "title": "ID",
                                          "example": "sbgd-3ee19606"
                                        },
                                        "status": {
                                          "type": "in_progress",
                                          "title": "Status",
                                          "example": "STARTING"
                                        },
                                        "currentBatch": {
                                          "type": "integer",
                                          "title": "Status",
                                          "example": 1
                                        },
                                        "numOfBatches": {
                                          "type": "integer",
                                          "title": "Status",
                                          "example": 1
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "title": "Unit",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "title": "Value",
                                              "example": 0
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll/{rollId}": {
      "put": {
        "summary": "Stop Deployment",
        "description": "Stop an existing deployment",
        "operationId": "elastigroupAwsStopDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to stop\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "roll": {
                        "type": "object",
                        "title": "Role",
                        "properties": {
                          "status": {
                            "type": "string",
                            "title": "Status",
                            "example": "STOPPED",
                            "description": "Set the status of the group to `STOPPED\"\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stop Deployment Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "ff3e1e5b-91b8-42fa-8267-b988efc7f662",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-12345/roll/sbgd-dfb956b4",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2015-06-29T13:01:55.060Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll",
                                  "description": "The data type of each item in the response\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Deployment Status",
        "description": "Get status of a specific deployment",
        "operationId": "elastigroupAwsDeployStatus",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to query\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Deploy Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-d8489594/deployment/sbgd-3e158755/details?spotinstAccountId=act-d48178ad",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll:details",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "detailsOverview": {
                                          "type": "object",
                                          "properties": {
                                            "deploymentId": {
                                              "type": "string",
                                              "title": "Deployment ID",
                                              "example": "sbgd-3e158755"
                                            },
                                            "numberOfBatches": {
                                              "type": "integer",
                                              "title": "Number Of Batches",
                                              "example": 2
                                            },
                                            "currentBatch": {
                                              "type": "integer",
                                              "title": "Current Batch",
                                              "example": 1
                                            },
                                            "gracePeriod": {
                                              "type": "integer",
                                              "title": "Grace Period",
                                              "example": 600
                                            },
                                            "strategyAction": {
                                              "type": "integer",
                                              "title": "Strategy Action",
                                              "example": "REPLACE_SERVER"
                                            },
                                            "blueInstances": {
                                              "type": "integer",
                                              "title": "Blue Instances",
                                              "example": 2
                                            },
                                            "greenInstances": {
                                              "type": "integer",
                                              "title": "Green Instances",
                                              "example": 1
                                            },
                                            "createdAt": {
                                              "type": "string",
                                              "title": "Created At",
                                              "example": "2019-09-03T15:12:02.000Z"
                                            }
                                          }
                                        },
                                        "batches": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "batch": {
                                                "type": "integer",
                                                "title": "Batch",
                                                "example": 1
                                              },
                                              "blue": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "instanceId": {
                                                      "type": "string",
                                                      "title": "Instance Id",
                                                      "example": "i-05e0e4d5a66a16e40"
                                                    },
                                                    "spotRequestId": {
                                                      "type": "string",
                                                      "title": "Spot Request ID",
                                                      "example": "sir-1dxg95bn"
                                                    },
                                                    "batchNum": {
                                                      "type": "integer",
                                                      "title": "Batch Number",
                                                      "example": 1
                                                    },
                                                    "status": {
                                                      "type": "string",
                                                      "title": "Status",
                                                      "example": "RUNNING"
                                                    },
                                                    "type": {
                                                      "type": "string",
                                                      "title": "Type",
                                                      "example": "OLD"
                                                    },
                                                    "updatedAt": {
                                                      "type": "string",
                                                      "title": "Updated At",
                                                      "example": "2019-09-03T15:12:02.000Z"
                                                    }
                                                  }
                                                }
                                              },
                                              "green": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "instanceId": {
                                                      "type": "string",
                                                      "title": "Instance Id",
                                                      "example": "i-0a13d50e91a5ed068"
                                                    },
                                                    "spotRequestId": {
                                                      "type": "string",
                                                      "title": "Spot Request ID",
                                                      "example": "sir-vxkga1zp"
                                                    },
                                                    "batchNum": {
                                                      "type": "integer",
                                                      "title": "Batch Number",
                                                      "example": 1
                                                    },
                                                    "status": {
                                                      "type": "string",
                                                      "title": "Status",
                                                      "example": "RUNNING"
                                                    },
                                                    "type": {
                                                      "type": "string",
                                                      "title": "Type",
                                                      "example": "NEW"
                                                    },
                                                    "updatedAt": {
                                                      "type": "string",
                                                      "title": "Updated At",
                                                      "example": "2019-09-03T15:13:26.000Z"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "events": {
                                          "type": "array",
                                          "example": [
                                            {
                                              "status": "Deployment Start",
                                              "eventType": null,
                                              "timestamp": "2019-09-03T15:12:02.000Z"
                                            },
                                            {
                                              "status": "Deployment In Progress",
                                              "eventType": "Batch 1 - Launching New instances",
                                              "timestamp": "2019-09-03T15:12:46.000Z"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/roll/{rollId}/action": {
      "post": {
        "summary": "Deployment Actions",
        "description": "Apply a Detach action to a deployment",
        "operationId": "elastigroupAwsDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The deployment ID to call the action on\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "actionType": {
                        "type": "string",
                        "title": "Type of action",
                        "description": "Sets the action that will take place, Accepted values are: DETACH_OLD, DETACH_NEW\n",
                        "example": "DETACH_NEW"
                      },
                      "shouldHandleAllBatches": {
                        "type": "boolean",
                        "title": "Should Hnadle All Batches Criteria",
                        "example": true,
                        "default": false,
                        "description": "Indicator if the action should apply to all batches of the deployment or only the latest batch\n"
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "title": "Draining timeout criteria",
                        "description": "Indicates (in seconds) the timeout to wait until instance are detached\n",
                        "example": 200
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "title": "Should Decrement Target Capacity criteria",
                        "example": true,
                        "default": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deployment Actions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/aws/ec2/group/sig-1b656b92/roll/sbgd-aafb7671/action",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:roll:action",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "groupId": {
                                          "type": "string",
                                          "description": "Group ID",
                                          "example": "sig-1b656b92"
                                        },
                                        "rollId": {
                                          "type": "string",
                                          "description": "Roll ID",
                                          "example": "sbgd-aafb7671"
                                        },
                                        "actionType": {
                                          "type": "string",
                                          "description": "Roll ID",
                                          "example": "DETACH_NEW"
                                        },
                                        "detachedInstances": {
                                          "type": "string",
                                          "example": [
                                            "i-0b6974ad592f8d9ba"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group": {
      "get": {
        "summary": "List Elastigroups",
        "description": "List all Azure Elastigroups for a Spot Account\n",
        "operationId": "elastigroupAzureListAll",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new Azure Elastigroup",
        "operationId": "elastigroupAzureCreate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Create Elastigroup Azure Scale Set VMs Body",
                    "required": [
                      "group",
                      "name",
                      "region",
                      "capacity",
                      "strategy",
                      "compute"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name",
                          "region",
                          "capacity",
                          "resourceGroupName",
                          "strategy",
                          "compute"
                        ],
                        "title": "Azure Elastigroup",
                        "description": "Azure Elastigroup Configuration",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-123456789",
                            "readOnly": true,
                            "description": "Azure Elastigroup ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "eastus",
                            "description": "Valid Azure region the Elastigroup is managed in\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotinst-azure",
                            "description": "The Azure resource group to associate the Elastigroup with\n"
                          },
                          "capacity": {
                            "type": "object",
                            "description": "Capacity of Elastigroup",
                            "required": [
                              "target",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The Elastigroup will not set a target greater than this value\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "description": "Scaling Policies for Elastigroup. Set as many policies as needed to maximize the Elastigroupâs efficiency.",
                            "title": "Azure Scaling",
                            "properties": {
                              "up": {
                                "type": "object",
                                "title": "Scale Up Policies",
                                "description": "Provide the ability to accommodate increased workloads.",
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways",
                                    "default": "Microsoft.Compute"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "The dimensions for the alarm's associated metric. If the user mentioned name as instanceId, there is NO value",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "title": "Name",
                                          "description": "Dimenstions Name",
                                          "type": "string",
                                          "example": "resourceName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Dimenstions Value",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMinTarget\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      },
                                      "minTargetCapacity": {
                                        "title": "Minimum Target Capacity",
                                        "description": "Value to adjust the capacity to. Required if using as action type:\n+ setMinTarget"
                                      },
                                      "target": {
                                        "title": "Target",
                                        "description": "Value to update the group target capacity to. Also you must indicate âminimumâ and âmaximumâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 23
                                      },
                                      "minimum": {
                                        "title": "Target",
                                        "description": "Value to update the group minimum capacity to. Also you must indicate âtargetâ and âmaximumâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 20
                                      },
                                      "maximum": {
                                        "title": "Target",
                                        "description": "Value to update the group minimum capacity to. Also you must indicate âtargetâ and âminimumâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integrer",
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "title": "Scale Down Policies",
                                "description": "Provide the ability to scale down to maximize cost efficiency.",
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Number of consecutive periods in which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "Namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "default": "lte",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "The dimensions for the alarm's associated metric. If the user mentioned name as instanceId, there is NO value",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "title": "Name",
                                          "description": "Dimenstions Name",
                                          "type": "string",
                                          "example": "resourceName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Dimenstions Name",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMaxTarget\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "target": {
                                        "type": "integer",
                                        "title": "Target",
                                        "description": "Desired number of instances. Also you must indicate âminimumâ and âmaximumâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "minimum": {
                                        "type": "integer",
                                        "title": "Minimum",
                                        "description": "Lower limit of instances that you can scale down to. Also you must indicate âtargetâ and âmaximumâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "title": "Maximum",
                                        "description": "Upper limit of instances that you can scale down to. Also you must indicate âminimumâ and âtargetâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      }
                                    },
                                    "policyName": {
                                      "type": "object",
                                      "example": "cpuScaleDown",
                                      "threshold": {
                                        "example": 0.25
                                      },
                                      "operator": {
                                        "example": "lte"
                                      },
                                      "action": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "adjustment",
                                            "enum": [
                                              "adjustment",
                                              "setMaxTarget",
                                              "updateCapacity",
                                              "percentageAdjustment"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Scaling Strategy",
                            "properties": {
                              "lowPriorityPercentage": {
                                "title": "Low Priority Percentage",
                                "description": "Percentage of Low Priority instances to maintain.  <a style=color:red>Required if odCount isn't specified.</a>",
                                "type": "integer",
                                "default": 100
                              },
                              "onDemandCount": {
                                "title": "On Demand Count",
                                "type": "integer",
                                "description": "Number of On-Demand instances to maintain.  <a style=color:red>Required if lowPriorityPercentage isn't specified.</a>"
                              },
                              "drainingTimeout": {
                                "title": "On Demand Count",
                                "type": "integer",
                                "description": "Time (seconds) to allow the instance be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.",
                                "default": 120
                              }
                            }
                          },
                          "compute": {
                            "title": "Compute",
                            "description": "Elastigroup's Compute Configurtion",
                            "type": "object",
                            "required": [
                              "vmSizes",
                              "product",
                              "launchSpecification"
                            ],
                            "properties": {
                              "vmSizes": {
                                "title": "VM Sizes",
                                "description": "Sizes of On-Demand and Low-Priority VMs.",
                                "type": "object",
                                "required": [
                                  "odSizes",
                                  "lowPrioritySizes"
                                ],
                                "properties": {
                                  "odSizes": {
                                    "title": "OD Sizes",
                                    "type": "array",
                                    "description": "Array of string (s) with Available On-Demand sizes (pls chose items that correspond to your location or zone) https://docs.microsoft.com/azure/virtual-machines/sizes",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_b1s"
                                    }
                                  },
                                  "lowPrioritySizes": {
                                    "title": "Low Priority Sizes",
                                    "description": "Available Low-Priority sizes. (pls chose items that correspond to your location or zone) https://docs.microsoft.com/azure/virtual-machines/sizes",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "product": {
                                "type": "string",
                                "example": "Linux",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ]
                              },
                              "health": {
                                "title": "Health",
                                "description": "Autohealing of unhealthy VMs.",
                                "type": "object",
                                "properties": {
                                  "autoHealing": {
                                    "title": "Auto Healing",
                                    "description": "Enable Autohealing of unhealthy VMs.",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "healthCheckType": {
                                    "title": null,
                                    "description": "Healthcheck to use to validate VM health. </br> Valid Values:\n+ INSTANCE_STATE\n+ MULTAI_TARGET_SET\n+ HCS\n+ K8S_NODE",
                                    "type": "string",
                                    "example": "INSTANCE_STATE",
                                    "enum": [
                                      "INSTANCE_STATE"
                                    ]
                                  },
                                  "gracePeriod": {
                                    "title": "Grace Period",
                                    "description": "Period of time to wait for VM to reach healthiness before monitoring for unhealthiness.",
                                    "type": "integer",
                                    "example": 120
                                  },
                                  "unhealthyDuration": {
                                    "title": "Unhealthy Duration",
                                    "description": "amount of time to be unhealthy before a replacement is triggered",
                                    "type": "integer",
                                    "example": 360
                                  }
                                }
                              },
                              "launchSpecification": {
                                "title": "Launch Specification",
                                "description": "Launch Specification Configuration",
                                "type": "object",
                                "required": [
                                  "login",
                                  "image",
                                  "network",
                                  "subnetName"
                                ],
                                "properties": {
                                  "image": {
                                    "title": "Image",
                                    "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace) or use a custom image.",
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "title": "Marketplace",
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue.  <a style=color:red;>Required if custom image isn't specified.</a>",
                                        "properties": {
                                          "publisher": {
                                            "title": "Publisher",
                                            "description": "Image publisher.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "title": "Offer",
                                            "desription": "Name of image to use.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "title": "Stock Keeping Unit",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. if version not provided we use 'latest'",
                                            "type": "string",
                                            "example": "7.3-1611",
                                            "default": "latest"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "title": "Custom",
                                        "type": "object",
                                        "description": "Custom image to launch Elastigroup with. Cannot be used with `marketplace`  <a style=color:red;>Required if marketplace image isn't specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "imageName": {
                                            "title": "Image Name",
                                            "description": "Name of the custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "title": "Load Balancer Configuration",
                                    "description": "Configure a Load Balancer",
                                    "type": "object",
                                    "properties": {
                                      "loadBalancers": {
                                        "title": "Load Balancers",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.",
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "title": "MULTAI_TARGET_SET",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "MULTAI_TARGET_SET",
                                                  "enum": [
                                                    "MULTAI_TARGET_SET"
                                                  ]
                                                },
                                                "balancerId": {
                                                  "type": "string",
                                                  "example": "lb-1ee2e3q"
                                                },
                                                "targetSetId": {
                                                  "type": "string",
                                                  "example": "ts-3eq"
                                                },
                                                "autoWeight": {
                                                  "type": "boolean",
                                                  "example": true
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "title": "APPLICATION_GATEWAY",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "APPLICATION_GATEWAY",
                                                  "enum": [
                                                    "APPLICATION_GATEWAY"
                                                  ]
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "example": "azureResourceGroup"
                                                },
                                                "applicationGatewayName": {
                                                  "type": "string",
                                                  "example": "appGateway"
                                                },
                                                "backendPoolName": {
                                                  "type": "string",
                                                  "example": "backendpool490822"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "userData": {
                                    "title": "User Data",
                                    "description": "Base64-encoded MIME user data to make available to the instances.",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "managedServiceIdentities": {
                                    "title": "Managed Service Identities",
                                    "description": "Add a user-assigned managed identity to the VMs in the cluster.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "resourceGroupName": {
                                          "title": "Resource Group Name",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.",
                                          "type": "string",
                                          "example": "Resourse Group 1"
                                        },
                                        "name": {
                                          "title": "Name",
                                          "description": "Name of the managed identity",
                                          "type": "string",
                                          "example": "Test"
                                        }
                                      }
                                    }
                                  },
                                  "shutdownScript": {
                                    "title": "Shutdown Script",
                                    "type": "string",
                                    "description": "Shutdown script for the group. Value should be passed as a string encoded at Base64 only",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "tags": {
                                    "title": "Tags",
                                    "description": "Key-Value pairs for VMs in the Elastigroup.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "title": "Tag Key",
                                          "description": "Tag Key for Vms in Elastigroup.",
                                          "type": "string",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "title": "Tag Value",
                                          "description": "Tag Value for VMs in Elastigroup.",
                                          "type": "string",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "subnetName"
                                    ],
                                    "properties": {
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Name of Vnet.",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "subnetName": {
                                        "title": "Subnet Name",
                                        "description": "ID of subnet.",
                                        "type": "string",
                                        "example": "my-subnet-name"
                                      },
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "assignPublicIp": {
                                        "title": "Assign Public Ip",
                                        "description": "Assign a public IP to each VM in the Elastigroup.",
                                        "default": false,
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "additionalIPConfigurations": {
                                        "title": "Additional IP Configurations",
                                        "description": "Add array of additional IP configuration objects",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "name": {
                                              "title": "Name",
                                              "description": "The IP configuration name.",
                                              "type": "string",
                                              "example": "config1"
                                            },
                                            "privateIpAddressVersion": {
                                              "title": "Private IP Address Version",
                                              "description": "Available from Azure Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Valid values:\n+ IPv4\n+ IPv6",
                                              "type": "string",
                                              "example": "IPv4"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "title": "Extensions",
                                    "description": "List of objects for Azure extensions",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "autoUpgradeMinorVersion",
                                        "name",
                                        "publisher",
                                        "type",
                                        "typeHandlerVersion"
                                      ],
                                      "properties": {
                                        "autoUpgradeMinorVersion": {
                                          "title": "Auto Upgrade Minor Version",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "boolean",
                                          "example": true,
                                          "required": true
                                        },
                                        "name": {
                                          "title": "name",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "k8s-agentpool1-38611891-vmss-computeAksLinuxBilling"
                                        },
                                        "protectedSettings": {
                                          "title": "Protected Settings",
                                          "description": "Object for protected settings",
                                          "type": "object",
                                          "required": [
                                            "commandToExecute"
                                          ],
                                          "properties": {
                                            "commandToExecute": {
                                              "title": "Command To Execute",
                                              "description": "Required for compute.launchSpecification.extensions.protectedSettings object",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "publisher": {
                                          "title": "Publisher",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "Microsoft.AKS"
                                        },
                                        "type": {
                                          "title": "Type",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "Compute.AKS-Engine.Linux.Billing"
                                        },
                                        "typeHandlerVersion": {
                                          "title": "Type Handler Version",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "1.0"
                                        }
                                      }
                                    }
                                  },
                                  "customData": {
                                    "title": "Custom Data",
                                    "description": "This value will hold the YML in base64 and will be added to the scaleSets",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "login": {
                                    "title": "Login",
                                    "description": "Set admin access for accessing your VMs.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "userName"
                                      ],
                                      "properties": {
                                        "userName": {
                                          "title": "User Name",
                                          "description": "User name for admin access to VMs.\n+ for windows: compute.launchSpecification.login.password\n+ for linux: compute.launchSpecification.login.sshPublicKey",
                                          "type": "string",
                                          "example": "spotinst"
                                        },
                                        "sshPublicKey": {
                                          "title": "SSH Public Key",
                                          "description": "SSH for admin access to Linux VMs.  <a style = color:red>Required for Linux.  Can not exist simultaneously with 'password'</a>",
                                          "type": "string"
                                        },
                                        "password": {
                                          "title": "Password",
                                          "description": "Password for admin access to Windows VMs.  <a style = color:red>Required for Windows. Can not exist simultaneously with 'sshPublicKey'</a>",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "title": "Third Parties Integration",
                            "description": "Settings for 3rd party integrations on group.",
                            "type": "object",
                            "properties": {
                              "kubernetes": {
                                "title": "Kubernetes Integration Configuration",
                                "description": "Define Kubernetes integration on group",
                                "type": "object",
                                "required": [
                                  "clusterIdentifier"
                                ],
                                "properties": {
                                  "clusterIdentifier": {
                                    "title": "Cluster Identifier",
                                    "description": "Must match the clusterIdentifier that was sent when the Spot Controller was installed.  <a style = color:red>Required on thirdPartiesIntegration.kubernetes object</a>",
                                    "type": "string",
                                    "example": "aks-engine-cluser"
                                  },
                                  "autoScale": {
                                    "title": "Auto Scale",
                                    "description": "K8's auto scaler configuration",
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "title": "Is Enabled Criteria",
                                        "description": "Is the auto scaler enabled or not",
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "isAutoConfig": {
                                        "title": "Is Auto Config Criteria",
                                        "description": "Set to true if you want to use the Automated headroom feature",
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "cooldown": {
                                        "title": "Cooldown",
                                        "description": "Cool down period between scaling actions",
                                        "type": "integer",
                                        "example": 180
                                      },
                                      "down": {
                                        "title": "Down",
                                        "description": "Auto scaler Scale down configuration",
                                        "type": "object",
                                        "properties": {
                                          "maxScaleDownPercentage": {
                                            "title": "Max Scale Down Percentage",
                                            "description": "Would represent the maximum % to scale-down. Number between 1-100",
                                            "type": "integer",
                                            "example": 50
                                          }
                                        }
                                      },
                                      "headroom": {
                                        "title": "Headroom",
                                        "description": "Headroom configuration of the auto scaler",
                                        "type": "object",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "title": "cpuPerUnit",
                                            "description": "Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.",
                                            "type": "integer",
                                            "example": 2
                                          },
                                          "memoryPerUnit": {
                                            "title": "memoryPerUnit",
                                            "description": "Optionally configure the amount of memory (MiB) to allocate the headroom.",
                                            "type": "integer",
                                            "example": 2
                                          },
                                          "gpuPerUnit": {
                                            "title": "GPU Per Unit",
                                            "description": "How much GPU allocate for headroom unit.",
                                            "type": "integer",
                                            "example": 2
                                          },
                                          "numOfUnits": {
                                            "title": "Number Of Units",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.",
                                            "type": "integer",
                                            "example": 2
                                          }
                                        }
                                      },
                                      "labels": {
                                        "title": "Labels",
                                        "description": "Key/value pairs to use as constraints.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "title": "Key",
                                              "description": "Key of constraint",
                                              "type": "string",
                                              "example": "group"
                                            },
                                            "value": {
                                              "title": "Value",
                                              "description": "Value of constraint",
                                              "type": "string",
                                              "example": "microservices"
                                            }
                                          }
                                        }
                                      },
                                      "resourceLimits": {
                                        "title": "Resource Limits",
                                        "description": "Optionally set upper and lower bounds on the resource usage of the cluster.",
                                        "type": "object",
                                        "properties": {
                                          "maxVCpu": {
                                            "title": "MAX VCpu",
                                            "description": "The maximum cpu in vCpu units that can be allocated to the cluster.",
                                            "type": "integer",
                                            "example": 4
                                          },
                                          "maxMemoryGib": {
                                            "title": "MAX Memory Gib",
                                            "description": "The maximum memory in GiB units that can be allocated to the cluster.",
                                            "type": "integer",
                                            "example": 4
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "hpcGridEngine": {
                                "type": "object",
                                "required": [
                                  "clusterId"
                                ],
                                "properties": {
                                  "clusterId": {
                                    "type": "string",
                                    "example": "spotinst-uge-cluster",
                                    "description": "Must match the clusterId used by the [controller](https://api.spot.io/elastigroup-for-azure/hpc/introduction/)\n"
                                  },
                                  "queues": {
                                    "type": "array",
                                    "description": "If defined the autoscaler will only match this Elastigroup to jobs associated with the queues listed here. If empty or null, then all queues will be monitored.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "burst.q",
                                          "description": "The name of the queue to monitor\n"
                                        }
                                      }
                                    }
                                  },
                                  "distribution": {
                                    "type": "string",
                                    "enum": [
                                      "sge",
                                      "uge"
                                    ],
                                    "description": "The specific distribution of grid engine. Defaults to `sge`\n",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}": {
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup Azure\n",
        "operationId": "elastigroupAzureDelete",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Elastigroup",
        "description": "List all properties for single Azure Elastigroup\n",
        "operationId": "elastigroupAzureDescribe",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Elastigroup",
        "description": "Update an Azure Elastigroup\n",
        "operationId": "elastigroupAzureUpdate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Get the status for all instances that are memebers of the Elastigroup",
        "operationId": "elastigroupAzureGetStatus",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "components": {
        "responses": {
          "groupStatus": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n"
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "The data type of each item in the response\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/schemas/groupStatus"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "schemas": {
          "groupStatus": {
            "type": "object",
            "properties": {
              "instanceId": {
                "type": "string",
                "example": "ec5410ea-fec7-4a03-a989-3b27b7ee2ed5"
              },
              "region": {
                "type": "string",
                "example": "eastus"
              },
              "vmSize": {
                "type": "string",
                "example": "standard_a1_v2"
              },
              "lifeCycle": {
                "type": "string",
                "example": "low-priority",
                "enum": [
                  "low-priority",
                  "regular"
                ]
              },
              "privateIp": {
                "type": "string",
                "example": "10.0.0.8"
              },
              "publicIp": {
                "type": "string",
                "example": "168.62.168.93"
              },
              "state": {
                "type": "string",
                "example": "running",
                "enum": [
                  "running",
                  "reimaging",
                  "creating",
                  "starting"
                ]
              },
              "createdAt": {
                "type": "string",
                "example": "2018-06-20T11:16:32.000Z"
              }
            }
          }
        },
        "parameters": {
          "groupId": {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Elastigroup Azure ID\n"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/detachInstances": {
      "put": {
        "summary": "Detach Instances",
        "description": "Detach one or more instances from an Azure Elastigroup\n",
        "operationId": "elastigroupAzureDetachInstances",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instancesToDetach": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "shouldDecrementTargetCapacity": {
                    "type": "boolean",
                    "example": true
                  },
                  "drainingTimeout": {
                    "type": "integer",
                    "example": 300
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1detachInstances/components/responses/groupStatus"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "components": {
        "responses": {
          "groupStatus": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1detachInstances/components/schemas/detachResponse"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "schemas": {
          "detachResponse": {
            "type": "object",
            "properties": {
              "detachedOd": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "detachedLowPriority": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/roll": {
      "get": {
        "summary": "List Deployments",
        "description": "Historical list of all deployments for an Azure Elastigroup\n",
        "operationId": "elastigroupAzureDeploymentList",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "Your Spotinst accountid associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "limit",
            "example": 5,
            "description": "Limits results\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "example": "created:ASC",
            "description": "Field to sort by the results\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "sbgd-9876"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "ROLL_STARTING",
                                    "enum": "ROLL_STARTING PENDING RUNNING DETACHED ERROR RESTARTED",
                                    "currentBatch": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "example": 1,
                                      "description": "Batch number that is currenlty being deployed\n"
                                    },
                                    "numOfBatches": {
                                      "type": "integer",
                                      "readOnly": true,
                                      "example": 2,
                                      "description": "Total number of batches the deployment will process\n"
                                    },
                                    "progress": {
                                      "type": "object",
                                      "readOnly": true,
                                      "properties": {
                                        "unit": {
                                          "type": "string",
                                          "example": "percentage"
                                        },
                                        "value": {
                                          "type": "integer",
                                          "example": 10
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "example": "sig-12345",
                                      "readOnly": true,
                                      "description": "The Azure Elastigroup the deployment is executing on\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Start Deployment",
        "description": "Start a new Azure Elastigroup deployment\n",
        "operationId": "elastigroupAzureDeploymentStart",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "batchSizePercentage": {
                    "title": "Batch Size Percentage",
                    "type": "integer",
                    "example": 50,
                    "description": "Indicates (in percentage) the batch size of the roll (meaning, how many nodes to replace in each batch)"
                  },
                  "gracePeriod": {
                    "title": "Grace Period",
                    "type": "integer",
                    "description": "Indicates (in seconds) the timeout to wait until node become healthy in the ELB",
                    "example": 300
                  },
                  "healthCheckType": {
                    "title": "Health Check Type",
                    "type": "string",
                    "description": "Define a health check type. valid values: mlb, node_state, none (wait the entire grace period for each batch). If no value is set the roll will use the groupâs auto-healing health check.",
                    "example": "INSTANCE_STATE"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Start Deployment Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/compute/azure/group/sig-12345/roll",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "sbgd-9876"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "ROLL_STARTING"
                                        },
                                        "currentBatch": {
                                          "type": "integer",
                                          "readOnly": true,
                                          "example": 1,
                                          "description": "Batch number that is currenlty being deployed\n"
                                        },
                                        "numOfBatches": {
                                          "type": "integer",
                                          "readOnly": true,
                                          "example": 2,
                                          "description": "Total number of batches the deployment will process\n"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "readOnly": true,
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "example": "percentage"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "example": 10
                                            }
                                          }
                                        },
                                        "groupId": {
                                          "type": "string",
                                          "example": "sig-12345",
                                          "readOnly": true,
                                          "description": "The Azure Elastigroup the deployment is executing on\n"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/roll/{rollId}": {
      "get": {
        "summary": "Roll Status",
        "description": "Get status of a specific roll\n",
        "operationId": "lowPriorityVMsRollStatus",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-12345",
            "description": "The Elasticgroup id you want to roll\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "rollId",
            "example": "sbgd-9876",
            "description": "The roll id you want to query\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "Your Spotinst accountid associated with your token\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Roll Status Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/compute/azure/group/sig-12345/roll/sbgd-dfb956b4",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "sbgd-9876"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": "ROLL_FINISHED"
                                        },
                                        "progress": {
                                          "type": "object",
                                          "properties": {
                                            "unit": {
                                              "type": "string",
                                              "example": "percent"
                                            },
                                            "value": {
                                              "type": "integer",
                                              "example": 100
                                            }
                                          }
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2017-01-31T13:54:53.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "example": "2017-01-31T14:26:37.000+0000"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Task",
        "description": "Update an Elastigroup Azure\n",
        "operationId": "tasksScaleSetsAzureUpdate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/group/{groupId}/roll/{deploymentId}": {
      "get": {
        "summary": "Get Deployment",
        "description": "Describe a single deployment for an Azure Elastigroup\n",
        "operationId": "elastigroupAzureDeploymentDescribe",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "schema": {
              "type": "string"
            },
            "example": "sbgd-9876",
            "required": true,
            "description": "Azure Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Stop Deployment",
        "description": "Stop a deployment\n",
        "operationId": "elastigroupAzureDeploymentStop",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1roll~1%7BdeploymentId%7D/get/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "roll": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "default": "ROLL_STOPPED",
                            "description": "set the status of the roll to `ROLL_STOPPED`\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/task": {
      "get": {
        "summary": "List Tasks",
        "description": "List all Azure Tasks for a Spot Account\n",
        "operationId": "tasksScaleSetsAzureListAll",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Task",
        "description": "Create a new Azure Task",
        "operationId": "tasksScaleSetsAzureCreate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Wrapper",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Azure Elastigroup",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-123456789",
                            "readOnly": true,
                            "description": "Azure Elastigroup ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "eastus",
                            "description": "Valid Azure region the Elastigroup is managed in\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotinst-azure",
                            "description": "The Azure resource group to associate the Elastigroup with\n"
                          },
                          "capacity": {
                            "type": "object",
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The Elastigroup will not set a target greater than this value\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Azure Scaling",
                            "properties": {
                              "up": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "type": "string",
                                          "example": "cpuScale"
                                        },
                                        "metricName": {
                                          "type": "string",
                                          "example": "Percentage CPU"
                                        },
                                        "statistic": {
                                          "type": "string",
                                          "example": "average",
                                          "enum": [
                                            "average",
                                            "sampleCount",
                                            "sum",
                                            "minimum",
                                            "maximum"
                                          ]
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "format": "float",
                                          "example": 0.75
                                        },
                                        "period": {
                                          "type": "integer",
                                          "example": 60
                                        },
                                        "evaluationPeriods": {
                                          "type": "integer",
                                          "example": 3
                                        },
                                        "cooldown": {
                                          "type": "integer",
                                          "example": 300
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "example": "Microsoft.Network/applicationGateways"
                                        },
                                        "operator": {
                                          "type": "string",
                                          "example": "gte",
                                          "enum": [
                                            "gt",
                                            "gte",
                                            "lt",
                                            "lte"
                                          ]
                                        },
                                        "dimenstions": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "example": "resourceName"
                                              },
                                              "value": {
                                                "type": "string",
                                                "example": "TestAppGateway"
                                              }
                                            }
                                          }
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment"
                                            },
                                            "adjustment": {
                                              "type": "string",
                                              "example": "2"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleUp"
                                        },
                                        "threshold": {
                                          "example": 0.75
                                        },
                                        "operator": {
                                          "example": "gte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "setMinTarget",
                                                "updateCapacity",
                                                "percentageAdjustment"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "down": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1compute~1azure~1task/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/group/properties/scaling/properties/up/items/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleDown"
                                        },
                                        "threshold": {
                                          "example": 0.25
                                        },
                                        "operator": {
                                          "example": "lte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "setMaxTarget",
                                                "updateCapacity",
                                                "percentageAdjustment"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Scaling Strategy",
                            "properties": {
                              "lowPriorityPercentage": {
                                "type": "integer"
                              },
                              "odCount": {
                                "type": "integer"
                              },
                              "drainingTimeout": {
                                "type": "integer"
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v1"
                                    }
                                  },
                                  "lowPrioritySizes": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "product": {
                                "type": "string",
                                "example": "Linux",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ]
                              },
                              "health": {
                                "type": "object",
                                "properties": {
                                  "autoHealing": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "healthCheckType": {
                                    "type": "string",
                                    "example": "INSTANCE_STATE",
                                    "enum": [
                                      "INSTANCE_STATE"
                                    ]
                                  },
                                  "gracePeriod": {
                                    "type": "integer",
                                    "example": 120
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "properties": {
                                  "image": {
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "description": "Azure Marketplace VM Image. Cannot be used with `custom`",
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "type": "string",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      },
                                      "shutdownScript": {
                                        "type": "string",
                                        "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui"
                                      },
                                      "custom": {
                                        "type": "object",
                                        "description": "Custom VM image.  Cannot be used with `marketplace`\n",
                                        "properties": {
                                          "resourceGroupName": {
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "imageName": {
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "title": "MULTAI_TARGET_SET",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "MULTAI_TARGET_SET",
                                                  "enum": [
                                                    "MULTAI_TARGET_SET"
                                                  ]
                                                },
                                                "balancerId": {
                                                  "type": "string",
                                                  "example": "lb-1ee2e3q"
                                                },
                                                "targetSetId": {
                                                  "type": "string",
                                                  "example": "ts-3eq"
                                                },
                                                "autoWeight": {
                                                  "type": "boolean",
                                                  "example": true
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "title": "APPLICATION_GATEWAY",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "APPLICATION_GATEWAY",
                                                  "enum": [
                                                    "APPLICATION_GATEWAY"
                                                  ]
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "example": "azureResourceGroup"
                                                },
                                                "applicationGatewayName": {
                                                  "type": "string",
                                                  "example": "appGateway"
                                                },
                                                "backendPoolName": {
                                                  "type": "string",
                                                  "example": "backendpool490822"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string"
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": "string",
                                        "example": "mySI2"
                                      },
                                      "resourceGroupName": {
                                        "resourceGroupName": "string",
                                        "example": "myResourceGroup"
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "type": "object",
                                    "properties": {
                                      "virtualNetworkName": {
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "subnetName": {
                                        "type": "string",
                                        "example": "my-subnet-name"
                                      },
                                      "resourceGroupName": {
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "assignPublicIp": true,
                                      "additionalIpConfigurations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "config1"
                                            },
                                            "privateIpAddressVersion": {
                                              "type": "string",
                                              "example": "IPv4"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "autoUpgradeMinorVersion": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "k8s-agentpool1-38611891-vmss-computeAksLinuxBilling"
                                        },
                                        "protectedSettings": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "example": "Microsoft.AKS"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "Compute.AKS-Engine.Linux.Billing"
                                        },
                                        "typeHandlerVersion": {
                                          "type": "string",
                                          "example": "1.0"
                                        }
                                      }
                                    }
                                  },
                                  "customData": {
                                    "type": "string"
                                  },
                                  "login": {
                                    "type": "object",
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string"
                                      },
                                      "password": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "type": "object",
                            "properties": {
                              "kubernetes": {
                                "type": "object",
                                "properties": {
                                  "clusterIdentifier": {
                                    "type": "string",
                                    "example": "aks-engine-cluser",
                                    "description": "Must mastch the clusterIdentifier that was sent when\n the [Spot Controller](https://api.spot.io/container-management/kubernetes/kubernetes-tutorials/installing-kubernetes-controller/)\n was installed.\n"
                                  }
                                }
                              },
                              "hpcGridEngine": {
                                "type": "object",
                                "required": [
                                  "clusterId"
                                ],
                                "properties": {
                                  "clusterId": {
                                    "type": "string",
                                    "example": "spotinst-uge-cluster",
                                    "description": "Must match the clusterId used by the [controller](https://api.spot.io/elastigroup-for-azure/hpc/introduction/)\n"
                                  },
                                  "queues": {
                                    "type": "array",
                                    "description": "If defined the autoscaler will only match this Elastigroup to jobs associated with the queues listed here. If empty or null, then all queues will be monitored.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "burst.q",
                                          "description": "The name of the queue to monitor\n"
                                        }
                                      }
                                    }
                                  },
                                  "distribution": {
                                    "type": "string",
                                    "enum": [
                                      "sge",
                                      "uge"
                                    ],
                                    "description": "The specific distribution of grid engine. Defaults to `sge`\n",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tortuga": {
                                    "type": "object",
                                    "description": "Optional configuration for `uge` distribution managed with Tortuga\n",
                                    "properties": {
                                      "softwareProfile": {
                                        "type": "string",
                                        "example": "execd",
                                        "description": "An existing Tortuga software profile\n"
                                      },
                                      "hardwareProfile": {
                                        "type": "string",
                                        "example": "execd-elastigroup",
                                        "description": "An existing Torguga hardware profile that is configured for remote nodes and dynamic hostnames\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/compute/azure/task/{taskId}": {
      "delete": {
        "summary": "Delete Task",
        "description": "Delete an Elastigroup Azure\n",
        "operationId": "tasksScaleSetsAzureDelete",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Task",
        "description": "Update an Elastigroup Azure\n",
        "operationId": "tasksScaleSetsAzureUpdate",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1compute~1azure~1task/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1compute~1azure~1task/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/costs": {
      "get": {
        "summary": "Get Costs Per Account",
        "description": "Get costs per time filter.\n",
        "operationId": "azureCostsPerAccount",
        "tags": [
          "Elastigroup Azure Scale Set VMs"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123456789",
            "description": "The ID of the account associated with your token.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "fromDate",
            "required": true,
            "description": "Get items on or after this date (ISO 8601 or Unix timestamp)\n",
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/paths/~1azure~1costs/get/parameters/1/components/schemas/unix"
                },
                {
                  "$ref": "#/paths/~1azure~1costs/get/parameters/1/components/schemas/dateTime"
                }
              ]
            },
            "example": "2020-09-01 or fromDate=1598918400000",
            "components": {
              "schemas": {
                "unix": {
                  "type": "string",
                  "description": "A valid Unix timestamp: 1598918400000"
                },
                "dateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A valid date-time string : 2020-09-01"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": true,
            "description": "Get items on or before this date (ISO 8601 or Unix timestamp)",
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/paths/~1azure~1costs/get/parameters/2/components/schemas/unix"
                },
                {
                  "$ref": "#/paths/~1azure~1costs/get/parameters/2/components/schemas/dateTime"
                }
              ]
            },
            "example": "2020-09-01 or toDate=1598918400000",
            "components": {
              "schemas": {
                "unix": {
                  "type": "string",
                  "description": "A valid Unix timestamp: 1598918400000"
                },
                "dateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "A valid date-time string : 2020-09-01"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Costs Per Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "67582d0c-108b-4ef7-9fdc-d39678a30844"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/azure/costs"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-01-07T07:30:58.622Z"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:azure:costs"
                                },
                                "items": {
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "lowPriority": {
                                          "type": "object",
                                          "properties": {
                                            "runningHours": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 1470.8
                                            },
                                            "actualCosts": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 107.3
                                            },
                                            "potentialCosts": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 378.41
                                            },
                                            "savingsPercentage": {
                                              "type": "number",
                                              "format": "float",
                                              "example": 71.64
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}": {
      "put": {
        "summary": "Update Elastigroup",
        "description": "Update an Azure Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsUpdate",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-123123",
            "description": "Elastigroup's ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Update Elasitgroup Azure Spot VMs - Request Available fields",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "Azure Elastigroup",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Elastigroup Capacity",
                            "description": "Capacity of Elastigroup.\n",
                            "properties": {
                              "target": {
                                "type": "integer",
                                "description": "Desired number of VMs for Elastigroup to maintain.\n",
                                "example": 8
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "Minimum number of VMs.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "Maximum number of VMs.\n"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "description": "Strategy for Elastigroup.\n",
                            "properties": {
                              "spotPercentage": {
                                "type": "integer",
                                "example": 50,
                                "default": 100,
                                "description": "Percentage of Spot-VMs to maintain.\\\nRequired if odCount isn't specified.\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "description": "Percentage of Spot-VMs to maintain.\\\nRequired if spotPercentage isn't specified.\n",
                                "writeOnly": true
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 30,
                                "default": 120,
                                "description": "Time (in seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.\n"
                              },
                              "fallbackToOd": {
                                "type": "Boolean",
                                "description": "In case of no spots available, Elastigroup will launch an On-demand instance instead\n",
                                "example": true
                              },
                              "revertToSpot": {
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs\n",
                                "type": "object",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "description": "Settings for maintenance strategy.\n",
                                    "enum": [
                                      "timeWindow",
                                      "never",
                                      "always"
                                    ],
                                    "example": "timeWindow",
                                    "default": "always"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "description": "valid format: \"ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\", not empty if revertToSpot.performAt = timeWindow\n",
                                "example": [
                                  "Mon:03:00-Wed:02:30"
                                ]
                              },
                              "signals": {
                                "type": "array",
                                "description": "The signals defined for this group.\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the signal defined for the group.\n",
                                      "enum": [
                                        "vmReady",
                                        "vmReadyToShutdown"
                                      ],
                                      "example": "vmReady"
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent.\\\nIf no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout.\n",
                                      "example": 180,
                                      "default": 1800,
                                      "minimum": 60,
                                      "maximum": 1800
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Elastigroup Scaling",
                            "description": "Scaling Policies for Elastigroup.\n",
                            "properties": {
                              "up": {
                                "type": "array",
                                "description": "Defines scaling up policy.\n",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "type": "string",
                                          "description": "Name of scaling policy.\n",
                                          "example": "cpuScale"
                                        },
                                        "metricName": {
                                          "type": "string",
                                          "description": "Metric to monitor by Azure metric display name\n",
                                          "example": "Percentage CPU"
                                        },
                                        "statistic": {
                                          "type": "string",
                                          "description": "Statistic by which to evaluate the selected metric.\n",
                                          "example": "Average",
                                          "enum": [
                                            "Average",
                                            "total",
                                            "minimum",
                                            "maximum",
                                            "count"
                                          ]
                                        },
                                        "unit": {
                                          "type": "string",
                                          "description": "Unit to measure to evaluate the selected metric\n",
                                          "enum": [
                                            "percent",
                                            "seconds",
                                            "microseconds",
                                            "milliseconds",
                                            "bytes",
                                            "kilobytes",
                                            "megabytes",
                                            "gigabytes",
                                            "terabytes",
                                            "bits",
                                            "kilobits",
                                            "megabits",
                                            "gigabits",
                                            "terabits",
                                            "count",
                                            "bytes/second",
                                            "kilobytes/second",
                                            "megabytes/second",
                                            "gigabytes/second",
                                            "terabytes/second",
                                            "bits/second",
                                            "kilobits/second",
                                            "megabits/second",
                                            "gigabits/second",
                                            "terabits/second",
                                            "count/second",
                                            "none"
                                          ]
                                        },
                                        "threshold": {
                                          "type": "number",
                                          "format": "float",
                                          "description": "The value at which the scaling action is triggered.\n",
                                          "example": 0.75
                                        },
                                        "namespace": {
                                          "type": "string",
                                          "description": "Should be one of the namespaces:\n* Microsoft.AnalysisServices/servers\n* Microsoft.ApiManagement/service\n* Microsoft.Automation/automationAccounts\n* Microsoft.Batch/batchAccounts\n* Microsoft.Cache/redis\n* Microsoft.Compute\n* Microsoft.CognitiveServices/accounts\n* Microsoft.ContainerInstance/containerGroups\n* Microsoft.ContainerService/managedClusters\n* Microsoft.CustomerInsights/hubs\n* Microsoft.DataFactory/datafactories\n* Microsoft.DataFactory/factories\n* Microsoft.DataLakeAnalytics/accounts\n* Microsoft.DataLakeStore/accounts\n* Microsoft.DBforMariaDB/servers\n* Microsoft.DBforMySQL/servers\n* Microsoft.DBforPostgreSQL/servers\n* Microsoft.Devices/IotHubs\n* Microsoft.Devices/provisioningServices\n* Microsoft.DocumentDB/databaseAccounts\n* Microsoft.EventGrid/topics\n* Microsoft.EventGrid/eventSubscriptions\n* Microsoft.EventGrid/extensionTopics\n* Microsoft.EventHub/namespaces\n* Microsoft.EventHub/clusters\n* Microsoft.HDInsight/clusters\n* Microsoft.Insights/AutoscaleSettings\n* Microsoft.Insights/Components\n* Microsoft.KeyVault/vaults\n* Microsoft.Kusto/Clusters\n* Microsoft.LocationBasedServices/accounts\n* Microsoft.Logic/workflows\n* Microsoft.NetApp/netAppAccounts/capacityPools/Volumes\n* Microsoft.NetApp/netAppAccounts/capacityPools\n* Microsoft.Network/networkInterfaces\n* Microsoft.Network/loadBalancers\n* Microsoft.Network/dnszones\n* Microsoft.Network/publicIPAddresses\n* Microsoft.Network/applicationGateways\n* Microsoft.Network/virtualNetworkGateways\n* Microsoft.Network/expressRouteCircuits\n* Microsoft.Network/expressRouteCircuits/peerings\n* Microsoft.Network/connections\n* Microsoft.Network/trafficManagerProfiles\n* Microsoft.Network/networkWatchers/connectionMonitors\n* Microsoft.Network/frontdoors\n* Microsoft.NotificationHubs/Namespaces/NotificationHubs\n* Microsoft.OperationalInsights/workspaces\n* Microsoft.PowerBIDedicated/capacities\n* Microsoft.Relay/namespaces\n* Microsoft.Search/searchServices\n* Microsoft.ServiceBus/namespaces\n* Microsoft.SignalRService/SignalR\n* Microsoft.Sql/servers/databases\n* Microsoft.Sql/servers/elasticPools\n* Microsoft.Sql/managedInstances\n* Microsoft.Storage/storageAccounts\n* Microsoft.Storage/storageAccounts/blobServices\n* Microsoft.Storage/storageAccounts/fileServices\n* Microsoft.Storage/storageAccounts/queueServices\n* Microsoft.Storage/storageAccounts/tableServices\n* Microsoft.StreamAnalytics/streamingjobs\n* Microsoft.TimeSeriesInsights/environments\n* Microsoft.TimeSeriesInsights/environments/eventsources\n* Microsoft.Web/serverfarms\n* Microsoft.Web/sites (excluding functions)\n* Microsoft.Web/sites (functions)\n* Microsoft.Web/sites/slots\n* Microsoft.Web/hostingEnvironments/multiRolePools\n* Microsoft.Web/hostingEnvironments/workerPools\n",
                                          "default": "Microsoft.Compute",
                                          "example": "Microsoft.Network/applicationGateways"
                                        },
                                        "period": {
                                          "type": "integer",
                                          "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.\n",
                                          "enum": [
                                            60,
                                            300,
                                            900,
                                            1800,
                                            3600,
                                            7200
                                          ],
                                          "example": 60
                                        },
                                        "evaluationPeriods": {
                                          "type": "integer",
                                          "description": "Number of consecutive periods in which the threshold must be met in order to trigger the scaling action.\n",
                                          "minimum": 1,
                                          "example": 3
                                        },
                                        "cooldown": {
                                          "type": "integer",
                                          "description": "Time (seconds) to wait after a scaling action before resuming monitoring.\\\nmultiple of 60.\n",
                                          "minimum": 0,
                                          "example": 300
                                        },
                                        "dimenstions": {
                                          "type": "array",
                                          "description": "Required if scaling.up.namespace is different from \"Microsoft.Compute\".\\\n2 dimensions are required.\n",
                                          "items": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "resourceName"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "testApplicationGateway"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "resourceGroupName"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "example": "testResourceGroup"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "operator": {
                                          "type": "string",
                                          "description": "The operator used to evaluate the threshold against the current metric value.\\\nValid Values:\n* \"gt\" (Greater Than)\n* \"gte\" (Greater Than or Equal)\n* \"lt\" (Less Than)\n* \"lte\" (Less Than or Equal)\n",
                                          "example": "gte",
                                          "enum": [
                                            "gt",
                                            "gte",
                                            "lt",
                                            "lte"
                                          ]
                                        },
                                        "action": {
                                          "type": "object",
                                          "description": "Scaling action to take when the policy is triggered.\n",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Type of scaling action to take when the scaling policy is triggered.\n",
                                              "enum": [
                                                "adjustment",
                                                "updateCapacity"
                                              ],
                                              "example": "adjustment"
                                            },
                                            "adjustment": {
                                              "type": "string",
                                              "description": "Value to which the action type will be adjusted.\\\nRequired if using \"adjustment\" action type.\n",
                                              "example": "2"
                                            },
                                            "target": {
                                              "type": "integer",
                                              "description": "Value to update the group target capacity to.\\\nRequired if using âupdateCapacityâ as action type\\\nand âminimumâ and âmaximumâ are undefined.\n"
                                            },
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Value to update the group mimimum capacity to.\\\nRequired if using âupdateCapacityâ as action type\\\nand âtargetâ andâmaximumâ are undefined.\n"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Value to update the group mimimum capacity to.\\\nRequired if using âupdateCapacityâ as action type\\\nand âtargetâ and âminimumâ are undefined.\n"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleUp"
                                        },
                                        "threshold": {
                                          "example": 0.75
                                        },
                                        "operator": {
                                          "example": "gte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "updateCapacity"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "down": {
                                "type": "array",
                                "description": "Defines scaling down policy.\n",
                                "items": {
                                  "allOf": [
                                    {
                                      "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/scaling/properties/up/items/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "policyName": {
                                          "example": "cpuScaleDown"
                                        },
                                        "threshold": {
                                          "example": 0.25
                                        },
                                        "operator": {
                                          "example": "lte"
                                        },
                                        "action": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "adjustment",
                                              "enum": [
                                                "adjustment",
                                                "updateCapacity"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Elastigroup Compute Update",
                            "description": "Compute settings for Elastigroup.\n",
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "description": "amount of time to be unhealthy before a replacement is triggered\n",
                                "properties": {
                                  "odSizes": {
                                    "type": "array",
                                    "description": "Available On-Demand sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v1"
                                    }
                                  },
                                  "spotSizes": {
                                    "type": "string",
                                    "description": "Available Spot-VM sizes.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a2_v2"
                                    }
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "properties": {
                                  "customData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "This value will hold the YML in base64 and will be added to the scaleSets\n",
                                    "example": ""
                                  },
                                  "image": {
                                    "type": "object",
                                    "description": "Image of VM. An image is a template for creating new VMs.\\\nChoose from Azure image catalogue (marketplace) or use a custom image.\n",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "description": "* Select an image from Azure's Marketplace image catalogue\n* Required if custom image isn't specified.\n",
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "description": "*Image publisher.\n*Required if marketplace image is specified.\n",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "description": "*Name of image to use.\n*Required if marketplace image is specified.\n",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "description": "*Image's Stock Keeping Unit, which is the specific version of the image.\n*Required if marketplace image is specified.\n",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "type": "string",
                                            "description": "Image's version. if version not provided we use \"latest\"\n",
                                            "default": "lastest",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "type": "object",
                                        "writeOnly": true,
                                        "description": "*Custom image to launch Elastigroup with. *Required if marketplace image isn't specified.\n",
                                        "properties": {
                                          "resourceGroupName": {
                                            "type": "string",
                                            "description": "*Name of Resource Group for custom image.\n*Required if custom image is specified.\n",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "* Name of the custom image.\n* Required if custom image is specified.\n",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Publick IP",
                                              "description": "Assign public IP",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": null,
                                              "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                              "type": "string",
                                              "example": null
                                            },
                                            "securityGroup": {
                                              "title": "Security Group",
                                              "description": "Security Group",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "List of objects, In create group, cannot be empty.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "Cannot be empty.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "Cannot be empty.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Possible values:\n+ IPv4\n+ IPv6",
                                                    "default": "IPv4"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "login": {
                                    "type": "object",
                                    "description": "Set admin access for accessing your VMs. Password/SSH is required for Linux.\n",
                                    "properties": {
                                      "userName": {
                                        "type": "string",
                                        "description": "user name for admin access to VMs.\\\nLogin can be set:\n* for windows: compute.launchSpecification.login.password\n* for linux: compute.launchSpecification.login.sshPublicKey\n\nJust user name, without pwd or SSH key\n",
                                        "example": "spotinst"
                                      },
                                      "sshPublicKey": {
                                        "type": "string",
                                        "description": "SSH for admin access to Linux VMs.\\\nOptional for Linux.\n",
                                        "example": "ssh-rsa"
                                      },
                                      "password": {
                                        "type": "string",
                                        "writeOnly": true,
                                        "description": "Password for admin access to Windows VMs.\\\nRequired for Windows.\n"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Configure a Load Balancer.\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer",
                                                "applicationGateway"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The Resource Group name of the Load Balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Application Gateway/Load Balancer\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "sku": {
                                              "type": "string",
                                              "description": "*if type is LoadBalancer then possible values are âStandard/Basicâ;\n*if ApplicationGateway then possible values are âStandard_Largeâ,âStandard_Mediumâ,âStandard_Smallâ,âStandard_v2â,âWAF_Largeâ,âWAF_Mediumâ,âWAF_v2\"\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "description": "Name of the Backend Pool to register the Elastigroup VMs to. Each Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                              "example": [
                                                "testBackendPool1",
                                                "testBackendPool2"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "managedServiceIdentities": {
                                    "type": "array",
                                    "writeOnly": true,
                                    "description": "Add a user-assigned managed identity to the VMs in the cluster.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "name of the managed identity\n",
                                          "example": "mySI2"
                                        },
                                        "resourceGroupName": {
                                          "type": "string",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                                          "example": "myResourceGroup"
                                        }
                                      }
                                    }
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "format": "byte",
                                    "writeOnly": true,
                                    "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                    "description": "shutdown script for the group. Value should be passed as a string encoded at Base64 only\n"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "Key-Value pairs for VMs in the Elastigroup.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag Key for Vms in Elastigroup.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag Value for VMs in Elastigroup.\n",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "description": "List of objects for azure extensions\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "required": true,
                                          "example": "extensionName"
                                        },
                                        "type": {
                                          "type": "string",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": "customScript"
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "required": true,
                                          "example": "MMicrosoft.Azure.Extensions"
                                        },
                                        "apiVersion": {
                                          "type": "string",
                                          "description": "The API version of the extension. Required if extension specified.\n",
                                          "example": "2.0"
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "type": "boolean",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object\n",
                                          "example": true
                                        },
                                        "publicSettings": {
                                          "type": "object",
                                          "description": "Object for public settings\n"
                                        },
                                        "protectedSettings": {
                                          "type": "object",
                                          "description": "Object for protected settings\n"
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "type": "array",
                                    "description": "list of data disks to be attached to the vms in the group.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "sizeGB": {
                                          "type": "integer",
                                          "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                          "minimum": 1,
                                          "maximum": 1023,
                                          "example": 1
                                        },
                                        "lun": {
                                          "type": "integer",
                                          "description": "The lun of the data disk, Required if dataDisks is specified.\n",
                                          "example": 1
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The type of the data disk\n",
                                          "enum": [
                                            "Standard_LRS",
                                            "Premium_LRS",
                                            "StandardSSD_LRS"
                                          ],
                                          "example": "Standard_LRS"
                                        }
                                      }
                                    }
                                  },
                                  "osDisk": {
                                    "type": "object",
                                    "description": "Specify OS disk specification other than default.\n",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the OS disk,\n",
                                        "enum": [
                                          "Standard_LRS",
                                          "Premium_LRS",
                                          "StandardSSD_LRS"
                                        ],
                                        "example": "Standard_LRS"
                                      },
                                      "sizeGB": {
                                        "type": "integer",
                                        "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                        "minimum": 1,
                                        "maximum": 1023,
                                        "example": 30
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Elastigroup Health",
                            "description": "Autohealing of unhealthy VMs.\n",
                            "properties": {
                              "healthCheckTypes": {
                                "type": "array",
                                "description": "Healthcheck to use to validate VM health.\n",
                                "enum": [
                                  "vmState",
                                  "applicationGateway"
                                ],
                                "example": [
                                  "vmState"
                                ]
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "description": "Period of time to wait for VM to reach healthiness before monitoring for unhealthiness.\n",
                                "example": 120
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable Autohealing of unhealthy VMs.\n"
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "description": "amount of time to be unhealthy before a replacement is triggered\n",
                                "example": 360
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2018-10-10T10:50:29.000+0000"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2018-11-01T10:50:29.000+0000"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Elastigroup",
        "description": "List an Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsGetGroup",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsDelete",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group/sig-12345"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group": {
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new Elastigroup cluster.",
        "operationId": "elastigroupAzureSpotVmsCreate",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Create Elastigroup Azure Spot VMs Body",
                    "required": [
                      "group",
                      "name",
                      "region",
                      "capacity",
                      "strategy",
                      "compute"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name",
                          "region",
                          "capacity",
                          "resourceGroupName",
                          "strategy",
                          "compute"
                        ],
                        "title": "Azure Elastigroup",
                        "description": "Azure Elastigroup Configuration",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-123456789",
                            "readOnly": true,
                            "description": "Azure Elastigroup ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "Azure Elastigroup Name\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "eastus",
                            "description": "Valid Azure region the Elastigroup is managed in\n"
                          },
                          "resourceGroupName": {
                            "type": "string",
                            "example": "spotinst-azure",
                            "description": "The Azure resource group to associate the Elastigroup with\n"
                          },
                          "capacity": {
                            "type": "object",
                            "description": "Capacity of Elastigroup",
                            "required": [
                              "target",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The Elastigroup will not set a target greater than this value\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "description": "Scaling Policies for Elastigroup. Set as many policies as needed to maximize the Elastigroupâs efficiency.",
                            "title": "Azure Scaling",
                            "properties": {
                              "up": {
                                "type": "object",
                                "title": "Scale Up Policies",
                                "description": "Provide the ability to accommodate increased workloads.",
                                "required": [
                                  "policyName",
                                  "metricName",
                                  "statistic",
                                  "threshold",
                                  "period",
                                  "evaluationPeriods",
                                  "cooldown",
                                  "action",
                                  "operator",
                                  "namespace"
                                ],
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "unit": {
                                    "title": "Unit",
                                    "description": "Unit to measure to evaluate the selected metric:  Valid Values:\n+ Count\n+ Bytes\n+ Percent\n+ CountPerSecond\n+ Milliseconds\n+ BytesPerSecond\n+ Seconds",
                                    "type": "string",
                                    "example": "Count"
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways",
                                    "default": "Microsoft.Compute"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "Required if scaling.up.namespace is different from 'Microsoft.Compute'. 2 dimensions are required, example: âdimensionsâ:  [  {  âkeyâ : âresourceGroupNameâ,  âvalueâ : âtestResourceGroupâ  }  {  âkeyâ : âresourceNameâ,  âvalueâ : âtestApplicationGatewayâ  }  ]",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "title": "Key",
                                          "description": "Azure resource group for the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "resourceGroupName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Azure resource the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMinTarget<\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      },
                                      "target": {
                                        "title": "Target",
                                        "description": "Value to update the group target capacity to. Also you must indicate âminimumâ and âmaximumâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 23
                                      },
                                      "minimum": {
                                        "title": "Target",
                                        "description": "Value to update the group minimum capacity to. Also you must indicate âtargetâ and âmaximumâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "type": "integer",
                                        "example": 20
                                      },
                                      "maximum": {
                                        "title": "Target",
                                        "description": "Value to update the group mimimum capacity to. Also you must indicate âtargetâ and âminimumâ amounts. Required if selected as action type: + updateCapacity",
                                        "type": "integrer",
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "title": "Scale Down Policies",
                                "description": "Provide the ability to scale down to maximize cost efficiency.",
                                "required": [
                                  "policyName",
                                  "metricName",
                                  "statistic",
                                  "threshold",
                                  "period",
                                  "evaluationPeriods",
                                  "cooldown",
                                  "action",
                                  "operator",
                                  "namespace"
                                ],
                                "properties": {
                                  "policyName": {
                                    "title": "Policy Name",
                                    "description": "Name of scaling policy",
                                    "type": "string",
                                    "example": "cpuScale"
                                  },
                                  "metricName": {
                                    "title": "Metric Name",
                                    "description": "Metric to monitor by Azure metric display name",
                                    "type": "string",
                                    "example": "Percentage CPU"
                                  },
                                  "statistic": {
                                    "title": "Statistics",
                                    "description": "Statistic by which to evaluate the selected metric.",
                                    "type": "string",
                                    "example": "average",
                                    "enum": [
                                      "average",
                                      "sampleCount",
                                      "sum",
                                      "minimum",
                                      "maximum"
                                    ]
                                  },
                                  "unit": {
                                    "title": "Unit",
                                    "description": "Unit to measure to evaluate the selected metric:  Valid Values:\n+ Count\n+ Bytes\n+ Percent<\n+ CountPerSecond\n+ Milliseconds\n+ BytesPerSecond\n+ Seconds",
                                    "type": "string",
                                    "example": "Count"
                                  },
                                  "threshold": {
                                    "title": "Threshold",
                                    "description": "The value at which the scaling action is triggered.",
                                    "type": "number",
                                    "format": "float",
                                    "example": 0.75
                                  },
                                  "period": {
                                    "title": "Period",
                                    "description": "Amount of time (seconds) for which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 60
                                  },
                                  "evaluationPeriods": {
                                    "title": "Evaluation Periods",
                                    "description": "Number of consecutive periods in which the threshold must be met in order to trigger the scaling action.",
                                    "type": "integer",
                                    "example": 3
                                  },
                                  "cooldown": {
                                    "title": "Cooldown",
                                    "description": "Time (seconds) to wait after a scaling action before resuming monitoring.",
                                    "type": "integer",
                                    "example": 300
                                  },
                                  "namespace": {
                                    "title": "Namespace",
                                    "description": "Select one of the next namespaces presented in Azure configurator - https://docs.microsoft.com/en-us/azure/templates/",
                                    "type": "string",
                                    "example": "Microsoft.Network/applicationGateways"
                                  },
                                  "operator": {
                                    "title": "Operator",
                                    "description": "The operator used to evaluate the threshold against the current metric value.\n+ gt (Greater Than)\n+ gte (Greater Than or Equal)\n+ lt (Less Than)\n+ lte (Less Than or Equal) ",
                                    "type": "string",
                                    "default": "lte",
                                    "example": "gte",
                                    "enum": [
                                      "gt",
                                      "gte",
                                      "lt",
                                      "lte"
                                    ]
                                  },
                                  "dimenstions": {
                                    "title": "Dimenstions",
                                    "description": "Required if scaling.up.namespace is different from 'Microsoft.Compute'. 2 dimensions are required, example: âdimensionsâ:  [  {  âkeyâ : âresourceGroupNameâ,  âvalueâ : âtestResourceGroupâ  }  {  âkeyâ : âresourceNameâ,  âvalueâ : âtestApplicationGatewayâ  }  ]",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "title": "Key",
                                          "description": "Azure resource group for the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "resourceGroupName"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "Azure resource the scaling.down.dimensions. Required if using namespace different from \"Microsoft.Compute\".",
                                          "type": "string",
                                          "example": "TestAppGateway"
                                        }
                                      }
                                    }
                                  },
                                  "action": {
                                    "title": "Action",
                                    "description": "Scaling action to take when the policy is triggered.",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "adjustment",
                                      "target",
                                      "minimum",
                                      "maximum"
                                    ],
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "Type of scaling action to take when the scaling policy is triggered. </br> Valid Values:\n+ adjustment\n+ setMaxTarget\n+ updateCapacity\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "adjustment"
                                      },
                                      "target": {
                                        "type": "integer",
                                        "title": "Target",
                                        "description": "Desired number of instances. Also you must indicate âminimumâ and âmaximumâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "minimum": {
                                        "type": "integer",
                                        "title": "Minimum",
                                        "description": "Lower limit of instances that you can scale down to. Also you must indicate âtargetâ and âmaximumâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "title": "Maximum",
                                        "description": "Upper limit of instances that you can scale down to. Also you must indicate âminimumâ and âtargetâ amounts. Required if selected as action type:\n+ updateCapacity",
                                        "example": 1
                                      },
                                      "adjustment": {
                                        "title": "Adjustment",
                                        "description": "Value to which the action type will be adjusted. Required if using the next action types:\n+ numeric\n+ percentageAdjustment",
                                        "type": "string",
                                        "example": "2"
                                      }
                                    },
                                    "policyName": {
                                      "type": "object",
                                      "example": "cpuScaleDown",
                                      "threshold": {
                                        "example": 0.25
                                      },
                                      "operator": {
                                        "example": "lte"
                                      },
                                      "action": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "adjustment",
                                            "enum": [
                                              "adjustment",
                                              "setMaxTarget",
                                              "updateCapacity",
                                              "percentageAdjustment"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Scaling Strategy",
                            "properties": {
                              "spotPercentage": {
                                "title": "Spot Percentage",
                                "description": "Percentage of Spot-VMs to maintain.  <a style=color:red>Required if odCount isn't specified.</a>",
                                "type": "integer",
                                "default": 100,
                                "example": 100
                              },
                              "onDemandCount": {
                                "title": "On Demand Count",
                                "type": "integer",
                                "description": "Number of On-Demand VMs to maintain.  <a style=color:red>Required if spotPercentage isn't specified.</a>",
                                "example": 3
                              },
                              "drainingTimeout": {
                                "title": "Draining Timeout",
                                "type": "integer",
                                "description": "Time (seconds) to allow the VM be drained from incoming TCP connections and detached from MLB before terminating it during a scale down operation.",
                                "default": 120
                              },
                              "revertToSpot": {
                                "title": "Revert To Spot",
                                "type": "object",
                                "description": "Hold settings for strategy correction - replacing On-Demand for Spot VMs",
                                "properties": {
                                  "performAt": {
                                    "title": "Perform At",
                                    "type": "string",
                                    "description": "Settings for maintenance strategy - possible values:\n+ timeWindow\n+ never\n+ always",
                                    "default": "always"
                                  }
                                }
                              },
                              "optimizationWindows": {
                                "title": "Optimization Windows",
                                "description": "Valid format:\n+ ddd:hh:mm-ddd:hh:mm (day:hour(0-23):minute(0-59))\n+ not empty if revertToSpot.performAt = timeWindow",
                                "type": "array"
                              },
                              "signals": {
                                "title": "Signals",
                                "description": "The signals defined for this group.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "timeout": {
                                      "title": "Timeout",
                                      "description": "The timeout in seconds to hold the vm until a signal is sent. If no signal is sent the vm will be replaced (vmReady) or we will terminate the vm (vmReadyToShutdown) after the timeout. (Maximum is 1800 seconds, Minimum is 60 seconds)",
                                      "default": 30,
                                      "type": "integer",
                                      "example": 50
                                    },
                                    "type": {
                                      "title": "Type",
                                      "description": "The type of the signal defined for the group. Valid Values: vmReady, vmReadyToShutdown",
                                      "type": "string",
                                      "example": "vmReady"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "health": {
                            "title": "Health",
                            "description": "Autohealing of unhealthy VMs.",
                            "type": "object",
                            "properties": {
                              "autoHealing": {
                                "title": "Auto Healing",
                                "description": "Enable Autohealing of unhealthy VMs.",
                                "type": "boolean",
                                "example": false
                              },
                              "healthCheckTypes": {
                                "title": "Health Check Types",
                                "description": "Healthcheck to use to validate VM health. </br>Valid Values:\n+ vmState\n+ applicationGateway",
                                "type": "string",
                                "example": "vmState"
                              },
                              "gracePeriod": {
                                "title": "Grace Period",
                                "description": "Period of time to wait for VM to reach healthiness before monitoring for unhealthiness.",
                                "type": "integer",
                                "example": 300
                              },
                              "unhealthyDuration": {
                                "title": "Unhealthy Duration",
                                "description": "Amount of time to be unhealthy before a replacement is triggered",
                                "type": "integer",
                                "example": 360
                              }
                            }
                          },
                          "compute": {
                            "title": "Compute",
                            "description": "Elastigroup's Compute Configurtion",
                            "type": "object",
                            "required": [
                              "vmSizes",
                              "os",
                              "launchSpecification"
                            ],
                            "properties": {
                              "vmSizes": {
                                "title": "VM Sizes",
                                "description": "Sizes of On-Demand and Low-Priority VMs.",
                                "type": "object",
                                "required": [
                                  "odSizes",
                                  "spotSizes"
                                ],
                                "properties": {
                                  "odSizes": {
                                    "title": "OD Sizes",
                                    "type": "array",
                                    "description": "Array of string (s) with Available On-Demand sizes (pls chose items that correspond to your location or zone) https://docs.microsoft.com/uk-ua/azure/virtual-machines/sizes:",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_b1s"
                                    }
                                  },
                                  "spotSizes": {
                                    "title": "Spot Sizes",
                                    "description": "Available Spot-VM sizes. Find the list in Azure https://docs.microsoft.com/en-us/azure/virtual-machines/spot-vms?toc=/azure/virtual-machines/linux/toc.json&bc=/azure/virtual-machines/linux/breadcrumb/toc.json",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_a1_v2"
                                    }
                                  }
                                }
                              },
                              "os": {
                                "type": "string",
                                "example": "Linux",
                                "enum": [
                                  "Linux",
                                  "Windows"
                                ]
                              },
                              "launchSpecification": {
                                "title": "Launch Specification",
                                "description": "Launch Specification Configuration",
                                "type": "object",
                                "required": [
                                  "image",
                                  "network",
                                  "subnetName",
                                  "login"
                                ],
                                "properties": {
                                  "image": {
                                    "title": "Image",
                                    "description": "Image of VM. An image is a template for creating new VMs. Choose from Azure image catalogue (marketplace) or use a custom image.",
                                    "type": "object",
                                    "properties": {
                                      "marketplace": {
                                        "title": "Marketplace",
                                        "type": "object",
                                        "description": "Select an image from Azure's Marketplace image catalogue.  <a style=color:red;>Required if custom image isn't specified.</a>",
                                        "properties": {
                                          "publisher": {
                                            "title": "Publisher",
                                            "description": "Image publisher.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "title": "Offer",
                                            "desription": "Name of image to use.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "title": "Stock Keeping Unit",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.  <a style=color:red;>Required if marketplace image is specified.</a>",
                                            "type": "string",
                                            "example": "7.3"
                                          },
                                          "version": {
                                            "title": "Version",
                                            "description": "Image's version. if version not provided we use 'latest'",
                                            "type": "string",
                                            "example": "7.3-1611",
                                            "default": "latest"
                                          }
                                        }
                                      },
                                      "custom": {
                                        "title": "Custom",
                                        "type": "object",
                                        "description": "Custom image to launch Elastigroup with. Cannot be used with `marketplace`  <a style=color:red;>Required if marketplace image isn't specified.</a>",
                                        "properties": {
                                          "resourceGroupName": {
                                            "title": "Resource Group Name",
                                            "description": "Name of Resource Group for custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "spotinst-azure"
                                          },
                                          "name": {
                                            "title": "Image Name",
                                            "description": "Name of the custom image.  <a style=color:red;>Required if custom image is specified.</a>",
                                            "type": "string",
                                            "example": "custom-image-name"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "title": "Load Balancer Configuration",
                                    "description": "Configure a Load Balancer",
                                    "type": "object",
                                    "properties": {
                                      "loadBalancers": {
                                        "title": "Load Balancers",
                                        "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.",
                                        "type": "array",
                                        "items": {
                                          "anyOf": [
                                            {
                                              "type": "object",
                                              "title": "MULTAI_TARGET_SET",
                                              "properties": {
                                                "type": {
                                                  "title": "Type",
                                                  "description": "The type of load balancer.  Valid Values:\n+ MULTAI_TARGET_SET\n+ APPLICATION_GATEWAY",
                                                  "type": "string",
                                                  "example": "MULTAI_TARGET_SET",
                                                  "enum": [
                                                    "MULTAI_TARGET_SET"
                                                  ]
                                                },
                                                "balancerId": {
                                                  "type": "string",
                                                  "example": "lb-1ee2e3q"
                                                },
                                                "targetSetId": {
                                                  "type": "string",
                                                  "example": "ts-3eq"
                                                },
                                                "autoWeight": {
                                                  "type": "boolean",
                                                  "example": true
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "title": "APPLICATION_GATEWAY",
                                              "properties": {
                                                "type": {
                                                  "title": "Type",
                                                  "description": "The type of load balancer.  Valid Values:\n+ MULTAI_TARGET_SET\n+ APPLICATION_GATEWAY",
                                                  "type": "string",
                                                  "example": "APPLICATION_GATEWAY",
                                                  "enum": [
                                                    "APPLICATION_GATEWAY"
                                                  ]
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "The Resource Group name of the Load Balancer.",
                                                  "type": "string",
                                                  "example": "azureResourceGroup"
                                                },
                                                "applicationGatewayName": {
                                                  "type": "string",
                                                  "example": "appGateway"
                                                },
                                                "backendPoolName": {
                                                  "type": "string",
                                                  "example": "backendpool490822"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "managedServiceIdentities": {
                                    "title": "Managed Service Identities",
                                    "description": "Add a user-assigned managed identity to the VMs in the cluster.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "resourceGroupName": {
                                          "title": "Resource Group Name",
                                          "description": "The Resource Group that the user-assigned managed identity resides in.",
                                          "type": "string",
                                          "example": "Resourse Group 1"
                                        },
                                        "name": {
                                          "title": "Name",
                                          "description": "Name of the managed identity",
                                          "type": "string",
                                          "example": "Test"
                                        }
                                      }
                                    }
                                  },
                                  "shutdownScript": {
                                    "title": "Shutdown Script",
                                    "description": "Shutdown script for the group. Value should be passed as a string encoded at Base64 only",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "tags": {
                                    "title": "Tags",
                                    "description": "Key-Value pairs for VMs in the Elastigroup.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "title": "Tag Key",
                                          "description": "Tag Key for Vms in Elastigroup.",
                                          "type": "string",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "title": "Tag Value",
                                          "description": "Tag Value for VMs in Elastigroup.",
                                          "type": "string",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet Resource Group Name",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual Network",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Publick IP",
                                              "description": "Assign public IP",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": null,
                                              "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                              "type": "string",
                                              "example": null
                                            },
                                            "securityGroup": {
                                              "title": "Security Group",
                                              "description": "Security Group",
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "publicIps": {
                                              "description": "List of objects, In create group, cannot be empty.",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "description": "Cannot be empty.",
                                                    "type": "string",
                                                    "example": "resourceGroup"
                                                  },
                                                  "name": {
                                                    "description": "Cannot be empty.",
                                                    "type": "string",
                                                    "example": "name"
                                                  }
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Possible values:\n+ IPv4\n+ IPv6",
                                                    "default": "IPv4"
                                                  }
                                                }
                                              }
                                            },
                                            "privateIpAddresses": {
                                              "type": "array",
                                              "description": "A list with unique items that every item is a valid IP",
                                              "items": {
                                                "type": "string",
                                                "example": [
                                                  "172.232.5.3",
                                                  "172.23.5.4",
                                                  "172.23.5.7",
                                                  "172.23.5.8",
                                                  "172.23.5.9",
                                                  "172.23.5.10"
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "title": "Extensions",
                                    "description": "List of objects for Azure extensions",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "autoUpgradeMinorVersion",
                                        "name",
                                        "publisher",
                                        "type"
                                      ],
                                      "properties": {
                                        "autoUpgradeMinorVersion": {
                                          "title": "Auto Upgrade Minor Version",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "boolean",
                                          "example": true,
                                          "required": true
                                        },
                                        "name": {
                                          "title": "name",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "k8s-agentpool1-38611891-vmss-computeAksLinuxBilling"
                                        },
                                        "protectedSettings": {
                                          "title": "Protected Settings",
                                          "description": "Object for protected settings",
                                          "type": "object",
                                          "required": [
                                            "commandToExecute"
                                          ],
                                          "properties": {
                                            "commandToExecute": {
                                              "title": "Command To Execute",
                                              "description": "Required for compute.launchSpecification.extensions.protectedSettings object",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "publicSettings": {
                                          "title": "Public Settings",
                                          "description": "Public Settings",
                                          "type": "object"
                                        },
                                        "publisher": {
                                          "title": "Publisher",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "Microsoft.AKS"
                                        },
                                        "type": {
                                          "title": "Type",
                                          "description": "Required on compute.launchSpecification.extensions object",
                                          "type": "string",
                                          "example": "Compute.AKS-Engine.Linux.Billing"
                                        },
                                        "apiVersion": {
                                          "title": "API Version",
                                          "description": "The API version of the extension. Required if extension specified.",
                                          "type": "string",
                                          "example": 1
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "title": "minorVersionAutoUpgrade",
                                          "description": "Enable minor version upgrades of the extension. Required if extension specified.",
                                          "type": "boolean",
                                          "example": true
                                        }
                                      }
                                    }
                                  },
                                  "dataDisks": {
                                    "title": "Data Disks",
                                    "description": "List of data disks to be attached to the vms in the group.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "title": "Type",
                                          "description": "The type of the data disk. Required if dataDisks is specified. Possible values:\n+ Standard_LRS\n+ Premium_LRS\n+ StandardSSD_LRS",
                                          "type": "string",
                                          "example": "Standard_LRS"
                                        },
                                        "lun": {
                                          "title": "Lun",
                                          "description": "The lun of the data disk, Required if dataDisks is specified.",
                                          "type": "integer",
                                          "example": 6
                                        },
                                        "sizeGB": {
                                          "title": "Size GB",
                                          "description": "The size of the data disk in GB, Required if dataDisks is specified. Minimum value: 1 Maximum value: 1023",
                                          "type": "integer",
                                          "example": 10
                                        }
                                      }
                                    }
                                  },
                                  "osDisk": {
                                    "title": "OS Disk",
                                    "description": "Specify OS disk specification other than default.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "title": "Type",
                                        "description": "The type of the OS disk. Required if dataDisks is specified. Possible values:\n+ Standard_LRS\n+ Premium_LRS\n+ StandardSSD_LRS",
                                        "type": "string",
                                        "example": "Standard_LRS"
                                      },
                                      "size": {
                                        "title": "Size",
                                        "description": "The size of the OS disk in GB, Required if dataDisks is specified. Minimum value: 1 Maximum value: 1023",
                                        "type": "integer",
                                        "example": 6
                                      }
                                    }
                                  },
                                  "customData": {
                                    "title": "Custom Data",
                                    "description": "This value will hold the YML in base64 and will be added to the scaleSets",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "login": {
                                    "title": "Login",
                                    "description": "Set admin access for accessing your VMs.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "userName"
                                      ],
                                      "properties": {
                                        "userName": {
                                          "title": "User Name",
                                          "description": "User name for admin access to VMs.\n+ for windows: compute.launchSpecification.login.password\n+ for linux: compute.launchSpecification.login.sshPublicKey",
                                          "type": "string",
                                          "example": "spotinst"
                                        },
                                        "sshPublicKey": {
                                          "title": "SSH Public Key",
                                          "description": "SSH for admin access to Linux VMs.  <a style = color:red>Required for Linux.  Can not exist simultaneously with 'password'</a>",
                                          "type": "string"
                                        },
                                        "password": {
                                          "title": "Password",
                                          "description": "Password for admin access to Windows VMs.  <a style = color:red>Required for Windows. Can not exist simultaneously with 'sshPublicKey'</a>",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Elastigroups",
        "description": "List Elastigroup clusters.\n",
        "operationId": "elastigroupAzureSpotVmsListAll",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "NAME",
            "example": "name",
            "description": "Filters to find the Elastigroup via a specific name.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "REGION",
            "example": "region",
            "description": "Filters to find all the groups in a specific region.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/azure/compute/group"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Create Elasitgroup Azure Spot VMs",
                                "required": [
                                  "name",
                                  "region",
                                  "resourceGroupName",
                                  "capacity",
                                  "strategy",
                                  "compute"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "sig-123456789",
                                    "readOnly": true,
                                    "description": "Azure Elastigroup ID\n"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "spotinst-group",
                                    "description": "Azure Elastigroup Name\n"
                                  },
                                  "region": {
                                    "type": "string",
                                    "example": "westus2",
                                    "description": "The Azure region your Elastigroup will be created in.\n"
                                  },
                                  "resourceGroupName": {
                                    "type": "string",
                                    "example": "spotinst-azure",
                                    "description": "Name of the Resource Group for Elastigroup.\n"
                                  },
                                  "capacity": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/capacity"
                                  },
                                  "strategy": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/strategy"
                                  },
                                  "scaling": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling"
                                  },
                                  "compute": {
                                    "type": "object",
                                    "title": "Elastigroup Compute",
                                    "description": "Compute settings for Elastigroup.\n",
                                    "required": [
                                      "vmSizes",
                                      "os",
                                      "launchSpecification"
                                    ],
                                    "properties": {
                                      "vmSizes": {
                                        "type": "object",
                                        "description": "amount of time to be unhealthy before a replacement is triggered\n",
                                        "properties": {
                                          "odSizes": {
                                            "type": "array",
                                            "description": "Available On-Demand sizes.\n",
                                            "items": {
                                              "type": "string",
                                              "example": "standard_a1_v1"
                                            }
                                          },
                                          "spotSizes": {
                                            "type": "string",
                                            "description": "Available Spot-VM sizes.\n",
                                            "items": {
                                              "type": "string",
                                              "example": "standard_a2_v2"
                                            }
                                          }
                                        }
                                      },
                                      "os": {
                                        "type": "string",
                                        "example": "Linux",
                                        "description": "Type of operating system.\n",
                                        "enum": [
                                          "Linux",
                                          "Windows"
                                        ]
                                      },
                                      "launchSpecification": {
                                        "type": "object",
                                        "properties": {
                                          "customData": {
                                            "type": "string",
                                            "format": "byte",
                                            "description": "This value will hold the YML in base64 and will be added to the scaleSets\n",
                                            "example": ""
                                          },
                                          "image": {
                                            "type": "object",
                                            "description": "Image of VM. An image is a template for creating new VMs.\\\nChoose from Azure image catalogue (marketplace) or use a custom image.\n",
                                            "properties": {
                                              "marketplace": {
                                                "type": "object",
                                                "description": "Select an image from Azure's Marketplace image catalogue\\\nRequired if custom image isn't specified.\n",
                                                "properties": {
                                                  "publisher": {
                                                    "type": "string",
                                                    "description": "Image publisher.\\\nRequired if marketplace image is specified.\n",
                                                    "example": "OpenLogic"
                                                  },
                                                  "offer": {
                                                    "type": "string",
                                                    "description": "Name of image to use.\\\nRequired if marketplace image is specified.\n",
                                                    "example": "CentOS"
                                                  },
                                                  "sku": {
                                                    "type": "string",
                                                    "description": "Image's Stock Keeping Unit, which is the specific version of the image.\\\nRequired if marketplace image is specified.\n",
                                                    "example": "7.3"
                                                  },
                                                  "version": {
                                                    "type": "string",
                                                    "description": "Image's version. if version not provided we use \"latest\"\n",
                                                    "default": "lastest",
                                                    "example": "7.3-1611"
                                                  }
                                                }
                                              },
                                              "custom": {
                                                "type": "object",
                                                "writeOnly": true,
                                                "description": "Custom image to launch Elastigroup with.\\\nRequired if marketplace image isn't specified.\n",
                                                "properties": {
                                                  "resourceGroupName": {
                                                    "type": "string",
                                                    "description": "Name of Resource Group for custom image.\\\nRequired if custom image is specified.\n",
                                                    "example": "spotinst-azure"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Name of the custom image.\\\nRequired if custom image is specified.\n",
                                                    "example": "custom-image-name"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "network": {
                                            "title": "Network",
                                            "description": "Define the Virtual Network and Subnet for your Elastigroup.",
                                            "type": "object",
                                            "required": [
                                              "resourceGroupName",
                                              "virtualNetworkName",
                                              "networkInterfaces"
                                            ],
                                            "properties": {
                                              "resourceGroupName": {
                                                "title": "Resource Group Name",
                                                "description": "Vnet Resource Group Name",
                                                "type": "string",
                                                "example": "subnetResourceGroup"
                                              },
                                              "virtualNetworkName": {
                                                "title": "Virtual Network Name",
                                                "description": "Virtual Network",
                                                "type": "string",
                                                "example": "vname"
                                              },
                                              "networkInterfaces": {
                                                "title": "Virtual Network Name",
                                                "description": "Virtual Network",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "required": [
                                                    "isPrimary",
                                                    "subnetName"
                                                  ],
                                                  "properties": {
                                                    "isPrimary": {
                                                      "title": "Is Primary Criteria",
                                                      "description": "Defines whether the network interface is primary or not.",
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "subnetName": {
                                                      "title": "Subnet Name",
                                                      "description": "Subnet name",
                                                      "type": "string",
                                                      "example": "testSubnet"
                                                    },
                                                    "assignPublicIp": {
                                                      "title": "Assign Publick IP",
                                                      "description": "Assign public IP",
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "publicIpSku": {
                                                      "title": null,
                                                      "description": "Required if assignPublicIp=true values=[STANDARD/BASIC]",
                                                      "type": "string",
                                                      "example": null
                                                    },
                                                    "securityGroup": {
                                                      "title": "Security Group",
                                                      "description": "Security Group",
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "title": "Name",
                                                          "description": "Requires valid security group name. Required if security group is specified.",
                                                          "type": "string",
                                                          "example": "test"
                                                        },
                                                        "resourceGroupName": {
                                                          "title": "Resource Group Name",
                                                          "description": "Requires valid resource group name. Required if security group is specified.",
                                                          "type": "string",
                                                          "example": "test"
                                                        }
                                                      }
                                                    },
                                                    "publicIps": {
                                                      "description": "List of objects, In create group, cannot be empty.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "resourceGroupName": {
                                                            "description": "Cannot be empty.",
                                                            "type": "string",
                                                            "example": "resourceGroup"
                                                          },
                                                          "name": {
                                                            "description": "Cannot be empty.",
                                                            "type": "string",
                                                            "example": "name"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "enableIPForwarding": {
                                                      "title": "Enable IP Forwarding",
                                                      "description": "Enable IP Forwarding",
                                                      "type": "boolean",
                                                      "example": true
                                                    },
                                                    "additionalIpConfigurations": {
                                                      "title": "Additional IP Configurations",
                                                      "description": "Additional configuration of network interface",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "title": "Name",
                                                            "description": "Required if additionalConfiguration has been specified.",
                                                            "type": "string",
                                                            "example": "test"
                                                          },
                                                          "privateIpAddressVersion": {
                                                            "title": "Private IP Address Version",
                                                            "description": "Possible values:\n+ IPv4\n+ IPv6",
                                                            "default": "IPv4"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "privateIpAddresses": {
                                                      "type": "array",
                                                      "description": "A list with unique items that every item is a valid IP",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "172.23.4.20"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "login": {
                                            "type": "object",
                                            "description": "Set admin access for accessing your VMs. Password/SSH is required for Linux.\n",
                                            "properties": {
                                              "userName": {
                                                "type": "string",
                                                "description": "user name for admin access to VMs.\\\nLogin can be set:\n* for windows: compute.launchSpecification.login.password\n* for linux: compute.launchSpecification.login.sshPublicKey\n\nJust user name, without pwd or SSH key\n",
                                                "example": "spotinst"
                                              },
                                              "sshPublicKey": {
                                                "type": "string",
                                                "description": "SSH for admin access to Linux VMs.\\\nOptional for Linux.\n",
                                                "example": "ssh-rsa"
                                              },
                                              "password": {
                                                "type": "string",
                                                "writeOnly": true,
                                                "description": "Password for admin access to Windows VMs.\\\nRequired for Windows.\n"
                                              }
                                            }
                                          },
                                          "loadBalancersConfig": {
                                            "type": "object",
                                            "description": "Configure a Load Balancer.\n",
                                            "properties": {
                                              "loadBalancers": {
                                                "type": "array",
                                                "description": "Add a load balancer. For Azure Gateway, each Backend Pool is a separate load balancer.\n",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "type": {
                                                      "type": "string",
                                                      "description": "The type of load balancer.\n",
                                                      "enum": [
                                                        "loadBalancer",
                                                        "applicationGateway"
                                                      ],
                                                      "example": "loadBalancer"
                                                    },
                                                    "resourceGroupName": {
                                                      "type": "string",
                                                      "description": "The Resource Group name of the Load Balancer.\n",
                                                      "example": "testResourceGroup"
                                                    },
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Name of the Application Gateway/Load Balancer\n",
                                                      "example": "testLoadBalancer"
                                                    },
                                                    "sku": {
                                                      "type": "string",
                                                      "description": "* if type is LoadBalancer then possible values are:\n * âStandard\"\n * Basicâ\n* if ApplicationGateway then possible values are:\n * âStandard_Largeâ\n * âStandard_Mediumâ\n * âStandard_Smallâ\n * âStandard_v2\n * âWAF_Largeâ\n * âWAF_Medium\"\n * âWAF_v2\"\n",
                                                      "example": "Standard"
                                                    },
                                                    "backendPoolNames": {
                                                      "type": "array",
                                                      "description": "Name of the Backend Pool to register the Elastigroup VMs to.\\\nEach Backend Pool is a separate load balancer.\\\nRequired if Type is APPLICATION_GATEWAY.\n",
                                                      "example": [
                                                        "testBackendPool1",
                                                        "testBackendPool2"
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "managedServiceIdentities": {
                                            "type": "array",
                                            "writeOnly": true,
                                            "description": "Add a user-assigned managed identity to the VMs in the cluster.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "name of the managed identity\n",
                                                  "example": "mySI2"
                                                },
                                                "resourceGroupName": {
                                                  "type": "string",
                                                  "description": "The Resource Group that the user-assigned managed identity resides in.\n",
                                                  "example": "myResourceGroup"
                                                }
                                              }
                                            }
                                          },
                                          "shutdownScript": {
                                            "type": "string",
                                            "format": "byte",
                                            "writeOnly": true,
                                            "example": "IyEvdXNyL2Jpbi9lbnYgYmFzaAoiR29vZGJ5ZSBvbGQgaW5zdGFuY2Ui",
                                            "description": "shutdown script for the group. Value should be passed as a string encoded at Base64 only\n"
                                          },
                                          "tags": {
                                            "type": "array",
                                            "description": "Key-Value pairs for VMs in the Elastigroup.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "tagKey": {
                                                  "type": "string",
                                                  "description": "Tag Key for Vms in Elastigroup.\n",
                                                  "example": "env"
                                                },
                                                "tagValue": {
                                                  "type": "string",
                                                  "description": "Tag Value for VMs in Elastigroup.\n",
                                                  "example": "staging"
                                                }
                                              }
                                            }
                                          },
                                          "extensions": {
                                            "type": "array",
                                            "description": "List of objects for azure extensions\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "required": true,
                                                  "example": "extensionName"
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "required": true,
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "example": "customScript"
                                                },
                                                "publisher": {
                                                  "type": "string",
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "required": true,
                                                  "example": "MMicrosoft.Azure.Extensions"
                                                },
                                                "apiVersion": {
                                                  "type": "string",
                                                  "description": "The API version of the extension. Required if extension specified.\n",
                                                  "example": "2.0"
                                                },
                                                "minorVersionAutoUpgrade": {
                                                  "type": "boolean",
                                                  "required": true,
                                                  "description": "Required on compute.launchSpecification.extensions object\n",
                                                  "example": true
                                                },
                                                "publicSettings": {
                                                  "type": "object",
                                                  "description": "Object for public settings\n"
                                                },
                                                "protectedSettings": {
                                                  "type": "object",
                                                  "description": "Object for protected settings\n"
                                                }
                                              }
                                            }
                                          },
                                          "dataDisks": {
                                            "type": "array",
                                            "description": "list of data disks to be attached to the vms in the group.\n",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sizeGB": {
                                                  "type": "integer",
                                                  "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                                  "minimum": 1,
                                                  "maximum": 1023,
                                                  "example": 1
                                                },
                                                "lun": {
                                                  "type": "integer",
                                                  "description": "The lun of the data disk, Required if dataDisks is specified.\n",
                                                  "example": 1
                                                },
                                                "type": {
                                                  "type": "string",
                                                  "description": "The type of the data disk\n",
                                                  "enum": [
                                                    "Standard_LRS",
                                                    "Premium_LRS",
                                                    "StandardSSD_LRS"
                                                  ],
                                                  "example": "Standard_LRS"
                                                }
                                              }
                                            }
                                          },
                                          "osDisk": {
                                            "type": "object",
                                            "description": "Specify OS disk specification other than default.\n",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "description": "The type of the OS disk,\n",
                                                "enum": [
                                                  "Standard_LRS",
                                                  "Premium_LRS",
                                                  "StandardSSD_LRS"
                                                ],
                                                "example": "Standard_LRS"
                                              },
                                              "sizeGB": {
                                                "type": "integer",
                                                "description": "The size of the data disk in GB, Required if dataDisks is specified.\n",
                                                "minimum": 1,
                                                "maximum": 1023,
                                                "example": 30
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "health": {
                                    "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/health"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2018-10-10T10:50:29.000+0000"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "example": "2018-11-01T10:50:29.000+0000"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Get status of Elastigroup cluster.",
        "operationId": "elastigroupAzureSpotVmsGetStatus",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "example": "ready",
                                    "enum": [
                                      "ready",
                                      "rolling",
                                      "replacing",
                                      "recycling"
                                    ]
                                  },
                                  "vms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-12345"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "eastus"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "standard_a1_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        },
                                        "os": {
                                          "type": "string",
                                          "example": "Linux"
                                        },
                                        "privateIp": {
                                          "type": "integer",
                                          "example": "192.0.0.1"
                                        },
                                        "publicIp": {
                                          "type": "integer",
                                          "example": "183.123.67.79"
                                        },
                                        "provisioningState": {
                                          "type": "string",
                                          "example": "succeeded"
                                        },
                                        "powerState": {
                                          "type": "string",
                                          "example": "running"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2020-06-18T12:02:49.000Z"
                                        }
                                      }
                                    }
                                  },
                                  "suspendedProcesses": {
                                    "type": "array",
                                    "items": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "autoHealing"
                                          },
                                          "expiresAt": {
                                            "type": "string",
                                            "example": "2020-11-10T18:43:52.000Z"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "signalTimeout"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "autoScale"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "scaleDown"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "syncStrategy"
                                          },
                                          "expiresAt": {
                                            "type": "string",
                                            "example": "2020-11-10T17:43:52.000Z"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/suspend": {
      "put": {
        "summary": "Suspend Group",
        "description": "Suspends the Group.\n",
        "operationId": "elastigroupAzureSpotVmsSuspend",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "processes": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "signalTimeout"
                              },
                              "ttlInMinutes": {
                                "type": "string",
                                "description": "The duration in minutes which the process is suspended for",
                                "example": 180
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "syncStrategy"
                              },
                              "ttlInMinutes": {
                                "type": "string",
                                "description": "The duration in minutes which the process is suspended for",
                                "example": 180
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1resume/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/resume": {
      "put": {
        "summary": "Resume Group",
        "description": "Resumes the Group.\n",
        "operationId": "elastigroupAzureSpotVmsResume",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "processes": {
                        "type": "array",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "signalTimeout"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "syncStrategy"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Spot Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/detachVms": {
      "put": {
        "summary": "Detach VMs",
        "description": "Scale down specific virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsDetachVms",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "vmsToDetach",
                  "shouldTerminateVms",
                  "shouldDecrementTargetCapacity"
                ],
                "type": "object",
                "properties": {
                  "vmsToDetach": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "vm-0fbd69f960db"
                    },
                    "description": "Array of virtual machine names to detach.\n"
                  },
                  "shouldTerminateVms": {
                    "type": "Boolean",
                    "example": true,
                    "description": "Whether to terminate the VMs or not.\n"
                  },
                  "shouldDecrementTargetCapacity": {
                    "type": "Boolean",
                    "example": true,
                    "description": "Prevent Elastigroup from scaling back to target capacity when virtual machines are detached.\n"
                  },
                  "drainingTimeout": {
                    "type": "string",
                    "example": 300,
                    "description": "The time in seconds to allow the virtual machine be be drained from incoming TCP connections and detached from MLB before terminating it.\n",
                    "default": 300
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "detachedVms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-12345"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "eastus"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "standard_a1_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        },
                                        "os": {
                                          "type": "string",
                                          "example": "Linux"
                                        },
                                        "privateIp": {
                                          "type": "integer",
                                          "example": "192.0.0.1"
                                        },
                                        "publicIp": {
                                          "type": "integer",
                                          "example": "183.123.67.79",
                                          "provisioningState": {
                                            "type": "string",
                                            "example": "succeeded"
                                          },
                                          "powerState": {
                                            "type": "string",
                                            "example": "detached"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "example": "2020-06-18T12:02:49.000Z"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "newVms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-56789"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "eastus"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "standard_a1_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        },
                                        "os": {
                                          "type": "string",
                                          "example": "Linux"
                                        },
                                        "privateIp": {
                                          "type": "integer",
                                          "example": "192.0.0.1"
                                        },
                                        "publicIp": {
                                          "type": "integer",
                                          "example": "183.123.67.79"
                                        },
                                        "provisioningState": {
                                          "type": "string",
                                          "example": "succeeded"
                                        },
                                        "powerState": {
                                          "type": "string",
                                          "example": "running"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "example": "2020-06-18T12:02:49.000Z"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:detachVms"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Scale down virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsScaleDown",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": 5,
            "description": "Number of VMs to scale down\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1status/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Scale up virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsScaleUp",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "example": 5,
            "description": "Number of VMs to scale up\n",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1status/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/deployment": {
      "post": {
        "summary": "Start Deployment",
        "description": "Deploy the Elastigroup. This triggers a Blue/Green deployment that replaces the existing VMs in the Elastigroup.\n",
        "operationId": "elastigroupAzureSpotVmsCreateDeployment",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "deployment": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "sbgd-f331fb8e"
                          },
                          "groupId": {
                            "type": "string",
                            "readOnly": true,
                            "example": "sig-a7aa60cd"
                          },
                          "status": {
                            "type": "string",
                            "readOnly": true,
                            "example": "deploymentStart"
                          },
                          "currentBatch": {
                            "type": "integer",
                            "readOnly": true,
                            "example": 1
                          },
                          "numOfBatches": {
                            "type": "integer",
                            "readOnly": true,
                            "example": 2
                          },
                          "progress": {
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "unit": {
                                "type": "string",
                                "example": "percentage"
                              },
                              "value": {
                                "type": "integer",
                                "example": 10
                              }
                            }
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "example": "2020-06-22T11:15:06.614Z"
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "example": "2020-06-22T11:15:06.614Z"
                          },
                          "batchSizePercentage": {
                            "type": "integer",
                            "example": 50,
                            "writeOnly": true,
                            "description": "Indicates (in percentage) the batch size of the deployment (meaning, how many nodes to replace in each batch).\\\nCannot be null.\n",
                            "default": 25,
                            "minimum": 1,
                            "maximum": 100
                          },
                          "gracePeriod": {
                            "type": "integer",
                            "example": 300,
                            "writeOnly": true,
                            "description": "Indicates (in seconds) the timeout to wait until the node becomes healthy.\n",
                            "default": 600,
                            "minimum": 300
                          },
                          "batchMinHealthyPercentage": {
                            "type": "integer",
                            "example": 100,
                            "writeOnly": true,
                            "description": "Indicates the threshold of minimum healthy virtual machines in a single batch.\\\nIf the amount of healthy virtual machines in a single batch is under the threshold, the deployment will fail.\\\nThe value of the parameter should represent the number in percentage (%) of the batch.\n",
                            "default": 50,
                            "minimum": 1,
                            "maximum": 100
                          },
                          "drainingTimeout": {
                            "type": "integer",
                            "example": 120,
                            "writeOnly": true,
                            "description": "Indicates (in seconds) the timeout to drain the instances. Can be null.\\\nDefault - The Elastigroups draining time out or 120.\n",
                            "minimum": 0
                          },
                          "healthCheckTypes": {
                            "type": "array",
                            "enum": [
                              "vmState",
                              "applicationGateway"
                            ],
                            "example": [
                              "vmState"
                            ],
                            "writeOnly": true,
                            "description": "Define a health check type. Can be null.\\\nIf no value is set, the deployment will use the group's auto-healing health check.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1deployment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get All Deployments",
        "description": "Get a list of all the deployments of a specific Elastigroup and the status of each one.\n",
        "operationId": "elastigroupAzureSpotVmsListGroupDeployment",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "query",
            "name": "LIMIT",
            "example": 14,
            "description": "Limits the number of deployments returned. Default: 5\n",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "SORT",
            "example": "createdAt:DESC",
            "description": "Field by which to sort the results. Default: createdAt:DESC\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1deployment/post/requestBody/content/application~1json/schema/allOf/0/properties/deployment"
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:group:deployment"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/deployment/{deploymentId}": {
      "get": {
        "summary": "Get Deployment",
        "description": "Get the status of a specific deployment.\n",
        "operationId": "elastigroupAzureSpotVmsDeploymentStatus",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "DEPLOYMENT_ID",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to query.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D~1deployment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/deployment/{deploymentId}/details": {
      "get": {
        "summary": "Get Deployment Status",
        "description": "Get the detailed status of a specific deployment. This includes status details per batch and other information.\n",
        "operationId": "elastigroupAzureSpotVmsDeploymentStatusDetails",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "DEPLOYMENT_ID",
            "example": "sbgd-9876",
            "description": "The deployment ID you want to query.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "detailsOverview": {
                                    "type": "object",
                                    "properties": {
                                      "deploymentId": {
                                        "type": "string",
                                        "example": "sbgd-04c4658b"
                                      },
                                      "numberOfBatches": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "currentBatch": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "gracePeriod": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "blueVms": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "greenVms": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "description": {
                                        "type": "string",
                                        "example": null
                                      },
                                      "errorMessage": {
                                        "type": "string",
                                        "example": null
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2020-06-18T05:33:18.000Z"
                                      },
                                      "healthCheck": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "example": "instanceState"
                                        }
                                      }
                                    }
                                  },
                                  "batches": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "batch": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "blue": {
                                          "type": "object",
                                          "properties": {
                                            "vmName": {
                                              "type": "string",
                                              "example": "i-57ef3cf7a694"
                                            },
                                            "batchNum": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "status": {
                                              "type": "string",
                                              "example": "detached"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "old"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "example": "2020-06-18T11:16:58.000Z"
                                            }
                                          }
                                        },
                                        "green": {
                                          "type": "object",
                                          "properties": {
                                            "vmName": {
                                              "type": "string",
                                              "example": "i-f2a44ba41875"
                                            },
                                            "batchNum": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "status": {
                                              "type": "string",
                                              "example": "detached"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "old"
                                            },
                                            "updatedAt": {
                                              "type": "string",
                                              "example": "2020-06-18T11:16:58.000Z"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "events": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "example": "deploymentStart"
                                        },
                                        "eventType": {
                                          "type": "string",
                                          "example": "Batch 1 - Launching New instances"
                                        },
                                        "timestamp": {
                                          "type": "string",
                                          "example": "2020-06-18T05:33:18.000Z"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:deployment:details"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/scaleSet/{scaleSetName}": {
      "get": {
        "summary": "Import Group From Scale Set",
        "description": "Given a scale set, constructs a valid group configuration based on the scale set and returns it.",
        "operationId": "elastigroupAzureSpotVmsGetAScaleSet",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "description": "Resource Group Name - Must be valid.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "scaleSetName",
            "example": "MyExampleScaleSetImport",
            "description": "Scale Set Name - Must be valid\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Create Elasitgroup Azure Spot VMs",
                                "required": [
                                  "group"
                                ],
                                "properties": {
                                  "group": {
                                    "type": "object",
                                    "title": "Azure Elastigroup",
                                    "required": [
                                      "name",
                                      "region",
                                      "resourceGroupName",
                                      "capacity",
                                      "strategy",
                                      "compute"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "MyExampleScaleSetImport",
                                        "description": "Azure Elastigroup Name\n"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "westus2",
                                        "description": "The Azure region your Elastigroup will be created in.\n"
                                      },
                                      "resourceGroupName": {
                                        "type": "string",
                                        "example": "ExampleResourceGroup",
                                        "description": "Name of the Resource Group for Elastigroup.\n"
                                      },
                                      "capacity": {
                                        "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/capacity"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/strategy"
                                      },
                                      "scaling": {
                                        "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling"
                                      },
                                      "compute": {
                                        "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/compute"
                                      },
                                      "health": {
                                        "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/health"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "readOnly": true,
                                        "format": "date-time",
                                        "example": "2018-10-10T10:50:29.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "readOnly": true,
                                        "format": "date-time",
                                        "example": "2018-11-01T10:50:29.000+0000"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:elastigroup:import"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/import/resourceGroup/{resourceGroupName}/virtualMachine/{virtualMachineName}": {
      "get": {
        "summary": "Import Group From Virtual Machine",
        "description": "Given a virtual machine, constructs a valid group configuration based on the virtual machine and returns it.\n",
        "operationId": "elastigroupAzureSpotVmsImportFromVirtualMachine",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "example": "ExampleResourceGroup",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "virtualMachineName",
            "example": "MyExampleVirtualMachineImport",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Create Elasitgroup Azure Spot VMs",
                                "required": [
                                  "group"
                                ],
                                "properties": {
                                  "group": {
                                    "type": "object",
                                    "title": "Azure Elastigroup",
                                    "required": [
                                      "name",
                                      "region",
                                      "resourceGroupName",
                                      "capacity",
                                      "strategy",
                                      "compute"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "MyExampleVirtualMachineImport",
                                        "description": "Azure Elastigroup Name\n"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "westus2",
                                        "description": "The Azure region your Elastigroup will be created in.\n"
                                      },
                                      "resourceGroupName": {
                                        "type": "string",
                                        "example": "ExampleResourceGroup",
                                        "description": "Name of the Resource Group for Elastigroup.\n"
                                      },
                                      "capacity": {
                                        "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/capacity"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/strategy"
                                      },
                                      "scaling": {
                                        "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/scaling"
                                      },
                                      "compute": {
                                        "$ref": "#/paths/~1azure~1compute~1group/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/compute"
                                      },
                                      "health": {
                                        "$ref": "#/paths/~1azure~1compute~1group~1%7BgroupId%7D/put/requestBody/content/application~1json/schema/allOf/0/properties/group/properties/health"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "readOnly": true,
                                        "format": "date-time",
                                        "example": "2018-10-10T10:50:29.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "readOnly": true,
                                        "format": "date-time",
                                        "example": "2018-11-01T10:50:29.000+0000"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:azure:compute:elastigroup:import"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/vm/signal": {
      "post": {
        "summary": "Create VM Signal",
        "description": "The VM signal API is used for notifying Spot about the VM state so that Spot can act accordingly. Supported signals are vmReady â Whenever this signal is sent, Spot will register the instance to the relevant Load Balancer and Application Gateway. vmReadyToShutdown â When this signal is received after a vm is detached; we will immediately terminate the vm. You must define the expected signals for your Elastigroup in the group configuration.",
        "operationId": "elastigroupAzureSpotVmsCreateVMSignal",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "vmName",
                      "signalType"
                    ],
                    "properties": {
                      "vmName": {
                        "type": "string",
                        "example": "vm-123456",
                        "description": "The virtual machine ID the signal refers to.\n"
                      },
                      "signalType": {
                        "type": "String",
                        "enum": [
                          "vmReady",
                          "vmReadyToShutdown"
                        ],
                        "example": "vmReady",
                        "description": "The specific signal you want to trigger.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "description": "Original request properties\n",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "e593ff58-067d-4340-92f9-8b1c0bad70d7",
                              "description": "Unique ID associated with this request\n"
                            },
                            "url": {
                              "type": "string",
                              "description": "The URL that was used for the request\n"
                            },
                            "method": {
                              "type": "string",
                              "description": "The HTTP **METHOD** used for the request\n"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "2018-06-20T11:35:01.745Z",
                              "description": "When the request was received by Spot\n"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "description": "Response package that includes, status, type and any relevant data.\n",
                          "properties": {
                            "status": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "example": 200,
                                  "description": "HTTP status code assigned to this response\n"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "OK",
                                  "description": "HTTP status message for the respective status code\n"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/vm/{vmName}/protection": {
      "post": {
        "summary": "Virtual Machine Protection",
        "description": "Protect virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsProtect",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "vmName",
            "example": "i-f2a44ba41875",
            "description": "The virtual machine name to protect.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "ttlInMinutes",
            "example": 180,
            "description": "Specify a TTL (in minutes) for this protection, meaning, for how long the protection will be valid for. (If null, infinite protection)\n",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Set protection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Virtual Machine Remove Protection",
        "description": "Un-Protect virtual machines in Elastigroup cluster.\n",
        "operationId": "elastigroupAzureSpotVmsUnProtect",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "in": "path",
            "name": "vmName",
            "example": "i-f2a44ba41875",
            "description": "The virtual machine name to remove protection.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Remove protection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/compute/group/{groupId}/logs": {
      "get": {
        "summary": "Get Elastilog",
        "description": "You can fetch a Elastigroup's Elastilog via the Spot API, in order to be able to consume elastilog from various tools used for log storing and analyzing. Logs have retention of 3 months back from today, so minimal fromDate should be up to 3 months back at runtime.",
        "operationId": "elastigroupAzureSpotVmsGetElastigroupLogEntries",
        "tags": [
          "Elastigroup Azure Spot VMs"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "SEVERITY",
            "example": "WARN",
            "description": "Severity of log entries to extract.\n",
            "schema": {
              "type": "string",
              "enum": [
                "DEBUG",
                "WARN",
                "INFO",
                "ALL",
                "ERROR"
              ]
            }
          },
          {
            "in": "query",
            "name": "RESOURCE_ID",
            "example": "vm-12345678",
            "description": "Filter log extracted entires related to a specific resource id Default: Null\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "example": 500,
            "description": "Maximum number of lines to extract in a response. Max value allowed - 1000. Default is 500, if got null.\n",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Elastigroup Wrapper",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Successfully detached [vm-b4ab9da435aa]"
                                  },
                                  "severity": {
                                    "type": "string",
                                    "example": "INFO"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-07-16T16:46:49.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:log"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group": {
      "get": {
        "summary": "List Elastigroups",
        "description": "List all GCP Elastigroups for a Spot Account\n",
        "operationId": "elastigroupGcpListAll",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1gcp~1gce~1group/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Elastigroup",
        "description": "Create a new GCP Elastigroup",
        "operationId": "elastigroupGcpCreate",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup Wrapper",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "GCP Elastigroup",
                        "required": [
                          "capacity",
                          "compute"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "sig-1234567",
                            "readOnly": true,
                            "description": "GCP Elastigroup\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "GCP Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "Some GCP Elastigroup description",
                            "description": "Description for your GCP Elastigroup\n"
                          },
                          "capacity": {
                            "title": "Capacity Units",
                            "type": "object",
                            "required": [
                              "target",
                              "minimum",
                              "maximum"
                            ],
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to.\n"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 20,
                                "description": "The Elastigroup will not set a target greater than this value.\n"
                              },
                              "unit": {
                                "type": "string",
                                "example": "instance",
                                "description": "The base capacity unit.\n"
                              }
                            }
                          },
                          "scheduling": {
                            "title": "Scheduling Object",
                            "type": "object",
                            "properties": {
                              "tasks": {
                                "title": "Tasks Array",
                                "type": "array",
                                "items": {
                                  "title": "Task Object",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "setCapacity"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "1 10 * * *"
                                    },
                                    "targetCapacity": {
                                      "type": "integer",
                                      "example": 2
                                    },
                                    "minCapacity": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "maxCapacity": {
                                      "type": "integer",
                                      "example": 3
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "required": [
                              "preemptiblePercentage",
                              "onDemandCount",
                              "fallbackToOd"
                            ],
                            "properties": {
                              "fallbackToOd": {
                                "type": "boolean",
                                "example": true
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": [
                                    "Mon:01:00-Mon:02:00"
                                  ]
                                }
                              },
                              "revertToPreemptible": {
                                "required": [
                                  "performAt"
                                ],
                                "type": "object",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "preemptiblePercentage": {
                                "type": "integer",
                                "example": 90,
                                "description": "percentage of Preemptible instances in the Elastigroup. The remaining percentage will be On-Demand instances.\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "example": 2,
                                "description": "the exact number of On-Demand instances required in the Elastigroup.\n"
                              },
                              "drainingTimeout": {
                                "example": 30,
                                "type": "integer",
                                "description": "The time in seconds, the instance is allowed to run while detached from the ELB.\n"
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Compute Object",
                            "required": [
                              "availabilityZones",
                              "subnets",
                              "launchSpecification"
                            ],
                            "properties": {
                              "launchSpecification": {
                                "type": "object",
                                "title": "Launch Specification Object",
                                "required": [
                                  "networkInterfaces",
                                  "disks"
                                ],
                                "properties": {
                                  "metadata": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "example": "environment"
                                        },
                                        "value": {
                                          "type": "string",
                                          "example": "production"
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "prod1",
                                        "testingfeature"
                                      ]
                                    }
                                  },
                                  "backendServiceConfig": {
                                    "type": "object",
                                    "title": "backendServiceConfig Object",
                                    "properties": {
                                      "backendServices": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "backendServiceName"
                                          ],
                                          "properties": {
                                            "backendServiceName": {
                                              "type": "string",
                                              "example": "bserv-2"
                                            },
                                            "locationType": {
                                              "type": "string",
                                              "example": "global"
                                            },
                                            "scheme": {
                                              "type": "string",
                                              "example": null
                                            },
                                            "namedPorts": {
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "ports"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "https"
                                                },
                                                "ports": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "example": [
                                                      443,
                                                      8443
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "disks": {
                                    "type": "array",
                                    "title": "Disks array",
                                    "required": [
                                      "type",
                                      "diskSizeGb",
                                      "sourceImage"
                                    ],
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "initializeParams": {
                                          "type": "object",
                                          "properties": {
                                            "diskSizeGb": {
                                              "type": "integer",
                                              "example": 10
                                            },
                                            "diskType": {
                                              "type": "string",
                                              "example": "pd-standard"
                                            },
                                            "sourceImage": {
                                              "type": "string",
                                              "example": "https://www.googleapis.com/compute/v1/projects/test/global/images/docker-image-1"
                                            }
                                          }
                                        },
                                        "mode": {
                                          "type": "string",
                                          "example": "READ_WRITE"
                                        },
                                        "source": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "PERSISTENT"
                                        },
                                        "autoDelete": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "boot": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "interface": {
                                          "type": "string",
                                          "example": "SCSI"
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "title": "Network Interfaces array",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "network"
                                      ],
                                      "properties": {
                                        "network": {
                                          "type": "string",
                                          "example": "spot-network"
                                        },
                                        "projectId": {
                                          "type": "string",
                                          "example": "test-project"
                                        }
                                      }
                                    }
                                  },
                                  "startupScript": {
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gNCnRvdWNoIHRlc3Qiquwhq38"
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "example": null
                                  },
                                  "ipForwarding": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "minCpuPlatform": {
                                    "type": "string",
                                    "example": "Intel Sandy Bridge"
                                  }
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "title": "On Demand & Preemptible Types Object",
                                "required": [
                                  "ondemand",
                                  "preemptible"
                                ],
                                "properties": {
                                  "ondemand": {
                                    "type": "string",
                                    "example": "n1-standard-1",
                                    "description": "The type of On Demand instances to utilize\n"
                                  },
                                  "preemptible": {
                                    "type": "array",
                                    "example": [
                                      "n1-standard-1",
                                      "n1-standard-2"
                                    ],
                                    "description": "The type of Preemptible instances to utilize\n"
                                  }
                                }
                              },
                              "availabilityZones": {
                                "type": "array",
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-b",
                                  "asia-east1-c"
                                ],
                                "description": "Availability zones for the group"
                              },
                              "gpu": {
                                "type": "object",
                                "title": "CPU Object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "nvidia-tesla-v100"
                                  },
                                  "count": {
                                    "type": "integer",
                                    "example": 1
                                  }
                                }
                              },
                              "subnets": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "region": {
                                      "type": "string",
                                      "example": "us-west1"
                                    },
                                    "subnetNames": {
                                      "type": "array",
                                      "example": [
                                        "private"
                                      ]
                                    }
                                  }
                                },
                                "description": "Subnets your group is associated with\n"
                              },
                              "elasticIps": {
                                "type": "array",
                                "example": null,
                                "description": "Elastic IPs your group is associated with\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Scaling object",
                            "properties": {
                              "up": {
                                "type": "array",
                                "items": {
                                  "title": "Up scaling object",
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "example": "scale_up_1"
                                    },
                                    "source": {
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "example": "gte"
                                    },
                                    "dimensions": {
                                      "title": "Array of dimension objects",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "items": {
                                  "title": "Down scaling object",
                                  "type": "object",
                                  "properties": {
                                    "policyName": {
                                      "type": "string",
                                      "example": "scale_down_1"
                                    },
                                    "source": {
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "operator": {
                                      "type": "string",
                                      "example": "lte"
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "title": "Third Parties Integration Object",
                            "type": "object",
                            "properties": {
                              "dockerSwarm": {
                                "title": "DockerSwarm ThirdPartiesIntegration Object",
                                "type": "object",
                                "properties": {
                                  "masterHost": {
                                    "type": "string",
                                    "example": "swarm1.swarm.com"
                                  },
                                  "masterPort": {
                                    "type": "integer",
                                    "example": 1234
                                  }
                                }
                              },
                              "gke": {
                                "title": "GKE ThirdPartiesIntegration Object",
                                "type": "object",
                                "properties": {
                                  "autoUpdate": {
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "autoScale": {
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "example": true
                                      },
                                      "isAutoConfig": {
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "cooldown": {
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "headroom": {
                                        "type": "object",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "memoryPerUnit": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "numOfUnits": {
                                            "type": "integer",
                                            "example": 1
                                          }
                                        }
                                      },
                                      "down": {
                                        "type": "object",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "type": "integer",
                                            "example": 5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "clusterIdentifier": {
                                    "type": "string",
                                    "example": "gke-clust-1"
                                  },
                                  "location": {
                                    "type": "string",
                                    "example": "us-west1"
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2020-10-16T09:03:23.000Z",
                            "format": "date-time",
                            "description": "The datetime the group was created.\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-10-16T09:03:23.000Z",
                            "format": "date-time",
                            "description": "The datetime the group was last updated.\n"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object",
                        "required": [
                          "name",
                          "strategy"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}": {
      "get": {
        "summary": "Get Elastigroup",
        "description": "List all properties for single GCP Elastigroup\n",
        "operationId": "elastigroupGcpDescribe",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "sig-12345",
            "description": "Elastigroup ID\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Elastigroup",
        "description": "Delete an Elastigroup GCP\n",
        "operationId": "elastigroupGcpDelete",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Spot Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Elastigroup",
        "description": "Update an GCP Elastigroup\n",
        "operationId": "elastigroupGcpUpdate",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "GCP Elastigroup Update",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "GCP Elastigroup",
                        "description": "Elastigroup Configuration",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "spotinst-group",
                            "description": "GCP Elastigroup Name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "Some GCP Elastigroup description",
                            "description": "Description for your GCP Elastigroup\n"
                          },
                          "capacity": {
                            "title": "Capacity Units",
                            "description": "Update capacity settings",
                            "type": "object",
                            "properties": {
                              "target": {
                                "type": "integer",
                                "example": 8,
                                "description": "Current scale the Elastigroup will conform to.\n"
                              },
                              "minimum": {
                                "type": "integer",
                                "example": 2,
                                "description": "The Elastigroup will not set a target below this value.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 20,
                                "description": "The Elastigroup will not set a target greater than this value.\n"
                              }
                            }
                          },
                          "scheduling": {
                            "title": "Scheduling Object",
                            "description": "Schedule tasks to execute, using CRON expressions.",
                            "type": "object",
                            "properties": {
                              "tasks": {
                                "title": "Tasks Array",
                                "description": "The scheduling tasks for the group.",
                                "type": "array",
                                "items": {
                                  "title": "Task Object",
                                  "type": "object",
                                  "required": [
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "title": "Is Enabled",
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run.",
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "taskType": {
                                      "title": "Is Enabled",
                                      "description": "The task type to run. / Valid Values: 'setCapacity'. Required on scheduling.tasks object.",
                                      "type": "string",
                                      "example": "setCapacity"
                                    },
                                    "cronExpression": {
                                      "title": "Cron Expression",
                                      "description": "A valid cron expression. For example : * * * * * .The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of âfrequencyâ or âcronExpressionâ should be used at a time.",
                                      "type": "string",
                                      "example": "1 10 * * *"
                                    },
                                    "targetCapacity": {
                                      "title": "Target Capacity",
                                      "description": "The target capacity of the group",
                                      "type": "integer",
                                      "example": 2
                                    },
                                    "minCapacity": {
                                      "title": "Min Capacity",
                                      "description": "The min capacity of the group",
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "maxCapacity": {
                                      "title": "Max Capacity",
                                      "description": "The max capacity of the group",
                                      "type": "integer",
                                      "example": 3
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Elastigroup Strategy",
                            "description": "Update strategy settings",
                            "properties": {
                              "fallbackToOd": {
                                "title": "Fallback To Od",
                                "description": "Activate Fallback to On-Demand. When provisioning an instance, if no Preemptible market is available, Fallback to On-Demand will provision an On-Demand instance to maintain the group capacity.",
                                "type": "boolean",
                                "example": true
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "title": "Optimization Windows",
                                "description": "Set time window to perform the revert to preemptible. time windows must be at least 120 minutes. Format: DayInWeek:HH-DayInWeek:HH. Required when strategy.revertToPreemptible.performAt is 'timeWindow'",
                                "items": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": [
                                    "Mon:01:00-Mon:02:00"
                                  ]
                                }
                              },
                              "revertToPreemptible": {
                                "required": [
                                  "performAt"
                                ],
                                "type": "object",
                                "description": "Setting for revert to preemptible option",
                                "properties": {
                                  "performAt": {
                                    "title": "Perform At",
                                    "description": "Required on strategy.revertToPreemptible object",
                                    "enum": [
                                      "always",
                                      "never",
                                      "timeWindow"
                                    ],
                                    "type": "string",
                                    "example": "timeWindow"
                                  }
                                }
                              },
                              "preemptiblePercentage": {
                                "type": "integer",
                                "example": 90,
                                "description": "percentage of Preemptible instances in the Elastigroup. The remaining percentage will be On-Demand instances.\n"
                              },
                              "onDemandCount": {
                                "type": "integer",
                                "example": 2,
                                "description": "the exact number of On-Demand instances required in the Elastigroup.\n"
                              },
                              "drainingTimeout": {
                                "example": 30,
                                "type": "integer",
                                "description": "The time in seconds, the instance is allowed to run while detached from the ELB.\n"
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Compute Object",
                            "description": "Compute Configuration",
                            "properties": {
                              "health": {
                                "title": "Health",
                                "type": "object",
                                "description": "Set autohealing properties.",
                                "required": [
                                  "healthCheckType"
                                ],
                                "properties": {
                                  "healthCheckType": {
                                    "title": "Health Check Type",
                                    "description": "Required on compute.health object.",
                                    "type": "string",
                                    "example": "K8S_NODE"
                                  },
                                  "autoHealing": {
                                    "title": "Auto Healing",
                                    "description": "Enable Autohealing of unhealthy instances",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "gracePeriod": {
                                    "type": "string",
                                    "example": 300,
                                    "title": "Grace Period",
                                    "description": "Period of time to wait to reach healthiness before monitoring for unhealthiness. The time to wait after launch before the first health check."
                                  },
                                  "unhealthyDuration": {
                                    "type": "integer",
                                    "example": 250,
                                    "title": "Unhealthy Duration",
                                    "description": "Amount of time to be unhealthy before a replacement is triggered"
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "title": "Launch Specification Object",
                                "description": "Update compute.launchSpecification settings",
                                "properties": {
                                  "metadata": {
                                    "title": "Metadata",
                                    "description": "An array of the following objects, representing Key-Value pair meta data for the created instances",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "title": "Key",
                                          "description": "The meta dataâs key",
                                          "type": "string",
                                          "example": "environment"
                                        },
                                        "value": {
                                          "title": "Value",
                                          "description": "The meta dataâs value",
                                          "type": "string",
                                          "example": "production"
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "title": "Tags",
                                    "description": "Tags to mark instances created.",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "prod1",
                                        "testingfeature"
                                      ]
                                    }
                                  },
                                  "backendServiceConfig": {
                                    "type": "object",
                                    "title": "backendServiceConfig Object",
                                    "description": "Configure Backend Services.",
                                    "properties": {
                                      "backendServices": {
                                        "type": "array",
                                        "title": "Backend Services",
                                        "description": "Configure the Backend Service to connect the Elastigroup to",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "backendServiceName"
                                          ],
                                          "properties": {
                                            "backendServiceName": {
                                              "title": "Backend Service Name",
                                              "description": "The name of the Backend Service. Required on compute.launchSpecification.backendServiceConfig.backendServices object",
                                              "type": "string",
                                              "example": "bserv-2"
                                            },
                                            "locationType": {
                                              "title": "Location Type",
                                              "description": "Which locations the backend service should be active. Possible values should be: 'regional' 'global'",
                                              "type": "string",
                                              "example": "global"
                                            },
                                            "scheme": {
                                              "title": "Scheme",
                                              "description": "In case the locationType is 'regional' we can set the traffic for the backend service, / between the instances in the vpc / traffic from the internet",
                                              "type": "string",
                                              "enum": [
                                                "INTERNAL",
                                                "EXTERNAL",
                                                "null"
                                              ],
                                              "example": null
                                            },
                                            "namedPorts": {
                                              "title": "Named Ports",
                                              "description": "Key-Value of port name and and port tuples.",
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "ports"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "The name mapped to the port numbers that the Backend Service sends traffic through to the Elastigroup instances. The port name is mapped to one or more port numbers. Only one port name can selected per Backend Service. Required on compute.launchSpecification.backendServiceConfig.backendServices.namedPorts object",
                                                  "type": "string",
                                                  "example": "https"
                                                },
                                                "ports": {
                                                  "title": "Port",
                                                  "description": "The ports that the Backend Service sends traffic through to the Elastigroup instances. Required on compute.launchSpecification.backendServiceConfig.backendServices.namedPorts object",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "integer",
                                                    "example": [
                                                      443,
                                                      8443
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "disks": {
                                    "type": "array",
                                    "title": "Disks array",
                                    "description": "Array of disks associated with this instance. Persistent disks must be created before you can assign them",
                                    "required": [
                                      "sourceImage"
                                    ],
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "title": "Device Name",
                                          "description": "Specifies a unique device name of your choice",
                                          "type": "string",
                                          "example": null
                                        },
                                        "initializeParams": {
                                          "title": "Initialize Params",
                                          "description": "Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance",
                                          "type": "object",
                                          "properties": {
                                            "diskSizeGb": {
                                              "title": "Disk Size Gb",
                                              "description": "Specifies the size of the disk in base-2 GB",
                                              "type": "integer",
                                              "example": 10
                                            },
                                            "diskType": {
                                              "title": "Disk Type",
                                              "description": "Specifies the disk type to use to create the instance. the default is pd-standard. Valid values: pd-ssd, local-ssd",
                                              "type": "string",
                                              "example": "pd-standard"
                                            },
                                            "sourceImage": {
                                              "title": "Source Image",
                                              "description": "A source image used to create the disk. You can provide a private (custom) image, and Compute Engine will use the corresponding image from your project. Required for compute.launchSpecification.disks.initializeParams object",
                                              "type": "string",
                                              "example": "https://www.googleapis.com/compute/v1/projects/test/global/images/docker-image-1"
                                            }
                                          }
                                        },
                                        "mode": {
                                          "title": "Mode",
                                          "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode",
                                          "type": "string",
                                          "example": "READ_WRITE"
                                        },
                                        "source": {
                                          "title": "Source",
                                          "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource. This field is only applicable for persistent disks.",
                                          "type": "string",
                                          "example": null
                                        },
                                        "type": {
                                          "title": "Type",
                                          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT",
                                          "type": "string",
                                          "example": "PERSISTENT"
                                        },
                                        "autoDelete": {
                                          "title": "Auto Delete",
                                          "description": "Specifies whether the disk will be auto-deleted when the instance is deleted.",
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "boot": {
                                          "title": "Boot",
                                          "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem",
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "interface": {
                                          "title": "Interface",
                                          "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVM. The default is SCSI",
                                          "type": "string",
                                          "example": "SCSI"
                                        }
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "title": "Network Interfaces array",
                                    "description": "An array of the following objects, representing network configuration for the created instances",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "network"
                                      ],
                                      "properties": {
                                        "network": {
                                          "title": "Network",
                                          "description": "Network resource for this instance elastic for the created instances",
                                          "type": "string",
                                          "example": "spot-network"
                                        },
                                        "projectId": {
                                          "title": "Project ID",
                                          "description": "Use network resource from different project. set project ID to use it's network resource. This parameter relevant only If the network resource is in different project",
                                          "type": "string",
                                          "example": "test-project"
                                        }
                                      }
                                    }
                                  },
                                  "startupScript": {
                                    "title": "Startup Script",
                                    "description": "Create and run your own startup scripts on your virtual machines to perform automated tasks every time your instance boots up.",
                                    "type": "string",
                                    "example": "IyEvYmluL2Jhc2gNCnRvdWNoIHRlc3Qiquwhq38"
                                  },
                                  "shutdownScript": {
                                    "title": "Shutdown Script",
                                    "description": "The Base64-encoded shutdown script to execute prior to instance termination. For more information please see: Shutdown Script",
                                    "type": "string",
                                    "example": null
                                  },
                                  "ipForwarding": {
                                    "title": "IP Forwarding",
                                    "description": "IP Forwarding Criteria",
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "minCpuPlatform": {
                                    "title": "Min Cpu Platform",
                                    "description": "Set instance CPU platform",
                                    "type": "string",
                                    "example": "Intel Sandy Bridge"
                                  }
                                }
                              },
                              "instanceTypes": {
                                "type": "object",
                                "title": "On Demand & Preemptible Types Object",
                                "description": "Instance Types Configuration",
                                "required": [
                                  "ondemand",
                                  "preemptible"
                                ],
                                "properties": {
                                  "ondemand": {
                                    "type": "string",
                                    "example": "n1-standard-1",
                                    "description": "The type of On Demand instances to utilize\n"
                                  },
                                  "preemptible": {
                                    "type": "array",
                                    "example": [
                                      "n1-standard-1",
                                      "n1-standard-2"
                                    ],
                                    "description": "The type of Preemptible instances to utilize\n"
                                  }
                                }
                              },
                              "availabilityZones": {
                                "type": "array",
                                "example": [
                                  "asia-east1-a",
                                  "asia-east1-b",
                                  "asia-east1-c"
                                ],
                                "description": "Availability zones for the group"
                              },
                              "gpu": {
                                "type": "object",
                                "title": "CPU Object",
                                "description": null,
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "nvidia-tesla-v100"
                                  },
                                  "count": {
                                    "type": "integer",
                                    "example": 1
                                  }
                                }
                              },
                              "subnets": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "region": {
                                      "type": "string",
                                      "example": "us-west1"
                                    },
                                    "subnetNames": {
                                      "type": "array",
                                      "example": [
                                        "private"
                                      ]
                                    }
                                  }
                                },
                                "description": "Subnets your group is associated with\n"
                              },
                              "elasticIps": {
                                "type": "array",
                                "example": null,
                                "description": "Elastic IPs your group is associated with\n"
                              }
                            }
                          },
                          "scaling": {
                            "type": "object",
                            "title": "Scaling object",
                            "description": "Update scaling settings",
                            "properties": {
                              "up": {
                                "title": "Up",
                                "description": "Update scaling up settings",
                                "type": "array",
                                "items": {
                                  "title": "Up scaling object",
                                  "type": "object",
                                  "required": [
                                    "metricName",
                                    "threshold",
                                    "namespace"
                                  ],
                                  "properties": {
                                    "policyName": {
                                      "title": "Policy Name",
                                      "description": "Scaling policy name",
                                      "type": "string",
                                      "example": "scale_up_1"
                                    },
                                    "source": {
                                      "title": "Source",
                                      "description": "The source of the metric. Valid values: spectrum, stackdriver",
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "title": "Metric Name",
                                      "description": "The name of the metric. Default value is instance/cpu/utilization. Required on scaling.up object",
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "title": "Statistic",
                                      "description": "The metric aggregator to return. Valid values: average, sum, min, max",
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "title": "Unit",
                                      "description": "The unit for the alarmâs associated metric.",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "title": "Threshold",
                                      "description": "The value against which the specified statistic is compared. Required on scaling.up object",
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "title": "Namespace",
                                      "description": "The namespace for the associated metric. Valid value: compute Required on scaling.up object",
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "title": "Period",
                                      "description": "The period in seconds over which the statistic is applied",
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "title": "Evaluation Periods",
                                      "description": "The number of periods over which data is compared to the specified threshold",
                                      "type": "integer",
                                      "default": 1,
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "title": "Cooldown",
                                      "description": "The amount of time (in seconds) after a scaling activity completes before any further trigger-related scaling activities can start",
                                      "type": "integer",
                                      "default": 300,
                                      "example": 300
                                    },
                                    "operator": {
                                      "title": "Operator",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. / Valid Values: gte (greater than or equal to) lte (lower than or equal to)",
                                      "type": "string",
                                      "default": "gte",
                                      "example": "lte"
                                    },
                                    "dimensions": {
                                      "title": "Array of dimension objects",
                                      "description": "Set metrics for scaling.up policy",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "title": "Name",
                                            "description": "The short labels names for filtering associated metric. For example, the metric instance/disk/read_ops_count is associated with the label compute.googleapis.com/storage_type, the short label name is storage_type",
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "title": "Value",
                                            "description": "Value of selected metric.can be Null",
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "type": "object",
                                      "title": "Action",
                                      "description": "The action to take when scale up is needed.",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "title": "Type",
                                          "description": "The type of the action to take when scale up is needed. Valid value: adjustment. Required on scaling.up.action object",
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "title": "Adjustment",
                                          "description": "The number associated with the specified adjustment type. Required if using adjustment as action type.",
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "down": {
                                "type": "array",
                                "title": "Down",
                                "description": "Update scaling down settings",
                                "items": {
                                  "title": "Down scaling object",
                                  "type": "object",
                                  "required": [
                                    "metricName",
                                    "threshold",
                                    "namespace"
                                  ],
                                  "properties": {
                                    "policyName": {
                                      "title": "Policy Name",
                                      "description": "The policy name",
                                      "type": "string",
                                      "example": "scale_down_1"
                                    },
                                    "source": {
                                      "title": "Source",
                                      "description": "The source of the metric. Valid values: spectrum, stackdriver",
                                      "type": "string",
                                      "example": "stackdriver"
                                    },
                                    "metricName": {
                                      "title": "Metric Name",
                                      "description": "The name of the metric. Default value is instance/cpu/utilization. Required on scaling.down object",
                                      "type": "string",
                                      "example": "instance/disk/read_ops_count"
                                    },
                                    "statistic": {
                                      "title": "Statistic",
                                      "description": "The metric aggregator to return. Valid values: average, sum, min, max",
                                      "type": "string",
                                      "example": "average"
                                    },
                                    "unit": {
                                      "title": "Unit",
                                      "description": "The unit for the alarmâs associated metric.",
                                      "enum": [
                                        "seconds",
                                        "microseconds",
                                        "milliseconds",
                                        "bytes",
                                        "kilobytes",
                                        "megabytes",
                                        "gigabytes",
                                        "terabytes",
                                        "bits",
                                        "kilobits",
                                        "megabits",
                                        "gigabits",
                                        "terabits",
                                        "percent",
                                        "count",
                                        "bytes/second",
                                        "kilobytes/second",
                                        "megabytes/second",
                                        "gigabytes/second",
                                        "terabytes/second",
                                        "bits/second",
                                        "kilobits/second",
                                        "megabits/second",
                                        "gigabits/second",
                                        "terabits/second",
                                        "count/second",
                                        "none"
                                      ],
                                      "type": "string",
                                      "example": "percent"
                                    },
                                    "threshold": {
                                      "title": "Threshold",
                                      "description": "The value against which the specified statistic is compared. Required on scaling.down object",
                                      "type": "integer",
                                      "example": 10000
                                    },
                                    "namespace": {
                                      "title": "Namespace",
                                      "description": "The namespace for the associated metric. Valid Value: compute Required on scaling.down object",
                                      "type": "string",
                                      "example": "compute"
                                    },
                                    "period": {
                                      "title": "Period",
                                      "description": "The period in seconds over which the statistic is applied",
                                      "type": "integer",
                                      "example": 300
                                    },
                                    "evaluationPeriods": {
                                      "title": "Evaluation Periods",
                                      "description": "The number of periods over which data is compared to the specified threshold.",
                                      "type": "integer",
                                      "default": 1,
                                      "example": 1
                                    },
                                    "cooldown": {
                                      "title": "Cooldown",
                                      "description": "The amount of time (in seconds) after a scaling activity completes before any further trigger-related scaling activities can start.",
                                      "type": "integer",
                                      "default": 300,
                                      "example": 300
                                    },
                                    "operator": {
                                      "title": "Operator",
                                      "description": "The operator to use in order to determine if the scaling policy is applicable. / Valid Values: gte (greater than or equal to) lte (lower than or equal to)",
                                      "type": "string",
                                      "default": "lte",
                                      "example": "gte"
                                    },
                                    "dimensions": {
                                      "title": "Dimensions",
                                      "description": "he short labels names for filtering associated metric. For example, the metric instance/disk/read_ops_count is associated with the label compute.googleapis.com/storage_type, the short label name is storage_type",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "title": "Name",
                                            "description": "The short labels names for filtering associated metric. For example, the metric instance/disk/read_ops_count is associated with the label compute.googleapis.com/storage_type, the short label name is storage_type Required on scaling.down.dimensions object",
                                            "type": "string",
                                            "example": "storage_type"
                                          },
                                          "value": {
                                            "title": "Value",
                                            "description": "Value of selected metric.can be Null",
                                            "type": "string",
                                            "example": "pd-standard"
                                          }
                                        }
                                      }
                                    },
                                    "action": {
                                      "title": "Action",
                                      "description": "Update the action to take when scale up is needed",
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "title": "Type",
                                          "description": "The type of the action to take when scale up is needed. Valid value: adjustment Required on scaling.down.action object",
                                          "type": "string",
                                          "example": "adjustment"
                                        },
                                        "adjustment": {
                                          "title": "Adjustment",
                                          "description": "The number associated with the specified adjustment type. Required if using adjustment as action type",
                                          "type": "integer",
                                          "example": 1
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "thirdPartiesIntegration": {
                            "title": "Third Parties Integration Object",
                            "description": "Third Parties Integration Configuration",
                            "type": "object",
                            "properties": {
                              "dockerSwarm": {
                                "title": "DockerSwarm ThirdPartiesIntegration Object",
                                "description": "Properties to connect docker swarm.",
                                "type": "object",
                                "properties": {
                                  "masterHost": {
                                    "title": "Master Host",
                                    "description": "Docker swarm master hostname",
                                    "type": "string",
                                    "example": "swarm1.swarm.com"
                                  },
                                  "masterPort": {
                                    "title": "Master Port",
                                    "description": "Docker swarm master port",
                                    "type": "integer",
                                    "example": 1234
                                  }
                                }
                              },
                              "gke": {
                                "title": "GKE ThirdPartiesIntegration Object",
                                "description": "Properties for GKE integration",
                                "type": "object",
                                "properties": {
                                  "autoUpdate": {
                                    "title": "Auto Update",
                                    "description": "If set to True - we check every 30 minutes if the gke version of the original node pool of the elastigroup was imported from - changed. if so - we re import the new configurations",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "autoScale": {
                                    "title": "Auto Scale",
                                    "description": "Properties for GKE integration auto scaling",
                                    "type": "object",
                                    "properties": {
                                      "isEnabled": {
                                        "title": "Is Enabled",
                                        "description": "Flag to enable / disable the auto scaling",
                                        "type": "boolean",
                                        "example": true,
                                        "default": false
                                      },
                                      "isAutoConfig": {
                                        "title": "Is Auto Config",
                                        "description": "Flag to enable / disable the headroom configuration",
                                        "type": "boolean",
                                        "example": false
                                      },
                                      "cooldown": {
                                        "title": "Cooldown",
                                        "description": "Set cooldown (in minutes)",
                                        "type": "integer",
                                        "example": 300
                                      },
                                      "headroom": {
                                        "title": "Headroom",
                                        "description": "Set headroom configuration",
                                        "type": "object",
                                        "properties": {
                                          "cpuPerUnit": {
                                            "title": "CPU Per Unit",
                                            "description": "Optionally configure the number of CPUs to allocate the headroom.",
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "memoryPerUnit": {
                                            "title": "Memory Per Unit",
                                            "description": "Optionally configure the number of memory (MiB) to allocate the headroom.",
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "numOfUnits": {
                                            "title": "Number Of Units",
                                            "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.",
                                            "type": "integer",
                                            "example": 1
                                          }
                                        }
                                      },
                                      "down": {
                                        "title": "Down",
                                        "description": "Set scale down properties",
                                        "type": "object",
                                        "properties": {
                                          "evaluationPeriods": {
                                            "title": "Evaluation Periods",
                                            "description": "Set number of evaluation periods for scale down. minimum value is: 3",
                                            "type": "integer",
                                            "example": 5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "clusterIdentifier": {
                                    "title": "ClusterIdentifier",
                                    "description": "Cluster ID",
                                    "type": "string",
                                    "example": "gke-clust-1"
                                  },
                                  "location": {
                                    "title": "Location",
                                    "description": "Instance Location",
                                    "type": "string",
                                    "example": "us-west1"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/gke/import": {
      "post": {
        "summary": "Import GKE Cluster",
        "description": "Import an existing GKE cluster to Elastigroup.",
        "operationId": "elastigroupGcpGkeImport",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "clusterId",
            "required": true,
            "description": "The GKE Cluster identifier\n",
            "schema": {
              "type": "string"
            },
            "example": "myGKECluster"
          },
          {
            "in": "query",
            "name": "clusterLocation",
            "required": true,
            "description": "The location of the cluster. Enter the desired zone for zonal GKE clusters or the region for regional GKE clusters.\n",
            "schema": {
              "type": "string"
            },
            "example": "us-central1-a"
          },
          {
            "in": "query",
            "name": "nodePoolName",
            "required": false,
            "description": "Set the node pool to import\n",
            "schema": {
              "type": "string"
            },
            "example": "somePoolName"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Elastigroup GKE Import Wrapper",
                    "required": [
                      "group"
                    ],
                    "properties": {
                      "group": {
                        "type": "object",
                        "title": "GCP Elastigroup",
                        "properties": {
                          "preemptiblePercentage": {
                            "type": "integer",
                            "description": "Preemptive VMs ratio in the Elastigroup",
                            "example": 70,
                            "default": 100
                          },
                          "name": {
                            "type": "string",
                            "example": "myGKE",
                            "description": "Name of the Elastigroup"
                          },
                          "capacity": {
                            "type": "object",
                            "description": "Minimum, maximum and target number of vms in the Elastigroup",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 0,
                                "description": "Minimum number of VMs to maintain in the Elastigroup"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 2,
                                "description": "Maximum number of VMs to maintain in the Elastigroup"
                              },
                              "target": {
                                "type": "integer",
                                "example": 1,
                                "description": "Desired number of VMs to maintain in the Elastigroup"
                              }
                            }
                          },
                          "instanceTypes": {
                            "type": "object",
                            "description": "Types and locations of VMs to be utilized",
                            "properties": {
                              "ondemand": {
                                "type": "string",
                                "example": "n1-highcpu-32",
                                "description": "On-demand VM type to utilize in case such VM is launched"
                              },
                              "preemtible": {
                                "type": "array",
                                "description": "On-demand VM types to utilize in case such VM(s) is/are launched",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "n1-standard-1",
                                    "n1-standard-2"
                                  ]
                                }
                              }
                            }
                          },
                          "availabilityZones": {
                            "type": "array",
                            "description": "Availability Zone pool to be use for this group",
                            "items": {
                              "type": "string",
                              "example": [
                                "us-central1-a",
                                "us-central1-b"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1gcp~1gce~1group/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:importGke"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/status": {
      "get": {
        "summary": "Get Elastigroup Status",
        "description": "Get the status for all instances that are memebers of the Elastigroup",
        "operationId": "elastigroupGcpGetStatus",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Group Status Object",
                                "type": "object",
                                "properties": {
                                  "privateIpAddress": {
                                    "type": "string"
                                  },
                                  "machineType": {
                                    "type": "string"
                                  },
                                  "zone": {
                                    "type": "string"
                                  },
                                  "instanceName": {
                                    "type": "string"
                                  },
                                  "lifeCycle": {
                                    "type": "string"
                                  },
                                  "statusName": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/events": {
      "get": {
        "summary": "List Activity Events",
        "description": "Get all activity events for the Elastigroup",
        "operationId": "elastigroupGcpGetActivityEvents",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "fromDate",
            "example": "2019-05-17",
            "required": true,
            "description": "Get items on or after this date (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "example": "2019-05-25",
            "required": true,
            "description": "Get items on or before this date (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Activity Event Object",
                                "type": "object",
                                "properties": {
                                  "groudId": {
                                    "type": "string",
                                    "example": "sig-576g654"
                                  },
                                  "eventType": {
                                    "type": "string",
                                    "example": "RollFinished"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2018-03-01T09:58:16.000+0000"
                                  },
                                  "subEvents": {
                                    "type": "array",
                                    "items": {
                                      "title": "Activity Sub-Event Object",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "example": "sbgd-1234567"
                                        },
                                        "groupId": {
                                          "type": "string",
                                          "example": "sig-576g654"
                                        },
                                        "currentBatch": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "numOfBatches": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "gracePeriod": {
                                          "type": "integer",
                                          "example": 300
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "rollInfo"
                                        },
                                        "status": {
                                          "type": "string",
                                          "example": null
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "example": "2018-03-01T09:58:16.000+0000"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:event"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/log": {
      "get": {
        "summary": "Get Elastilog",
        "description": "Fetch a group's Elastilog",
        "operationId": "elastigroupGcpFetchGroupElastilog",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Maximum number of items to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 500,
              "example": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "title": "Elastilog Object",
                                "type": "object",
                                "properties": {
                                  "message": {
                                    "type": "string",
                                    "example": "Group sig-e0a2bd7c successfully created."
                                  },
                                  "severity": {
                                    "type": "string",
                                    "enum": [
                                      "ALL",
                                      "INFO",
                                      "DEBUG",
                                      "WARN"
                                    ],
                                    "example": "INFO"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "patten": null,
                                    "example": "2019-05-19T14:34:15.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:log"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/scale/up": {
      "put": {
        "summary": "Scale Up",
        "description": "Add instances to the Elastigroup",
        "operationId": "elastigroupGcpScaleUp",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "description": "The number of instances to add to the group",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Preemptible object",
                                "properties": {
                                  "newPreemptibles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-9da52709"
                                        }
                                      }
                                    }
                                  },
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-1591c0b6"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:preemptible"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/scale/down": {
      "put": {
        "summary": "Scale Down",
        "description": "Remove instances from the Elastigroup",
        "operationId": "elastigroupGcpScaleDown",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "adjustment",
            "description": "The number of instances to remove from the group",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Scale object",
                                "properties": {
                                  "victimPreemptibles": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Victim Preemptible Object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-4ecd5037"
                                        },
                                        "zone": {
                                          "type": "string",
                                          "example": "asia-east1-b"
                                        },
                                        "machineType": {
                                          "type": "string",
                                          "example": "N1_STANDARD_2"
                                        }
                                      }
                                    }
                                  },
                                  "victimInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "Victim Instance Object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-31e0596a"
                                        },
                                        "zone": {
                                          "type": "string",
                                          "example": "europe-west1-c"
                                        },
                                        "machineType": {
                                          "type": "string",
                                          "example": "N1_STANDARD_1"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:scale"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/costs": {
      "get": {
        "summary": "Get Elastigroup Costs",
        "description": "Get financial information on a specific Elastigroup\n",
        "operationId": "elastigroupGcpCosts",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Group Cost Object",
                                "properties": {
                                  "running": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 294.3
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "hours"
                                      }
                                    }
                                  },
                                  "savings": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 60.5263
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage"
                                      }
                                    }
                                  },
                                  "costs": {
                                    "type": "object",
                                    "properties": {
                                      "actual": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 8.829
                                      },
                                      "potential": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 22.3668
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:costs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/roll": {
      "get": {
        "summary": "List Deployments",
        "description": "Get all of the deployments for a specific Elastigroup, and their status\n",
        "operationId": "elastigroupGcpListDeployments",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Group Deploy Object",
                    "required": [
                      "batchSizePercentage",
                      "gracePeriod"
                    ],
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "example": 20,
                        "description": "(in percentage) the batch size of the deployment, i.e.: how many instances to replace in each batch\n"
                      },
                      "gracePeriod": {
                        "type": "integer",
                        "example": 300,
                        "description": "(in seconds) the time until an instance becomes healthy in the load balancer\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "title": "Group Roll Object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "sbgd-01f01234"
                                      },
                                      "status": {
                                        "type": "string",
                                        "example": "STARTING"
                                      },
                                      "currentBatch": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "numOfBatches": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "progress": {
                                        "type": "object",
                                        "properties": {
                                          "unit": {
                                            "type": "string",
                                            "example": "percentage"
                                          },
                                          "value": {
                                            "type": "integer",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "$ref": "#/paths/~1aws~1emr~1mrScaler/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/1"
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Start Deployment",
        "description": "Deploy the Elastigroup: Triggers a Blue/Green deployment that replaces the existing instances in the Elastigroup\n",
        "operationId": "elastigroupGcpDeploy",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/get/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/allOf/0"
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:group:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/roll/{rollId}": {
      "get": {
        "summary": "Get Deployment",
        "description": "Get a specific deployment's status\n",
        "operationId": "elastigroupGcpDeployStatus",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "rollId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The deployment ID to query\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Stop Deployment",
        "description": "Stop an existing deployment\n",
        "operationId": "elastigroupGcpStopDeployment",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll~1%7BrollId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "STOPPED",
                        "description": "in this case, always set to \"STOPPED\""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1roll/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/group/{groupId}/deatchInstances": {
      "put": {
        "summary": "Detach Instances",
        "description": "Detach instances from an Elastigroup\n",
        "operationId": "elastigroupGcpDetachInstances",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "Detach Instances Object",
                    "properties": {
                      "instancesToDetach": {
                        "type": "array",
                        "description": "The names of the instances to detach from the group.",
                        "example": [
                          "sin-44c02836",
                          "sin-ddf71dfa"
                        ]
                      },
                      "shouldTerminateInstances": {
                        "type": "boolean",
                        "description": "Indicates whether to terminate the instances or not."
                      },
                      "shouldDecrementTargetCapacity": {
                        "type": "boolean",
                        "description": "Indicates whether to decrement the capacity of the group, so no new instance will be launched instead of the detached one.\n"
                      },
                      "drainingTimeout": {
                        "type": "integer",
                        "description": "(Applies only if shouldTerminateInstances is on) The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the group's draining timeout applies.\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "kind": {
                              "example": "spotinst:gcp:gce:detachInstances"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/instance/{instanceId}": {
      "get": {
        "summary": "Get Instance Status",
        "description": "Get the current instance status. Possible status values: `ACTIVE`, `TERMINATING`\n",
        "operationId": "elastigroupGcpGetInstanceStatus",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "instanceId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "GCP Instance ID\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Instance Status Object",
                                "properties": {
                                  "instanceName": {
                                    "type": "string",
                                    "example": "sin-123"
                                  },
                                  "lifeCycleState": {
                                    "type": "string",
                                    "enum": [
                                      "ACTIVE",
                                      "TERMINATING"
                                    ],
                                    "example": "ACTIVE"
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "10.0.0.1"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-123"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:gcp:gce:instance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/instance/{instanceId}/lock": {
      "post": {
        "summary": "Lock Instance",
        "description": "Set termination protection for a specific instance.\n",
        "operationId": "elastigroupGcpLockInstance",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1instance~1%7BinstanceId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "ttlInMinutes",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Specify a TTL (in minutes) for this lock, i.e.: for how long the protection will be valid for.\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/gce/instance/{instanceId}/unlock": {
      "post": {
        "summary": "Unlock Instance",
        "description": "Remove termination protection for a specific instance.\n",
        "operationId": "elastigroupGcpUnlockInstance",
        "tags": [
          "Elastigroup GCP"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1instance~1%7BinstanceId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster": {
      "get": {
        "summary": "List Clusters",
        "description": "Get the configurations for all Ocean cluster in the specified account.\n",
        "operationId": "OceanECSClusterList",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create Cluster",
        "description": "Create a new Ocean ECS cluster in the specified account.\n",
        "operationId": "OceanECSClusterCreate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "title": "ECS Ocean",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "o-12345abc",
                            "readOnly": true,
                            "description": "Ocean Cluster ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Ocean::my-elastigroup-name",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "clusterName": {
                            "type": "string",
                            "example": "my-ECS-cluster-name",
                            "description": "ECS cluster name\n"
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "Ocean AutoScaler",
                            "description": "The Ocean Kubernetes Autoscaler.\n",
                            "required": [
                              "isEnabled"
                            ],
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes Autoscaler.\n",
                                "example": true
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "Cooldown period between scaling actions. Value should be cooldown period in seconds, greater than 180\n",
                                "example": 300
                              },
                              "attributes": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "example": "the_key"
                                  },
                                  "value": {
                                    "type": "string",
                                    "axample": "the_value"
                                  }
                                }
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n",
                                "properties": {
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory in GiB units that can be allocated to the cluster. minimum value: 1.\n",
                                    "example": 1
                                  },
                                  "maxVcpu": {
                                    "type": "integer",
                                    "description": "The maximum cpu in vCpu units that can be allocated to the cluster. minimum value: 1.\n",
                                    "example": 1
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Auto Scaling scale down operations.\n",
                                "properties": {
                                  "evaluationPeriods": {
                                    "type": "integer",
                                    "example": 4
                                  },
                                  "maxScaleDownPercentage": {
                                    "type": "integer",
                                    "description": "The maximum % of nodes that will be scaled down at once out of the total amount of potential nodes to scale down.\nexample: if 10 nodes can be scaled down, only 5 will be given 50% in this parameter.\nthe other 50% will be scaled down in the next autoscaling iteration.\n",
                                    "example": 20
                                  }
                                }
                              },
                              "headroom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                "properties": {
                                  "cpuPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the number of CPUs to allocate per headroom unit. CPUs are denoted in CPU units, where 1024 units = 1 vCPU.\n",
                                    "example": 2048
                                  },
                                  "memoryPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the amount of memory (MiB) to allocate per headroom unit.\n",
                                    "example": 3
                                  },
                                  "numOfUnits": {
                                    "type": "integer",
                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                    "example": 2
                                  }
                                }
                              },
                              "isAutoConfig": {
                                "type": "boolean",
                                "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.\n",
                                "example": false
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Optionally set the auto-headroom percentage. Set a number between 0-200 to control the headroom % of the cluster. Relevant when isAutoConfig=true.\n",
                                "example": 20
                              },
                              "shouldScaleDownNonServiceTasks": {
                                "type": "boolean",
                                "description": "Option to scale down non-service tasks. If not set, Ocean does not scale down standalone tasks.\n",
                                "default": false,
                                "example": true
                              }
                            }
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Select the region for the Ocean cluster to run in.\n"
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Capacity Units",
                            "description": "Capacity specifications for the Ocean cluster.\n",
                            "required": [
                              "target",
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 1,
                                "description": "The bottom limit of instances that the cluster can scale down to.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "example": 10,
                                "description": "The upper limit of instances that the cluster can scale up to.\n",
                                "default": 1000
                              },
                              "target": {
                                "type": "integer",
                                "example": 5,
                                "description": "Number of instances to launch and maintain in cluster.h\n"
                              },
                              "unit": {
                                "type": "string",
                                "example": "instance",
                                "default": "instance",
                                "enum": [
                                  "weight",
                                  "instance"
                                ],
                                "description": "Defines how Ocean scales. Either by number of instances or by instance weights. If `weight` is used then `weightedCapacity` is required to be set for all instance types used for this Ocean.\n"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean Strategy",
                            "description": "Strategy Configuration of the Ocean cluster\n",
                            "required": [
                              "utilizeReservedInstances",
                              "fallbackToOd",
                              "spotPercentage",
                              "drainingTimeout"
                            ],
                            "properties": {
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "description": "If reserved instances exist, Ocean will utilize them before launching spot instances.\n",
                                "example": true,
                                "default": "fale"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n",
                                "example": true,
                                "default": true
                              },
                              "spotPercentage": {
                                "type": "integer",
                                "example": 100
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "description": "The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the default draining timeout will be used.\n",
                                "example": 200
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "Ocean Compute",
                            "required": [
                              "subnetIds",
                              "launchSpecification"
                            ],
                            "properties": {
                              "subnetIds": {
                                "type": "array",
                                "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public IP.\n",
                                "items": {
                                  "type": "string",
                                  "example": "subnet-1234abcd"
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "description": "Launch specifications allow you to configure multiple workload types on the same ocean cluster.\n",
                                "required": [
                                  "imageId",
                                  "securityGroupIds",
                                  "iamInstanceProfile"
                                ],
                                "properties": {
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-123456789abcdefgh"
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "description": "One or more Security Group IDs.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "sg-abcdefgh123456789"
                                    }
                                  },
                                  "iamInstanceProfile": {
                                    "type": "object",
                                    "description": "The instance profile iamRole.\n",
                                    "properties": {
                                      "arn": {
                                        "type": "string",
                                        "description": "The iamRole arn.\n",
                                        "example": "my-arn"
                                      }
                                    }
                                  },
                                  "blockDeviceMappings": {
                                    "type": "array",
                                    "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes.\\\nThis parameter and rootVolumeSize cannot be in the spec at the same time.\\\nThis parameter can be null, but if not null, it must contain at least one block device.\n",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "description": "Set device name.\n",
                                          "example": "/dev/xvda"
                                        },
                                        "ebs": {
                                          "type": "object",
                                          "description": "Set EBS properties.\n",
                                          "properties": {
                                            "throughput": {
                                              "type": "integer",
                                              "minimum": 125,
                                              "maximum": 1000,
                                              "example": 125,
                                              "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=âgp3â.\n"
                                            },
                                            "deleteOnTermination": {
                                              "type": "boolean",
                                              "description": "Flag to delete the EBS on instance termination.\n",
                                              "example": false
                                            },
                                            "encrypted": {
                                              "type": "boolean",
                                              "example": false
                                            },
                                            "iops": {
                                              "type": "integer",
                                              "description": "Must be greater than or equal to 0.\n",
                                              "example": 1
                                            },
                                            "kmsKeyId": {
                                              "type": "string",
                                              "example": "alias/aws/ebs"
                                            },
                                            "snapshotId": {
                                              "type": "string",
                                              "example": "snap-abcdefghi111110"
                                            },
                                            "volumeType": {
                                              "type": "string",
                                              "description": "Set volume type.\n",
                                              "example": "gp2"
                                            },
                                            "volumeSize": {
                                              "type": "integer",
                                              "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize. You must use one of the other. Volume size should be greater or equal than the size configured in the AMI.\n"
                                            },
                                            "dynamicVolumeSize": {
                                              "type": "object",
                                              "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                              "properties": {
                                                "baseSize": {
                                                  "type": "integer",
                                                  "required": true,
                                                  "description": "Initial size per volume.\n",
                                                  "example": 50
                                                },
                                                "resource": {
                                                  "type": "string",
                                                  "required": true,
                                                  "example": "CPU"
                                                },
                                                "sizePerResourceUnit": {
                                                  "type": "integer",
                                                  "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be: 90GB\n",
                                                  "example": 20
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "optimizeImage": {
                                "type": "object",
                                "properties": {
                                  "shouldOptimizeEcsAmi": {
                                    "type": "boolean",
                                    "example": "true"
                                  },
                                  "performAt": {
                                    "type": "string",
                                    "example": "never",
                                    "description": "needs to be one of the following values: never/always/timeWindow. If performAt = timeWindow, the time windows array should contain at least one time window.\n"
                                  },
                                  "timeWindows": {
                                    "type": "array",
                                    "description": "Restrict to time window regex.\n",
                                    "items": {
                                      "example": "['Sun:02:00-Sun:12:00', 'Wed:01:01-Fri:02:03']"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Ocean Scheduling",
                            "description": "",
                            "required": [
                              "tasks"
                            ],
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "description": "The scheduling tasks for the cluster.\n",
                                "required": [
                                  "isEnabled",
                                  "cronExpression",
                                  "taskType"
                                ],
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run. Required for cluster.scheduling.tasks object\n",
                                      "example": false
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "description": "A valid cron expression. For example : \" * * * * * \".The cron is running in UTC time zone and is in Unix cron format [Cron Expression Validator Script](https://www.unix.com/man-page/linux/5/crontab/). Only one of âfrequency' or âcronExpression' should be used at a time. Required for cluster.scheduling.tasks object\n"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}": {
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for a specified Ocean cluster.\n",
        "operationId": "OceanECSClusterGet",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "oceanClusterId",
            "example": "o-12345abc",
            "description": "Ocean Cluster ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, excluding the Region and ID. This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanECSClusterUpdate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean cluster.\n",
        "operationId": "OceanECSClusterDelete",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{EcsClusterName}/import": {
      "post": {
        "summary": "Import Cluster",
        "description": "Create Ocean cluster object from an existing ECS cluster with at least one container instance to be used as input for create cluster.<br> **This route will not register the ECS cluster to Ocean.**\n",
        "operationId": "OceanECSClusterImport",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "EcsClusterName",
            "example": "ecsName",
            "description": "ECS Cluster name\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "region": {
                        "type": "string",
                        "example": "us-east-1",
                        "description": "The region that the ECS cluster is running at.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "oceanName",
                        "description": "The name for the new Ocean cluster object. <br> If the name is not provided the default will be *Ocean_{EcsClusterName}*\n"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import Ocean ECS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/cluster/my-ECS-cluster-name/import"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "cluster"
                                ],
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "title": "ECS Ocean",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "my-Ocean-ECS-cluster",
                                        "description": "The name of the Ocean cluster provided in the request, if not provided in the import request it will be Ocean_{EcsClusterName}.\n"
                                      },
                                      "clusterName": {
                                        "type": "string",
                                        "example": "my-ECS-cluster-name",
                                        "description": "ECS cluster name\n"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "us-east-1",
                                        "description": "The region for the Ocean cluster to run - the same as the provided ECS cluster).\n"
                                      },
                                      "compute": {
                                        "type": "object",
                                        "title": "Ocean Compute",
                                        "properties": {
                                          "subnetIds": {
                                            "type": "array",
                                            "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public IP.\n",
                                            "items": {
                                              "type": "string",
                                              "example": "subnet-1234abcd"
                                            }
                                          },
                                          "launchSpecification": {
                                            "type": "object",
                                            "description": "Launch specifications allow you to configure multiple workload types on the same ocean cluster.\n",
                                            "properties": {
                                              "imageId": {
                                                "type": "string",
                                                "example": "ami-123456789abcdefgh"
                                              },
                                              "securityGroupIds": {
                                                "type": "array",
                                                "description": "One or more Security Group IDs.\n",
                                                "items": {
                                                  "type": "string",
                                                  "example": "sg-abcdefgh123456789"
                                                }
                                              },
                                              "keyPair": {
                                                "type": "string",
                                                "example": "dev-keypair"
                                              },
                                              "userData": {
                                                "type": "string",
                                                "example": "userData"
                                              },
                                              "iamInstanceProfile": {
                                                "type": "object",
                                                "description": "The instance profile iamRole.\n",
                                                "properties": {
                                                  "arn": {
                                                    "type": "string",
                                                    "description": "The iamRole arn.\n",
                                                    "example": "my-arn"
                                                  }
                                                }
                                              },
                                              "tags": {
                                                "type": "object",
                                                "description": "AWS tags from EC2 instance registered as container instance.\n",
                                                "properties": {
                                                  "tagKey": {
                                                    "type": "string",
                                                    "example": "env"
                                                  },
                                                  "tagValue": {
                                                    "type": "string",
                                                    "example": "dev"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{OCEAN_ID}/log": {
      "summary": "Ocean for AWS ECS",
      "get": {
        "summary": "Fetch Elastilog",
        "description": "Fetch an Ocean Cluster's log\n",
        "operationId": "oceanEcsFetchLog",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "fromDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "data values following either a date format (yyyy-mm-dd ; 2016-11-20) or ms (1494751821472)\n"
          },
          {
            "in": "query",
            "name": "toDate",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "data values following either a date format (yyyy-mm-dd ; 2016-11-20) or ms (1494751821472)\n"
          },
          {
            "in": "query",
            "name": "LIMIT",
            "description": "Maximum number of lines to extract in a response. Default: 500\n",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "default": 500,
            "max": 1000,
            "example": 200
          },
          {
            "in": "query",
            "name": "SEVERITY",
            "description": "Severity of log entries to extract. Valid Values: ALL, INFO, DEBUG, WARN. Default: ALL\n",
            "schema": {
              "type": "string"
            },
            "required": false,
            "default": "ALL",
            "enum": [
              "ALL",
              "INFO",
              "DEBUG",
              "WARN"
            ],
            "example": "INFO"
          },
          {
            "in": "query",
            "name": "resourceId",
            "example": "i-12345678",
            "description": "Filter extracted log entries for a specific resource id. Default: Null\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique ID associated with this request\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/aws/ecs/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response package that includes, status, type and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:cluster:log"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Instances Terminated - ECS Autoscaler ,Terminated 1, List of instances: [i-0914721d46ebbabb2]",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            },
                            {
                              "message": "Instances: [i-0914721d46ebbabb2] have been detached. Reason: Auto scale",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:11.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "2"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "get": {
        "summary": "Fetch Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster.\n",
        "operationId": "oceanEcsGetRightSizingRecommend",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Right Sizing Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "suggestedMemory": {
                                    "type": "integer",
                                    "example": 2
                                  },
                                  "requestedMemory": {
                                    "type": "integer",
                                    "example": 100
                                  },
                                  "serviceName": {
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "sg-test"
                                  },
                                  "suggestedCpu": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "requestedCpu": {
                                    "type": "integer",
                                    "example": 128
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:cluster:rightSizing:resourceSuggestion"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/import": {
      "post": {
        "summary": "Upgrade Elastigroup to Ocean",
        "description": "Upgrade an Elastigroup with ECS integration into Ocean for ECS cluster.\n",
        "operationId": "oceanEcsUpgradeFromEG",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "groupId",
            "example": "sig-1234abcd",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The Elastigroup ID to upgrade.\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/roll": {
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying launchSpecIds or instanceIds. Performing this request will start the roll immediately, by defined batches. Note that the first response for a successful request will notify for starting a roll. In order to check the status of a roll, you can use the [GET Roll API](https://docs.spot.io/api//#operation/oceanEcsRollGetSingleRoll) using the roll ID.\n",
        "operationId": "oceanEcsRollInit",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "oneOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "batchSizePercentage": {
                                "type": "integer",
                                "description": "Value in % to set size of batch in roll. Valid values are 0-100\n",
                                "example": 20
                              }
                            }
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/requestBody/content/application~1json/schema/allOf/1"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/properties/roll/oneOf/0/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/requestBody/content/application~1json/schema/allOf/1"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "instanceIds": {
                                "type": "array",
                                "description": "List of instance IDs to be rolled. Each ID is a string. instanceIds can be null. Cannot be used together with launchSpecIds.\n",
                                "items": {
                                  "type": "string",
                                  "example": "i-0003a99ffb566f039, i-0567a99ffb566f765"
                                }
                              }
                            }
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/properties/roll/oneOf/0/allOf/0"
                          },
                          {
                            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/requestBody/content/application~1json/schema/allOf/1"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "launchSpecIds": {
                                "type": "array",
                                "description": "List of launch specification IDs to be rolled. Each ID is a string. launchSpecIds can be null. Cannot be used together with instanceIds.\n",
                                "items": {
                                  "type": "string",
                                  "example": "ols-76694a7d, ols-56694a76"
                                }
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "List rolls of an Ocean cluster.\n",
        "operationId": "oceanEcsRollListRolls",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "readOnly": true,
                                            "example": "scr-1234abcd"
                                          },
                                          "currentBatch": {
                                            "type": "integer",
                                            "readOnly": true,
                                            "example": 1,
                                            "description": "Batch number that is currenlty being deployed\n"
                                          },
                                          "numOfBatches": {
                                            "type": "integer",
                                            "readOnly": true,
                                            "example": 2,
                                            "description": "Total number of batches the deployment will process\n"
                                          },
                                          "progress": {
                                            "type": "object",
                                            "readOnly": true,
                                            "properties": {
                                              "unit": {
                                                "type": "string",
                                                "example": "percentage"
                                              },
                                              "value": {
                                                "type": "integer",
                                                "example": 10
                                              }
                                            }
                                          },
                                          "oceanId": {
                                            "type": "string",
                                            "example": "o-abcd1234",
                                            "readOnly": true,
                                            "description": "The Ocean ECS cluster the deployment is executing on\n"
                                          },
                                          "createdAt": {
                                            "type": "string",
                                            "readOnly": true,
                                            "format": "date-time",
                                            "example": "2019-06-03T08:13:08.000Z",
                                            "description": "A timestamp of the roll creation\n"
                                          },
                                          "updatedAt": {
                                            "type": "string",
                                            "readOnly": true,
                                            "format": "date-time",
                                            "example": "2019-06-10T15:06:13.000Z",
                                            "description": "A timestamp of the latest roll update\n"
                                          }
                                        }
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/requestBody/content/application~1json/schema/allOf/0"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/requestBody/content/application~1json/schema/allOf/1"
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/oneOf/0/allOf/0"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/requestBody/content/application~1json/schema/allOf/0"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/requestBody/content/application~1json/schema/allOf/1"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/properties/roll/oneOf/1/allOf/2"
                                      }
                                    ]
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/oneOf/0/allOf/0"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/requestBody/content/application~1json/schema/allOf/0"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll~1%7BROLL_ID%7D/put/requestBody/content/application~1json/schema/allOf/1"
                                      },
                                      {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/post/requestBody/content/application~1json/schema/properties/roll/oneOf/2/allOf/2"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:cluster:roll"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/roll/{ROLL_ID}": {
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster. Performing the request will stop the next batch in a roll.\n",
        "operationId": "oceanEcsRollUpdate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BOCEAN_ID%7D~1roll~1%7BROLL_ID%7D/get/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Set status to roll.\n",
                        "example": "STOPPED"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Add a comment description for the roll. comment should be limit to 256 chars.\n",
                        "example": "This is why I deployed my cluster."
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for roll of an Ocean cluster.\n",
        "operationId": "oceanEcsRollGetSingleRoll",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BOCEAN_ID%7D~1roll~1%7BROLL_ID%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D~1roll/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/launchSpec": {
      "post": {
        "summary": "Create Launch Spec",
        "description": "Create a new Ocean ECS LaunchSpecification in the specified account.\n",
        "operationId": "OceanECSLaunchSpecCreate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": true,
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "ols-1234abcd"
                          },
                          "oceanId": {
                            "type": "string",
                            "required": true,
                            "description": "The Ocean cluster ID. required for launchSpec create.\n",
                            "example": "o-1234abcd"
                          },
                          "name": {
                            "type": "string",
                            "required": true,
                            "description": "Set launch specifications name\n",
                            "example": "mySpecLauncher"
                          },
                          "imageId": {
                            "type": "string",
                            "required": true,
                            "description": "Set image ID. Can be null\n",
                            "example": "img2"
                          },
                          "userData": {
                            "type": "string",
                            "format": "byte",
                            "description": "Base64-encoded MIME user data to make available to the instances.\n",
                            "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                          },
                          "securityGroupIds": {
                            "type": "array",
                            "description": "Set security groups. Each element in array should be security group ID\n",
                            "items": {
                              "type": "string",
                              "example": "sg1, sg3"
                            }
                          },
                          "instanceTypes": {
                            "type": "array",
                            "description": "A array of supported instance types for the Launch Spec\n",
                            "items": {
                              "type": "string",
                              "example": "c3.2xlarge, c4.2xlarge"
                            }
                          },
                          "subnetIds": {
                            "type": "array",
                            "description": "Set subnets in launchSpec. Each element in the array should be a subnet ID.\n",
                            "items": {
                              "type": "string",
                              "example": "subnet-01234566789abcdef, subnet-9876543210ghijkl"
                            }
                          },
                          "iamInstanceProfile": {
                            "type": "array",
                            "description": "The instance profile iamRole object\n",
                            "items": {
                              "oneOf": [
                                {
                                  "arn": null,
                                  "title": "arn",
                                  "type": "string",
                                  "description": "The iamRole arn. If set - do not set launchSpec.iamInstanceProfile.name\n",
                                  "example": "arn:aws:iam::123456789123:instance-profile"
                                },
                                {
                                  "name": null,
                                  "title": "name",
                                  "type": "string",
                                  "description": "The iamRole name. If set - do not set launchSpec.iamInstanceProfile.arn\n",
                                  "example": "my-iamInstance-Ptofile"
                                }
                              ]
                            }
                          },
                          "attributes": {
                            "description": "Add attributes to cluster\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "Set attribute's key.\n",
                                  "required": true,
                                  "type": "string",
                                  "example": "key1"
                                },
                                "value": {
                                  "description": "Set attribute's value.\n",
                                  "required": true,
                                  "type": "string",
                                  "example": "value1"
                                }
                              }
                            }
                          },
                          "autoScale": {
                            "type": "object",
                            "properties": {
                              "headrooms": {
                                "description": "Set custom headroom per launch spec. provide list of launchSpec.autoscale.headrooms object\n",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cpuPerUnit": {
                                      "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU\n",
                                      "type": "integer",
                                      "example": 1024
                                    },
                                    "memoryPerUnit": {
                                      "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                      "type": "integer",
                                      "example": 512
                                    },
                                    "numOfUnits": {
                                      "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                      "type": "integer",
                                      "example": 2
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "List of kay-value pairs of tags\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tagKey": {
                                  "type": "string",
                                  "description": "Set the tag key\n",
                                  "example": "Creator"
                                },
                                "tagValue": {
                                  "type": "string",
                                  "description": "Set the tag value\n",
                                  "example": "John Doe"
                                }
                              }
                            }
                          },
                          "blockDeviceMappings": {
                            "type": "array",
                            "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes. This parameter and rootVolumeSize cannot be in the spec at the same time. This parameter can be null, but if not null, it must contain at least one block device.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "deviceName": {
                                  "type": "string",
                                  "description": "Set device name.\n",
                                  "example": "/dev/xvda"
                                },
                                "ebs": {
                                  "type": "object",
                                  "description": "Set EBS properties.\n",
                                  "properties": {
                                    "throughput": {
                                      "type": "integer",
                                      "minimum": 125,
                                      "maximum": 1000,
                                      "example": 125,
                                      "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=âgp3â.\n"
                                    },
                                    "deleteOnTermination": {
                                      "type": "boolean",
                                      "description": "Flag to delete the EBS on instance termination.\n",
                                      "example": false
                                    },
                                    "encrypted": {
                                      "type": "boolean",
                                      "example": false
                                    },
                                    "iops": {
                                      "type": "integer",
                                      "description": "Must be greater than or equal to 0.\n",
                                      "example": 1
                                    },
                                    "kmsKeyId": {
                                      "type": "string",
                                      "example": "alias/aws/ebs"
                                    },
                                    "snapshotId": {
                                      "type": "string",
                                      "example": "snap-abcdefghi111110"
                                    },
                                    "volumeType": {
                                      "type": "string",
                                      "description": "Set volume type.\n",
                                      "example": "gp2"
                                    },
                                    "volumeSize": {
                                      "type": "integer",
                                      "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize. You must use one of the other. Volume size should be greater or equal than the size configured in the AMI.\n"
                                    },
                                    "dynamicVolumeSize": {
                                      "type": "object",
                                      "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize. You must use one or the other.\n",
                                      "properties": {
                                        "baseSize": {
                                          "type": "integer",
                                          "required": true,
                                          "description": "Initial size per volume.\n",
                                          "example": 50
                                        },
                                        "resource": {
                                          "type": "string",
                                          "required": true,
                                          "example": "CPU"
                                        },
                                        "sizePerResourceUnit": {
                                          "type": "integer",
                                          "description": "Additional size per resource unit (in GB). For example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be: 90GB\n",
                                          "example": 20
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "restrictScaleDown": {
                            "type": "boolean",
                            "description": "When set to âTrueâ, launch specification container instances will be treated as if all tasks running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints). Therefore, Ocean will not scale container instances down unless empty.\n",
                            "example": false
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-03T08:13:08.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2019-06-10T15:06:13.000Z"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Launch Specs",
        "description": "Get all the custom launch configurations for all Ocean cluster in the specified account.\n",
        "operationId": "OceanECSLaunchSpecList",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS LaunchSpec Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0"
                                  }
                                ]
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/launchSpec/{OCEAN_LAUNCH_SPEC_ID}": {
      "get": {
        "summary": "Get Launch Spec",
        "description": "Get a specific custom launch configuration for an Ocean cluster in the specified account.\n",
        "operationId": "OceanECSLaunchSpecGet",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "OCEAN_LAUNCH_SPEC_ID",
            "description": "Ocean cluster launchSpec ID.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Launch Spec",
        "description": "Delete a specified launch specification in an Ocean cluster.\n",
        "operationId": "OceanECSLaunchSpecDelete",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "deleteContainerInstances",
            "type": "boolean",
            "description": "When set to \"true\", all instances belonging to the deleted launch specification will be drained, detached, and terminated.\n",
            "default": false,
            "example": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Launch Spec",
        "description": "Get a specific custom launch configuration for an Ocean cluster in the specified account.\n",
        "operationId": "OceanECSLaunchSpecUpdate",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D/put/parameters/2"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration": {
      "post": {
        "summary": "Import Fargate To Existing Ocean Cluster",
        "description": "Import a Fargate service into an existing Ocean ECS cluster.\nUpon Fargate service import, Spot clones the selected Fargate services and runs them with the same VPC & Subnet settings on EC2 Spot Instances.\nOcean will automatically and seamlessly predict and replaces Spot Instances before they are interrupted, ensuring the uptime of the cluster and providing cost-savings of up to 90% over Fargate-enabled ECS clusters.\n",
        "operationId": "oceanEcsFargateImportToExist",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "title": "config",
                    "properties": {
                      "services": {
                        "type": "array",
                        "description": "List of Fargate services by their names. Must contain at least one service\n",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "service_1",
                          "service_2"
                        ]
                      },
                      "simpleNewServiceNames": {
                        "type": "boolean",
                        "description": "Flag to align imported services names in the following format: sfm_\n",
                        "example": false,
                        "default": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean ECS Fargate Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "efm-d235b4d8"
                                  },
                                  "oceanId": {
                                    "type": "string",
                                    "example": "o-fgdfgdf"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "STARTING"
                                  },
                                  "config": {
                                    "type": "object",
                                    "properties": {
                                      "services": {
                                        "type": "array",
                                        "description": "List of Fargate services by their names. Must contain at least one service\n",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "service_1",
                                          "service_2"
                                        ]
                                      }
                                    }
                                  },
                                  "simpleNewServiceNames": {
                                    "type": "boolean",
                                    "description": "Flag to align imported services names in the following format: sfm_\n",
                                    "example": false,
                                    "default": false
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{OCEAN_CLUSTER_ID}/fargateMigration/serviceDiscovery": {
      "get": {
        "summary": "Get Fargate Services Discovery",
        "description": "Get existing Fargate services in the ECS cluster.\n",
        "operationId": "oceanEcsFargateGetServicesDiscovery",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Fargate Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ecsClusterName": {
                                    "type": "string",
                                    "example": "EcsTestCluster"
                                  },
                                  "ecsClusterRegion": {
                                    "type": "string",
                                    "example": "us-east-2"
                                  },
                                  "serviceNames": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "test_with_1",
                                        "test_without"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "spotinst:ocean:aws:ecs:fargateMigration:serviceDiscovery"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/{oceanClusterId}/fargateMigration/status": {
      "get": {
        "summary": "Get Fargate Migration Status",
        "description": "Get the status of a Fargate service import.\n",
        "operationId": "oceanEcsFargateGetMigrationStatus",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean ECS Fargate Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ecsClusterName": {
                                    "type": "string",
                                    "example": "EcsTestCluster"
                                  },
                                  "ecsClusterRegion": {
                                    "type": "string",
                                    "example": "us-east-2"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "FINISHED"
                                  },
                                  "importedServices": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "test_with_1"
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "spotinst:ocean:aws:ecs:fargateMigration:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/cluster/fargate/import": {
      "post": {
        "summary": "Import Fargate To New Ocean Cluster",
        "description": "This API copies the configuration from a Fargate service into the corresponding fields of an Ocean object.\n(This process is commonly referred to as importing.)\nThe API returns an Ocean object that is suitable for use in the [Create API](https://docs.spot.io/api/#operation/oceanEcsCreate/) to create a new Ocean cluster based on your Fargate configuration.\nIf you are migrating a Fargate service that has tags, you must run the Opt In procedure on your Amazon account or IAM role.\nThis is required in order to obtain the necessary Amazon Resource Name (ARN) and resource ID format for your ECS tasks, container instances, and services.\nFor more information about the required ARN and the Opt In procedure, see the following pages -\n\n* [Amazon Resource Names (ARNs) and IDs](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids)\n* [Migrating your Amazon ECS deployment to the new ARN and resource ID format](https://aws.amazon.com/blogs/compute/migrating-your-amazon-ecs-deployment-to-the-new-arn-and-resource-id-format-2/)\n\nThe API requires one of the following permissions to be defined in Spot -\n\n* Permission- Account Editor (See [User Roles](https://docs.spot.io/administration/users/)) or\n* Action- ocean:importOceanFromFargate (See [Access Policies](https://docs.spot.io/administration/access-policies/))\n",
        "operationId": "oceanEcsFargateImportToNew",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "oceanClusterName": {
                        "type": "string",
                        "required": true,
                        "description": "Name of the cluster in new Ocean object.",
                        "example": "fargate-import-ocean"
                      },
                      "ecsClusterName": {
                        "type": "string",
                        "required": true,
                        "description": "Name of the cluster in ECS.",
                        "example": "fargateTestCluster"
                      },
                      "region": {
                        "type": "string",
                        "required": true,
                        "description": "Name of the AWS region the ECS cluster is in.",
                        "example": "us-west-1"
                      },
                      "services": {
                        "type": "array",
                        "required": true,
                        "description": "Name of the ECS Fargate service to be imported.",
                        "items": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "string",
                                "example": "service_1"
                              },
                              {
                                "type": "string",
                                "example": "service_2"
                              }
                            ]
                          }
                        }
                      },
                      "keyPair": {
                        "type": "string",
                        "description": "Specify a Key Pair to attach to the services.",
                        "example": "spot-prod"
                      },
                      "tags": {
                        "type": "array",
                        "description": "Set tags for the service. Items should be unique.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tagKey": {
                              "type": "string",
                              "description": "The tag's key.",
                              "example": "env"
                            },
                            "tagValue": {
                              "type": "string",
                              "description": "The tag's name.",
                              "example": "prod"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean ECS Import Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "cluster"
                                ],
                                "properties": {
                                  "cluster": {
                                    "type": "object",
                                    "title": "ECS Ocean",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "Ocean::my-elastigroup-name",
                                        "description": "Add a name for the Ocean cluster.\n"
                                      },
                                      "clusterName": {
                                        "type": "string",
                                        "example": "my-ECS-cluster-name",
                                        "description": "ECS cluster name\n"
                                      },
                                      "autoScaler": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                                      },
                                      "region": {
                                        "type": "string",
                                        "example": "us-east-1",
                                        "description": "Select the region for the Ocean cluster to run in.\n"
                                      },
                                      "capacity": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/capacity"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/strategy"
                                      },
                                      "compute": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/compute"
                                      },
                                      "scheduling": {
                                        "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/scheduling"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/clusterRoll": {
      "post": {
        "summary": "ECS Initiate Cluster Roll",
        "description": "Initiate a cluster roll for an Elastigroup with ECS cluster\n",
        "operationId": "elastigroupAwsEcsInitiateClusterRoll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "required": [
                          "batchSizePercentage"
                        ],
                        "properties": {
                          "batchSizePercentage": {
                            "type": "integer",
                            "example": 20,
                            "description": "Size of patch for roll as a percent\n"
                          },
                          "comment": {
                            "type": "string",
                            "example": "This is why I deployed my cluster.",
                            "description": "Add a comment description for the roll. comment should be limit to 256 chars.\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1clusterRoll/put/responses/200"
          },
          "400": {
            "description": "Bad Request - Deployment already in progress",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "integer",
                                  "example": 400,
                                  "description": "HTTP status code assigned to this response\n"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Bad Request",
                                  "description": "HTTP status message for the respective status code\n"
                                }
                              }
                            },
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "example": "DEPLOYMENT_ALREADY_IN_PROGRESS"
                                  },
                                  "message": {
                                    "type": "string",
                                    "example": "A group roll is currently running. Cannot start cluster roll until the group roll completes."
                                  }
                                }
                              }
                            },
                            "count": {
                              "type": "integer",
                              "example": 1,
                              "description": "Size of the data object array\n"
                            },
                            "kind": {
                              "type": "string",
                              "description": "The data type of each item in the response\n"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "ECS Update Cluster Roll Status",
        "description": "Update a running ECS cluster roll status\n",
        "operationId": "elastigroupAwsEcsUpdateClusterRoll",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "roll"
                    ],
                    "properties": {
                      "roll": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "STOPPED",
                            "description": "Valid values: \"STOPPED\"\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "scr-5aaf854e"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "STARTING"
                                  },
                                  "currentBatch": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "numOfBatches": {
                                    "type": "integer",
                                    "example": 5
                                  },
                                  "comment": {
                                    "type": "string",
                                    "example": "This is why I deployed my cluster."
                                  },
                                  "progress": {
                                    "type": "object",
                                    "properties": {
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "example": 0
                                      }
                                    }
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-43a8a5ee"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2019-03-24T15:46:09.000Z"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "ECS Get All Cluster Rolls Per Elastigroup",
        "description": "Get status for every ECS cluster rolls in given Elastigroup\n",
        "operationId": "elastigroupAwsEcsGetAllClusterRollsPerElastigroup",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1clusterRoll/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/clusterRoll/{rollId}": {
      "get": {
        "summary": "ECS Get Cluster Roll Status by Roll ID",
        "description": "Get status for specific ECS cluster rolls in given Elastigroup\n",
        "operationId": "elastigroupAwsEcsGetClusterRollStatusByRollID",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "ROLL_ID",
            "required": true,
            "description": "The cluster roll ID you want to query\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1clusterRoll/put/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/maintenance/start": {
      "put": {
        "summary": "Start Beanstalk Maintenance",
        "description": "Put your Beanstslk Elastigroup into maintenance mode, before you start updating the beanstalk configuration.\n",
        "operationId": "elastigroupAwsStartBeanstalkMaintenance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "groupId",
            "example": "sig-12345",
            "description": "The Spot Elastigroup ID \n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/maintenance/finish": {
      "put": {
        "summary": "Finish Beanstalk Maintenance",
        "description": "Finish maintenance mode, and trigger a blue-green deployment.\n",
        "operationId": "elastigroupAwsFinishBeanstalkMaintenance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/maintenance/status": {
      "get": {
        "summary": "Get Beanstalk Maintenance Status",
        "description": "Get the group maintenance status.<ul>\n<li>If the status is ACTIVE: putting the group in maintenance mode is allowed.</li> <li>If the status is AWAIT_USER_UPDATE: the group is pending for manually finishing maintenance mode.</li> <li>If the status is CANCELING_MAINTENANCE_MODE: the group is in the process of canceling maintenance mode.</li> </ul>\n",
        "operationId": "elastigroupAwsBeanstalkGetMaintenance",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "example": "AWAIT_USER_UPDATE"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:beanstalk:status"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/beanstalk/import": {
      "get": {
        "summary": "Get Beanstalk Configuration",
        "description": "<ul> <li>Get your Beanstalk environment configuration from AWS. This call is typically used as the initial step in importing your existing Beanstalk configuration to an Elastigroup.</li> <li> Note: To optimize the availability of your Beanstalk workload on Elastigroup, instance types similar to those running in your existing configuration are automatically added to the response under instanceTypes. Should these instance types not meet your requirements you may remove them.</li> <ul>\n",
        "operationId": "elastigroupAwsGetBeanstalkConfiguration",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "environmentId",
            "example": "e-12345",
            "required": true,
            "description": "The Beanstalk name\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "required": true,
            "description": "The AWS region for the Beanstalk\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "group"
                                ],
                                "properties": {
                                  "group": {
                                    "type": "object",
                                    "title": "AWS Elastigroup",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "First Elastigroup",
                                        "description": "The name of the Elastigroup\n"
                                      },
                                      "description": {
                                        "type": "string",
                                        "example": "This is the first Spot Elastigroup of many",
                                        "description": "The detailed purpose for this Elastigroup\n"
                                      },
                                      "capacity": {
                                        "type": "object",
                                        "title": "Capacity Units",
                                        "required": [
                                          "target"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "example": 1,
                                            "description": "The minimum number of units Elastigroup will scale down to        \n"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "example": 10,
                                            "description": "The maximum number of units Elastigroup will scale up to\n"
                                          },
                                          "target": {
                                            "type": "integer",
                                            "example": 5,
                                            "description": "Number of units Elastigroup will start with\n"
                                          }
                                        }
                                      },
                                      "strategy": {
                                        "type": "object",
                                        "properties": {
                                          "risk": {
                                            "type": "integer",
                                            "example": 100
                                          }
                                        }
                                      },
                                      "compute": {
                                        "type": "object",
                                        "properties": {
                                          "instanceTypes": {
                                            "type": "object",
                                            "properties": {
                                              "ondemand": {
                                                "type": "string",
                                                "example": "t2.micro"
                                              },
                                              "spot": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "availabilityZones": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "example": "us-west-2a"
                                                }
                                              }
                                            }
                                          },
                                          "launchSpecification": {
                                            "type": "object",
                                            "properties": {
                                              "loadBalancersConfig": {
                                                "type": "object",
                                                "properties": {
                                                  "loadBalancers": {
                                                    "type": "array",
                                                    "items": {
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "title": "MULTAI_TARGET_SET",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string",
                                                              "example": "awseb-AWSEB-12345"
                                                            },
                                                            "arn": {
                                                              "type": "string",
                                                              "example": "arn:aws:elasticloadbalancing:us-west-2:842422002533:targetgroup/awseb-AWSEB-12345/245f20215d9ba7fc"
                                                            },
                                                            "type": {
                                                              "type": "string",
                                                              "example": "TARGET_GROUP"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "title": "APPLICATION_GATEWAY",
                                                          "properties": {
                                                            "type": {
                                                              "type": "string",
                                                              "example": "APPLICATION_GATEWAY",
                                                              "enum": [
                                                                "APPLICATION_GATEWAY"
                                                              ]
                                                            },
                                                            "resourceGroupName": {
                                                              "type": "string",
                                                              "example": "azureResourceGroup"
                                                            },
                                                            "applicationGatewayName": {
                                                              "type": "string",
                                                              "example": "appGateway"
                                                            },
                                                            "backendPoolName": {
                                                              "type": "string",
                                                              "example": "backendpool490822"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "healthCheckType": {
                                                "type": "string",
                                                "example": "EC2"
                                              },
                                              "securityGroupIds": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "example": "sg-12345"
                                                }
                                              },
                                              "monitoring": {
                                                "type": "Boolean",
                                                "example": true
                                              },
                                              "imageId": {
                                                "type": "string",
                                                "example": "ami-12345"
                                              },
                                              "iamRole": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "aws-elasticbeanstalk-ec2-role"
                                                  }
                                                }
                                              },
                                              "userData": {
                                                "type": "string",
                                                "example": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0iY2xvdWQtY29uZmlnLnR4dCIKCiNjbG91ZC1jb25maWcKcmVwb191cGdyYWRlOiBub25lCnJlcG9fcmVsZWFzZXZlcjogMjAxNy4wOQpjbG91ZF9maW5hbF9tb2R1bGVzOgogLSBbc2NyaXB0cy11c2VyLCBhbHdheXNdCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdDsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsgZmlsZW5hbWU9InVzZXItZGF0YS50eHQiCgojIS9iaW4vYmFzaApleGVjID4gPih0ZWUgLWEgL3Zhci9sb2cvZWItY2ZuLWluaXQubG9nfGxvZ2dlciAtdCBbZWItY2ZuLWluaXRdIC1zIDI"
                                              },
                                              "tags": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "tagKey": {
                                                      "type": "string",
                                                      "example": "env"
                                                    },
                                                    "tagValue": {
                                                      "type": "string",
                                                      "example": "staging"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "scaling": {
                                        "type": "object",
                                        "properties": {
                                          "up": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "type": "string",
                                                      "example": "cpuScale"
                                                    },
                                                    "metricName": {
                                                      "type": "string",
                                                      "example": "NetworkOut"
                                                    },
                                                    "statistic": {
                                                      "type": "string",
                                                      "example": "average",
                                                      "enum": [
                                                        "average",
                                                        "sampleCount",
                                                        "sum",
                                                        "minimum",
                                                        "maximum"
                                                      ]
                                                    },
                                                    "unit": {
                                                      "type": "string",
                                                      "example": "bytes"
                                                    },
                                                    "threshold": {
                                                      "type": "integer",
                                                      "example": 6000000
                                                    },
                                                    "namespace": {
                                                      "type": "string",
                                                      "example": "AWS/EC2"
                                                    },
                                                    "source": {
                                                      "type": "string",
                                                      "example": "cloudWatch"
                                                    },
                                                    "period": {
                                                      "type": "integer",
                                                      "example": 300
                                                    },
                                                    "evaluationPeriods": {
                                                      "type": "integer",
                                                      "example": 1
                                                    },
                                                    "cooldown": {
                                                      "type": "integer",
                                                      "example": 360
                                                    },
                                                    "dimenstions": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "example": "resourceName"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "action": {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "example": "adjustment"
                                                        },
                                                        "adjustment": {
                                                          "type": "string",
                                                          "example": 1
                                                        }
                                                      }
                                                    },
                                                    "operator": {
                                                      "type": "string",
                                                      "example": "gte",
                                                      "enum": [
                                                        "gt",
                                                        "gte",
                                                        "lt",
                                                        "lte"
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "example": "awseb-e-12345-stack-AWSEBCloudwatchAlarmHigh-56QPITB3WUFM"
                                                    },
                                                    "threshold": {
                                                      "example": 6000000
                                                    },
                                                    "operator": {
                                                      "example": "gte"
                                                    },
                                                    "action": {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "example": "adjustment",
                                                          "enum": [
                                                            "adjustment",
                                                            "setMinTarget",
                                                            "updateCapacity",
                                                            "percentageAdjustment"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "down": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "$ref": "#/paths/~1aws~1ec2~1group~1beanstalk~1import/get/responses/200/content/application~1json/schema/allOf/1/properties/response/properties/items/items/properties/group/properties/scaling/properties/up/items/allOf/0"
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "policyName": {
                                                      "example": "awseb-e-12345-stack-AWSEBCloudwatchAlarmLow-UNGVBRKT0EHP"
                                                    },
                                                    "threshold": {
                                                      "example": 2000000
                                                    },
                                                    "operator": {
                                                      "example": "lte"
                                                    },
                                                    "action": {
                                                      "type": "object",
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "example": "adjustment",
                                                          "enum": [
                                                            "adjustment",
                                                            "setMaxTarget",
                                                            "updateCapacity",
                                                            "percentageAdjustment"
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "thirdPartiesIntegration": {
                                        "type": "object",
                                        "properties": {
                                          "elasticBeanstalk": {
                                            "type": "object",
                                            "properties": {
                                              "environmentId": {
                                                "type": "string",
                                                "example": "e-12345"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/beanstalk/reimport": {
      "put": {
        "summary": "Beanstalk Reimport",
        "description": "Re-import the beanstalk configuration\n",
        "operationId": "elastigroupAwsBeanstalkReImport",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "group": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "sig-123456"
                                      },
                                      "compute": {
                                        "type": "object",
                                        "properties": {
                                          "launchSpecification": {
                                            "type": "object",
                                            "properties": {
                                              "securityGroupIds": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "example": "sg-b75343cf"
                                                }
                                              },
                                              "monitoring": {
                                                "type": "Boolean",
                                                "example": false
                                              },
                                              "imageId": {
                                                "type": "string",
                                                "example": "ami-3c873e5c"
                                              },
                                              "iamRole": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "aws-elasticbeanstalk-ec2-role"
                                                  }
                                                }
                                              },
                                              "userData": {
                                                "type": "string",
                                                "example": "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0iY2xvdWQtY29uZmlnLnR4dCIKCiNjbG91ZC1jb25maWcKcmVwb191cGdyYWRlOiBub25lCnJlcG9fcmVsZWFzZXZlcjogMjAxNy4wOQpjbG91ZF9maW5hbF9tb2R1bGVzOgogLSBbc2NyaXB0cy11c2VyLCBhbHdheXNdCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdDsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsgZmlsZW5hbWU9InVzZXItZGF0YS50eHQiCgojIS9iaW4vYmFzaApleGVjID4gPih0ZWUgLWEgL3Zhci9sb2cvZWItY2ZuLWluaXQubG9nfGxvZ2dlciAtdCBbZWItY2ZuLWluaXRdIC1zIDI"
                                              },
                                              "blockDeviceMappings": {
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "deviceName": {
                                                      "type": "string",
                                                      "example": "/dev/xvdcz"
                                                    },
                                                    "ebs": {
                                                      "type": "object",
                                                      "properties": {
                                                        "deleteOnTermination": {
                                                          "type": "boolean",
                                                          "example": true
                                                        },
                                                        "volumeSize": {
                                                          "type": "integer",
                                                          "example": 12
                                                        },
                                                        "volumeType": {
                                                          "type": "string",
                                                          "example": "gp2"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/group/{groupId}/codeDeploy/blueGreenDeployment": {
      "post": {
        "summary": "Create CodeDeploy B/G Deployment",
        "description": "Trigger a Blue-Green deployment to your Elastigroup, this will initiate a deployment that will replace the existing instances(blue) with new ones(green).\n",
        "operationId": "elastigroupAwsCreateCodeDeployB_GDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1codeDeploy~1blueGreenDeployment/get/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1group~1%7BgroupId%7D~1codeDeploy~1blueGreenDeployment/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get CodeDeploy B/G Deployment",
        "description": "Get CodeDeploy Elastigroup deployment status for more information see: CodeDeploy B/G Deployment\n",
        "operationId": "elastigroupAwsGetCodeDeployB_GDeployment",
        "tags": [
          "Elastigroup AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "deployment": {
                        "type": "object",
                        "properties": {
                          "timeout": {
                            "type": "integer",
                            "example": 20
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tagKey": {
                                  "type": "string",
                                  "example": "ver"
                                },
                                "tagValue": {
                                  "type": "string",
                                  "example": "pink"
                                }
                              }
                            }
                          },
                          "deploymentGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "applicationName": {
                                  "type": "string",
                                  "example": "appTest"
                                },
                                "deploymentGroupName": {
                                  "type": "string",
                                  "example": "deploymentGroupName"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "cdbg-3ccf1234"
                                  },
                                  "groupId": {
                                    "type": "string",
                                    "example": "sig-87231234"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "STARTING"
                                  },
                                  "config": {
                                    "type": "object",
                                    "properties": {
                                      "timeout": {
                                        "type": "integer",
                                        "example": 20
                                      },
                                      "tags": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "tagKey": {
                                              "type": "string",
                                              "example": "ver"
                                            },
                                            "tagValue": {
                                              "type": "string",
                                              "example": "pink"
                                            }
                                          }
                                        }
                                      },
                                      "deploymentGroups": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "applicationName": {
                                              "type": "string",
                                              "example": "appTest"
                                            },
                                            "deploymentGroupName": {
                                              "type": "string",
                                              "example": "deploymentGroupName"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:group:codeDeploy:blueGreenDeployment"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Create Cluster",
        "description": "**Prerequisites**\n\nThe Spot Controller is used to monitor the cluster resources and report back to Ocean and is required for Ocean On-Prem.<br />\n\nTo install the Spot Controller, complete and run the following script on a machine with kubectl command line tool installed and configured:\n\n```\n#!/usr/bin/env bash\ncurl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\nSPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\nSPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\nSPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\nbash\n```\n",
        "operationId": "OceanAWSClusterCreate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "title": "AWS Cluster",
                        "required": [
                          "name",
                          "region",
                          "controllerClusterId"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "oceanName",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "ocean.k8s",
                            "description": "Enter the Ocean cluster identifier.\n"
                          },
                          "region": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Select the region for the Ocean cluster to run in.\n"
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "auto-scaler",
                            "description": "The Ocean Kubernetes Autoscaler.",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes Autoscaler.",
                                "default": true,
                                "example": true
                              },
                              "cooldown": {
                                "type": "integer",
                                "description": "Cooldown period (in seconds) between scaling down actions.",
                                "default": null,
                                "example": 180
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Optionally set upper and lower bounds on the resource usage of the cluster.",
                                "properties": {
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory in GiB units that can be allocated to the cluster.",
                                    "example": 1500
                                  },
                                  "maxVcpu": {
                                    "type": "integer",
                                    "description": "The maximum cpu in vCpu units that can be allocated to the cluster.",
                                    "example": 750
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Auto Scaling scale down operations.",
                                "properties": {
                                  "maxScaleDownPercentage": {
                                    "type": "integer",
                                    "description": "Would represent the maximum % to scale-down. Number between 1-100",
                                    "example": 60
                                  }
                                }
                              },
                              "headRoom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.",
                                "properties": {
                                  "cpuPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.",
                                    "example": 2000
                                  },
                                  "memoryPerUnit": {
                                    "type": "integer",
                                    "description": "Optionally configure the amount of memory (MiB) to allocate the headroom.",
                                    "example": 0
                                  },
                                  "gpuPerUnit": {
                                    "type": "integer",
                                    "description": "How much GPU allocate for headroom unit",
                                    "example": 0
                                  },
                                  "numOfUnit": {
                                    "type": "integer",
                                    "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.",
                                    "example": 4
                                  }
                                }
                              },
                              "isAutoConfig": {
                                "type": "boolean",
                                "description": "Use automatic headroom. When set to true, the values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.",
                                "default": true,
                                "example": false
                              },
                              "autoHeadroomPercentage": {
                                "type": "integer",
                                "description": "Optionally set the auto headroom percentage, set a number between 0-200 to control the headroom % from the cluster. Relevant when isAutoConfig=true.",
                                "example": null
                              }
                            }
                          },
                          "capacity": {
                            "type": "object",
                            "title": "Capacity Units",
                            "description": "Capacity specifications for the Ocean cluster.",
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "example": 0,
                                "description": "The bottom limit of instances that the cluster can scale down to.\n"
                              },
                              "maximum": {
                                "type": "integer",
                                "default": 1000,
                                "example": 1000,
                                "description": "The upper limit of instances that the cluster can scale up to.\n"
                              },
                              "target": {
                                "type": "integer",
                                "example": 1,
                                "description": "Number of instances to launch and maintain in cluster.\n"
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean Cluster Strategy",
                            "properties": {
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "If reserved instances exist, Ocean will utilize them before launching spot instances.\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n"
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "default": 600,
                                "example": 600,
                                "description": "The amount of time, in seconds, from the time the instance has launched to the time its first health check starts.\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "example": 60,
                                "description": "The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the default draining timeout will be used.\n"
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "Elastigroup Scheduling",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "required": [
                                    "isEnabled",
                                    "cronExpression",
                                    "taskType"
                                  ],
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run. Required for cluster.scheduling.tasks object\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of âfrequency' or âcronExpression' should be used at a time.\n"
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "example": "clusterRoll",
                                      "description": "Valid values: \"clusterRoll\". Required for cluster.scheduling.tasks object\n"
                                    }
                                  }
                                }
                              },
                              "shutdownHours": {
                                "type": "object",
                                "title": "Shutdown Hours",
                                "properties": {
                                  "timeWindows": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "Sat:08:00-Sun:08:00"
                                    }
                                  },
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "Flag to enable / disable the shutdown hours mechanism. When turned to false, the mechanism is deactivated and the cluster remains in its current state.\n"
                                  }
                                }
                              }
                            }
                          },
                          "security": {
                            "type": "object",
                            "title": "Security",
                            "properties": {
                              "containerImage": {
                                "type": "object",
                                "properties": {
                                  "approvedImages": {
                                    "type": "array",
                                    "description": "Set white list of repositories for container images.",
                                    "items": {
                                      "type": "string",
                                      "example": [
                                        "*.ecr.*.amazonaws.com/*",
                                        "docker.*"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1import/post/responses/200/content/application~1json/schema/properties/items/properties/compute"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the configurations for all Ocean cluster in the specified account.\n",
        "operationId": "OceanAWSClusterList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": "o-482d9d26"
                                      },
                                      "createdAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:55:50.000+0000"
                                      },
                                      "updatedAt": {
                                        "type": "string",
                                        "example": "2018-11-05T12:58:15.000+0000"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{OCEAN_ID}": {
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete an existing Ocean cluster.\n",
        "operationId": "OceanAWSClusterDelete",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "in": "path",
            "name": "OCEAN_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The ID of the Ocean\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configuration of an existing Ocean cluster.\n",
        "operationId": "OceanAWSClusterGet",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, except for region and ID. This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanAWSClusterUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "OCEAN_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The ID of the Ocean\n"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoApplyTags",
            "example": "true",
            "default": "false",
            "description": "Optionally update instance tags on the fly without rolling the cluster.\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{OCEAN_ID}/controllerHeartbeat": {
      "get": {
        "summary": "Get Heartbeat Status",
        "description": "Get Ocean cluster's controller heartbeat status. <br /> The response would return the heartbeat status and last heartbeat timestamp.\"\n",
        "operationId": "oceanAwsGetHeartbeatStatus",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Heartbeat Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "e593ff58-067d-4340-92f9-8b1c0bad70d7",
                          "description": "Unique ID associated with this request\n"
                        },
                        "url": {
                          "type": "string",
                          "description": "The URL that was used for the request\n"
                        },
                        "method": {
                          "type": "string",
                          "description": "The HTTP **METHOD** used for the request\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2018-06-20T11:35:01.745Z",
                          "description": "When the requets was received by Spot\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response package that includes, status, type and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:k8s:cluster:controllerHeartbeat"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "ACTIVE"
                            },
                            "lastHeartbeat": {
                              "type": "string",
                              "example": "2019-11-24T14:33:00.746Z"
                            }
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{clusterIdentifier}/log": {
      "summary": "Ocean for AWS K8s",
      "get": {
        "summary": "Fetch Elastilog",
        "description": "Fetch an Ocean Cluster's log\n",
        "operationId": "oceanAwsFetchLog",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterIdentifier",
            "example": "o-6e3819ae",
            "description": "The Spot Cluster Id\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/4"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/5"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/6"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique ID associated with this request\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/aws/k8s/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response package that includes, status, type and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:cluster:log"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Ocean o-e0a2bd7c successfully created.",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/autoScalingGroup/import": {
      "post": {
        "summary": "Import ASG To Ocean Cluster",
        "description": "Create an Ocean configuration according to an AWS autoscaling group (ASG) configuration.\n",
        "operationId": "oceanAwsImportAsg",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "autoScalingGroupName",
            "description": "The autoscaling group name.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "region",
            "example": "us-east-1",
            "description": "Region name of the ASG.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Import ASG Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "TestASG1"
                    },
                    "controllerClusterId": {
                      "type": "string",
                      "example": "ocean-ed609402-8557-4d18-818a-e549333cc11e"
                    },
                    "region": {
                      "type": "string",
                      "example": "us-west-2"
                    },
                    "capacity": {
                      "type": "object",
                      "properties": {
                        "minimum": {
                          "type": "integer",
                          "example": 0
                        },
                        "maximum": {
                          "type": "integer",
                          "example": 1000
                        },
                        "target": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    },
                    "compute": {
                      "type": "object",
                      "properties": {
                        "subnetIds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": [
                              "subnet-00cab2dd9f40a9883",
                              "subnet-0df9d512c7cbbd9e1"
                            ]
                          }
                        },
                        "launchSpecification": {
                          "type": "object",
                          "properties": {
                            "securityGroupIds": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": [
                                  "sg-03ccf232a2bf0f4ea"
                                ]
                              }
                            },
                            "keyPair": {
                              "type": "string",
                              "example": "testteamkp"
                            },
                            "imageId": {
                              "type": "string",
                              "example": "ami-0ce21b51cb31a54b8"
                            },
                            "tags": {
                              "type": "object",
                              "properties": {
                                "tagKey": {
                                  "type": "string",
                                  "example": "AmazonECSManaged"
                                },
                                "tagValue": {
                                  "type": "string",
                                  "example": ""
                                }
                              }
                            },
                            "associatePublicIpAddress": {
                              "type": "boolean",
                              "example": "false"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{oceanClusterId}/rightSizing/suggestion": {
      "post": {
        "summary": "Fetch Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster and filter them according to namespace or label.\n",
        "operationId": "oceanAwsFilterRightSizingWithFilter",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1%7BOCEAN_ID%7D~1rightSizing~1suggestion/post/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1%7BOCEAN_ID%7D~1rightSizing~1suggestion/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean RightSizing Recommendation Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/ocean/aws/k8s/cluster/o-abcd1234/rightSizing/suggestion",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2016-01-21T17:12:51.451Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:ocean:aws:k8s:cluster:rightSizing:suggestion",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "resourceName": {
                                            "type": "string",
                                            "example": "redis-controller"
                                          },
                                          "resourceType": {
                                            "type": "string",
                                            "example": "deployment"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "example": "kube-system"
                                          },
                                          "suggestedCPU": {
                                            "type": "integer",
                                            "example": 4
                                          },
                                          "suggestedMemory": {
                                            "type": "integer",
                                            "example": 19
                                          },
                                          "requestedCPU": {
                                            "type": "integer",
                                            "example": 50
                                          },
                                          "requestedMemory": {
                                            "type": "integer",
                                            "example": 50
                                          },
                                          "containers": {
                                            "type": "array",
                                            "items": {
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "example": "dnsmasq"
                                                    },
                                                    "requestedCPU": {
                                                      "type": "integer",
                                                      "example": 10
                                                    },
                                                    "suggestedCPU": {
                                                      "type": "integer",
                                                      "example": 2
                                                    },
                                                    "requestedMemory": {
                                                      "type": "integer",
                                                      "example": 40
                                                    },
                                                    "suggestedMemory": {
                                                      "type": "integer",
                                                      "example": 15
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "example": "sidecar"
                                                    },
                                                    "requestedCPU": {
                                                      "type": "integer",
                                                      "example": 40
                                                    },
                                                    "suggestedCPU": {
                                                      "type": "integer",
                                                      "example": 2
                                                    },
                                                    "requestedMemory": {
                                                      "type": "integer",
                                                      "example": 10
                                                    },
                                                    "suggestedMemory": {
                                                      "type": "integer",
                                                      "example": 4
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "type": "object",
                                          "properties": {
                                            "resourceName": {
                                              "type": "string",
                                              "example": "test-redis"
                                            },
                                            "resourceType": {
                                              "type": "string",
                                              "example": "deployment"
                                            },
                                            "namespace": {
                                              "type": "string",
                                              "example": "sparkSpace"
                                            },
                                            "suggestedCPU": {
                                              "type": "integer",
                                              "example": 2
                                            },
                                            "suggestedMemory": {
                                              "type": "integer",
                                              "example": 20
                                            },
                                            "requestedCPU": {
                                              "type": "integer",
                                              "example": 50
                                            },
                                            "requestedMemory": {
                                              "type": "integer",
                                              "example": 30
                                            },
                                            "containers": {
                                              "type": "array",
                                              "items": {
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "example": "dns-controller"
                                                      },
                                                      "requestedCPU": {
                                                        "type": "integer",
                                                        "example": 20
                                                      },
                                                      "suggestedCPU": {
                                                        "type": "integer",
                                                        "example": 1
                                                      },
                                                      "requestedMemory": {
                                                        "type": "integer",
                                                        "example": 20
                                                      },
                                                      "suggestedMemory": {
                                                        "type": "integer",
                                                        "example": 15
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "example": "kubedns"
                                                      },
                                                      "requestedCPU": {
                                                        "type": "integer",
                                                        "example": 30
                                                      },
                                                      "suggestedCPU": {
                                                        "type": "integer",
                                                        "example": 1
                                                      },
                                                      "requestedMemory": {
                                                        "type": "integer",
                                                        "example": 10
                                                      },
                                                      "suggestedMemory": {
                                                        "type": "integer",
                                                        "example": 5
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "resourceName": {
                                            "type": "string",
                                            "example": "test-redis"
                                          },
                                          "resourceType": {
                                            "type": "string",
                                            "example": "deployment"
                                          },
                                          "namespace": {
                                            "type": "string",
                                            "example": "sparkSpace"
                                          },
                                          "suggestedCPU": {
                                            "type": "integer",
                                            "example": 2
                                          },
                                          "suggestedMemory": {
                                            "type": "integer",
                                            "example": 20
                                          },
                                          "requestedCPU": {
                                            "type": "integer",
                                            "example": 50
                                          },
                                          "requestedMemory": {
                                            "type": "integer",
                                            "example": 30
                                          },
                                          "containers": {
                                            "type": "array",
                                            "items": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "dns-controller"
                                                  },
                                                  "requestedCPU": {
                                                    "type": "integer",
                                                    "example": 20
                                                  },
                                                  "suggestedCPU": {
                                                    "type": "integer",
                                                    "example": 1
                                                  },
                                                  "requestedMemory": {
                                                    "type": "integer",
                                                    "example": 20
                                                  },
                                                  "suggestedMemory": {
                                                    "type": "integer",
                                                    "example": 15
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "example": "kubedns"
                                                  },
                                                  "requestedCPU": {
                                                    "type": "integer",
                                                    "example": 30
                                                  },
                                                  "suggestedCPU": {
                                                    "type": "integer",
                                                    "example": 1
                                                  },
                                                  "requestedMemory": {
                                                    "type": "integer",
                                                    "example": 10
                                                  },
                                                  "suggestedMemory": {
                                                    "type": "integer",
                                                    "example": 5
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/mcs/kubernetes/cluster/{clusterIdentifier}/costs": {
      "get": {
        "summary": "Get Cluster Costs",
        "description": "Describes Kubernetes cluster costs in a time range based on resource allocation.\\\nThe response will provide the distribution of the costs per cluster, namespace, and deployment.\\\nFor each entity, the response will contain breakdown to compute and EBS costs as well.\\\nIn addition, response will show labels/annotations for each namespace or deployment so you can filter costs by labels or annotations.\n",
        "operationId": "oceanK8sClusterCosts",
        "tags": [
          "Ocean AWS",
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/2"
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Possible values: \"daily\", null. For daily value response contains aggregated data by day. <br /> If null - response returns sum of costs per period\n"
          },
          {
            "in": "path",
            "name": "clusterIdentifier",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "ocean.k8s",
            "description": "The Ocean cluster's identifier as set in the Ocean cluster's configuration under the \"controllerClusterId\" field.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/mcs/kubernetes/cluster/my-cluster-identifier/costs"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "totalCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 279.9907
                                  },
                                  "totalComputeCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 279.9907
                                  },
                                  "totalEbsCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 0
                                  },
                                  "totalStorageCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 0
                                  },
                                  "namespaces": {
                                    "type": "object",
                                    "properties": {
                                      "namespace": {
                                        "type": "string",
                                        "example": "default"
                                      },
                                      "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 18.00862
                                      },
                                      "computeCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 18.00862
                                      },
                                      "ebsCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "storageCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "labels": {
                                        "type": "object",
                                        "properties": {
                                          "region": {
                                            "type": "string",
                                            "example": "west"
                                          },
                                          "env": {
                                            "type": "string",
                                            "example": "prod"
                                          }
                                        }
                                      },
                                      "annotations": {
                                        "type": "object",
                                        "properties": {
                                          "region": {
                                            "type": "string",
                                            "example": "west"
                                          },
                                          "env": {
                                            "type": "string",
                                            "example": "prod"
                                          }
                                        }
                                      },
                                      "deployments": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "cpu-deployment-check5"
                                          },
                                          "namespace": {
                                            "type": "stirng",
                                            "example": "default"
                                          },
                                          "cost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "computeCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "ebsCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "storageCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "labels": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          },
                                          "annotations": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "statefulSets": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "cpu-deployment-check5"
                                          },
                                          "namespace": {
                                            "type": "stirng",
                                            "example": "default"
                                          },
                                          "cost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "computeCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "ebsCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "storageCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "labels": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          },
                                          "annotations": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "daemonSets": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "cpu-deployment-check5"
                                          },
                                          "namespace": {
                                            "type": "stirng",
                                            "example": "default"
                                          },
                                          "cost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "computeCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "ebsCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "storageCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "labels": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          },
                                          "annotations": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "jobs": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "example": "cpu-deployment-check5"
                                          },
                                          "namespace": {
                                            "type": "stirng",
                                            "example": "default"
                                          },
                                          "cost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "computeCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 3.7410312
                                          },
                                          "ebsCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "storageCost": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 0
                                          },
                                          "labels": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          },
                                          "annotations": {
                                            "type": "object",
                                            "properties": {
                                              "region": {
                                                "type": "string",
                                                "example": "west"
                                              },
                                              "env": {
                                                "type": "string",
                                                "example": "prod"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "standAlonePodsCost": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "deployments": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "cpu-deployment-check5"
                                      },
                                      "namespace": {
                                        "type": "stirng",
                                        "example": "default"
                                      },
                                      "cost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 3.7410312
                                      },
                                      "computeCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 3.7410312
                                      },
                                      "ebsCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "storageCost": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                      },
                                      "labels": {
                                        "type": "object",
                                        "properties": {
                                          "region": {
                                            "type": "string",
                                            "example": "west"
                                          },
                                          "env": {
                                            "type": "string",
                                            "example": "prod"
                                          }
                                        }
                                      },
                                      "annotations": {
                                        "type": "object",
                                        "properties": {
                                          "region": {
                                            "type": "string",
                                            "example": "west"
                                          },
                                          "env": {
                                            "type": "string",
                                            "example": "prod"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "headroomCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 0
                                  },
                                  "idleCost": {
                                    "type": "number",
                                    "format": "float",
                                    "example": 216.10321
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/import": {
      "post": {
        "summary": "Upgrade Elastigroup To Ocean",
        "description": "Upgrade an Elastigroup with K8s integration into Ocean for K8s cluster.\n",
        "operationId": "oceanAwsUpgradeElastigroup",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "groupId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Elastigroup ID\n"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "example": "spotinst:ocean:aws:k8s"
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "o-482d9d26"
                        },
                        "name": {
                          "type": "string",
                          "example": "Ocean::test-k8s-batch-1"
                        },
                        "clusterName": {
                          "type": "string",
                          "example": "testEnvironment_Batch_852a670a-aa73-3d5d-9576-147a26d43401"
                        },
                        "autoScaler": {
                          "type": "object",
                          "properties": {
                            "isEnabled": {
                              "type": "boolean",
                              "example": true
                            },
                            "isAutoConfig": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "region": {
                          "type": "string",
                          "example": "us-west-2"
                        },
                        "groupId": {
                          "type": "string",
                          "example": "sig-b6bb68fb"
                        },
                        "strategy": {
                          "type": "object",
                          "properties": {
                            "fallbackToOd": {
                              "type": "boolean",
                              "example": true
                            },
                            "spotPercentage": {
                              "type": "integer",
                              "example": 100
                            },
                            "drainingTimeout": {
                              "type": "integer",
                              "example": 120
                            }
                          }
                        },
                        "compute": {
                          "type": "object",
                          "title": "Ocean Compute",
                          "required": [
                            "subnetIds",
                            "launchSpecification"
                          ],
                          "properties": {
                            "subnetIds": {
                              "type": "array",
                              "description": "A comma-separated list of subnet identifiers for the Ocean cluster. Subnet IDs should be configured with auto assign public IP.\n",
                              "items": {
                                "type": "string",
                                "example": [
                                  "subnet-4c1d1538",
                                  "subnet-2791bb61"
                                ]
                              }
                            },
                            "instanceTypes": {
                              "type": "object",
                              "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                              "properties": {
                                "whitelist": {
                                  "type": "array",
                                  "description": "Instance types allowed in the Ocean cluster. Cannot be configured if blacklist is configured.\n",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "c4.2xlarge",
                                      "c4.xlarge",
                                      "c4.4xlarge",
                                      "c4.8xlarge"
                                    ]
                                  }
                                },
                                "blacklist": {
                                  "type": "array",
                                  "description": "Instance types to avoid launching in the Ocean cluster. Cannot be configured if whitelist is configured.\n",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "launchSpecification": {
                              "type": "object",
                              "required": [
                                "imageId",
                                "securityGroupIds"
                              ],
                              "properties": {
                                "useAsTemplateOnly": {
                                  "type": "boolean",
                                  "description": "launch specification defined on the Ocean object will function **only** as a template for virtual node groups.\n",
                                  "default": false
                                },
                                "imageId": {
                                  "type": "string",
                                  "description": "ID of the image used to launch the instances."
                                },
                                "userData": {
                                  "type": "string",
                                  "format": "byte",
                                  "description": "The Base64-encoded MIME user data to make available to the instances."
                                },
                                "securityGroupIds": {
                                  "type": "array",
                                  "description": "One or more Security Group IDs.",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "sg-c3d914b0"
                                    ]
                                  }
                                },
                                "iamInstanceProfile": {
                                  "type": "object",
                                  "description": "The instance profile iamRole.",
                                  "properties": {
                                    "arn": {
                                      "type": "string",
                                      "description": "The iamRole arn.",
                                      "example": "orform"
                                    }
                                  }
                                },
                                "keyPair": {
                                  "type": "string",
                                  "description": "The key pair to attach the instances.",
                                  "example": "spotinst-labs-oregon"
                                },
                                "tags": {
                                  "type": "array",
                                  "description": "List of kay-value pairs of tags.\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "tagKey": {
                                        "type": "string",
                                        "description": "Set the tag key.\n",
                                        "example": "Creator"
                                      },
                                      "tagValue": {
                                        "type": "string",
                                        "description": "Set the tag value.\n",
                                        "example": "John Doe"
                                      }
                                    }
                                  }
                                },
                                "loadBalancers": {
                                  "type": "array",
                                  "description": "Configure load balancers settings to Ocean cluster.\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Type of LB to use. supported types are: \"TARGET_GROUP\" \"CLASSIC\".\n",
                                        "example": "TARGET_GROUP"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "If type is \"CLASSIC\" than name is required, otherwise it's optional.\n",
                                        "example": "MyTargetGroup"
                                      },
                                      "arn": {
                                        "type": "string",
                                        "description": "If type is \"TARGET_GROUP\" than ARN is required.\n",
                                        "example": "arn:aws:elasticloadbalancing:us-west-2:922761411234:targetgroup"
                                      }
                                    }
                                  }
                                },
                                "associatePublicIpAddress": {
                                  "type": "boolean",
                                  "description": "Configure public IP address allocation",
                                  "default": false,
                                  "example": false
                                },
                                "monitoring": {
                                  "type": "boolean",
                                  "description": "Enable detailed monitoring for cluster. Flag will enable Cloud Watch detailed detailed monitoring (one minute increments). Note: there are additional hourly costs for this service based on the region used\n",
                                  "example": true
                                },
                                "ebsOptimized": {
                                  "type": "boolean",
                                  "description": "Enable EBS optimized for cluster. Flag will enable optimized capacity for high bandwidth connectivity to the EB service for non EBS optimized instance types. For instances that are EBS optimized this flag will be ignored\n",
                                  "example": true
                                },
                                "rootVolumeSize": {
                                  "type": "integer",
                                  "description": "Set root volume size in GiB",
                                  "example": 73
                                }
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2018-11-05T12:55:50.000+0000"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2018-11-05T12:58:15.000+0000"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{OCEAN_ID}/roll": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying launchSpecIds or instanceIds. Performing this request will start the roll immediately, by defined batches.\nNote that the first response for a successful request will notify for starting a roll. In order to check the status of a roll, you can use the GET Roll API.\n",
        "operationId": "oceanAwsRollInit",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "description": "Settings for roll operation\n",
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "description": "Value in % to set size of batch in roll. Valid values are 0-100\n",
                        "example": 20
                      },
                      "comment": {
                        "description": "Add a comment description for the roll. comment should be limit to 256 chars.\n",
                        "type": "string",
                        "example": "This is why I deployed my cluster."
                      },
                      "launchSpecIds": {
                        "type": "array",
                        "description": "List of launch specification IDs to be rolled. Each ID is a string. launchSpecIds can be null. Cannot be used together with instanceIds.",
                        "items": {
                          "type": "string",
                          "example": [
                            "ols-76694a7d",
                            "ols-56694a76"
                          ]
                        }
                      },
                      "disableLaunchSpecAutoScaling": {
                        "type": "boolean",
                        "example": true,
                        "description": "When set to True and launch spec IDs are defined to roll, the specified launch spec(s) will be blocked from scaling up (replacements will scale up in other launch specs that match the displaced pods instead). Meant for different use cases of 'migrating' nodes from one launch spec to another.\n"
                      },
                      "instanceIds": {
                        "type": "array",
                        "description": "List of instance IDs to be rolled. Each ID is a string. instanceIds can be null. Cannot be used together with launchSpecIds.\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "i-0003a99ffb566f039",
                            "i-0567a99ffb566f765"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "scr-5aaf854e"
                    },
                    "status": {
                      "type": "string",
                      "example": "STARTING"
                    },
                    "currentBatch": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "comment": {
                      "type": "string",
                      "example": "This is why I deployed my cluster."
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        }
                      }
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "instanceIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": [
                          "i-0003a99ffb566f039",
                          "i-0567a99ffb566f765"
                        ]
                      }
                    },
                    "launchSpecIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": [
                          "ols-76694a7d",
                          "ols-56694a76"
                        ]
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "Get status for all rolls of an Ocean cluster.\n",
        "operationId": "oceanAwsRollList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "OCEAN_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The ID of the Ocean\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get List Of Rolls Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "OK"
                        }
                      }
                    },
                    "kind": {
                      "type": "string",
                      "example": "spotinst:ocean:aws:k8s:cluster:roll"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "scr-5aaf854e"
                          },
                          "status": {
                            "type": "string",
                            "example": "STARTING"
                          },
                          "currentBatch": {
                            "type": "integer",
                            "example": 1
                          },
                          "numOfBatches": {
                            "type": "integer",
                            "example": 5
                          },
                          "comment": {
                            "type": "string",
                            "example": "This is why I deployed my cluster."
                          },
                          "progress": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string",
                                "example": "percentage"
                              },
                              "value": {
                                "type": "integer",
                                "example": 0
                              }
                            }
                          },
                          "oceanId": {
                            "type": "string",
                            "example": "o-12e31234"
                          },
                          "instanceIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": [
                                "i-0003a99ffb566f039",
                                "i-0567a99ffb566f765"
                              ]
                            }
                          },
                          "launchSpecIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": [
                                "ols-76694a7d",
                                "ols-56694a76"
                              ]
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2019-03-24T15:46:09.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2019-03-24T15:46:09.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/cluster/{OCEAN_ID}/roll/{ROLL_ID}": {
      "summary": "Ocean for AWS",
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster.\n\n*Performing the request will stop the next batch in a roll*\n",
        "operationId": "oceanAwsRollUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "OCEAN_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The ID of the Ocean\n"
          },
          {
            "in": "path",
            "name": "ROLL_ID",
            "example": "scr-12345abc",
            "description": "Ocean Cluster Roll ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "description": "Settings for roll operation\n",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Set status to roll. Valid values: \"STOPPED\"\n",
                        "example": "STOPPED"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "scr-5aaf854e"
                    },
                    "status": {
                      "type": "string",
                      "example": "STARTING"
                    },
                    "currentBatch": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        }
                      }
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for roll of an Ocean cluster.\n",
        "operationId": "oceanAwsRollGetSingleRoll",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "OCEAN_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The ID of the Ocean\n"
          },
          {
            "in": "path",
            "name": "ROLL_ID",
            "example": "scr-12345abc",
            "description": "Ocean Cluster Roll ID\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BOCEAN_ID%7D~1roll/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Create Virtual Node Group",
        "description": "Create a Virtual Node Group.\n",
        "operationId": "OceanAWSLaunchSpecCreate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "initialNodes",
            "example": 1,
            "default": null,
            "description": "When set to an integer greater than 0, a corresponding amount of nodes will be launched from the created virtual node group.\n",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/put/requestBody/content/application~1json/schema"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Virtual Node Groups",
        "operationId": "OceanAWSLaunchSpecList",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "oceanId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-12345abc",
            "description": "The ID of the Ocean cluster.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "allOf": [
                                {
                                  "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/put/requestBody/content/application~1json/schema"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "createdAt": {
                                      "type": "string",
                                      "example": "2018-11-05T12:55:50.000+0000"
                                    },
                                    "updatedAt": {
                                      "type": "string",
                                      "example": "2018-11-05T12:58:15.000+0000"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/{OCEAN_LAUNCH_SPEC_ID}": {
      "summary": "Ocean for AWS",
      "delete": {
        "summary": "Delete Virtual Node Group",
        "description": "Delete a specified launch specification in an Ocean cluster.\n",
        "operationId": "OceanAWSLaunchSpecDelete",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          },
          {
            "in": "query",
            "name": "deleteNodes",
            "example": true,
            "default": false,
            "description": "When set to \"true\", all instances belonging to the deleted launch specification will be drained, detached, and terminated.\n",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "forceDelete",
            "example": true,
            "default": null,
            "description": "When set to \"true\", delete even if it is the only custom launch spec remaining, and default launch spec has useAsTemlateOnly = true.\n",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "a608777a-a1c5-4f34-b30b-3f7355e3926b"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/aws/k8s/cluster/o-12we32df?accountId=act-7461123d"
                        },
                        "method": {
                          "type": "string",
                          "example": "DELETE"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2019-06-18T07:59:45.892Z"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:aws:k8s"
                        },
                        "items": {
                          "type": "array"
                        },
                        "count": {
                          "type": "integer",
                          "example": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Virtual Node Group",
        "description": "Update launch specification.\n",
        "operationId": "OceanAWSLaunchSpecUpdate",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          },
          {
            "in": "path",
            "name": "autoApplyTags",
            "example": true,
            "default": false,
            "description": "Ocean cluster launchSpec ID. Can get launchSpec ID with get call.\n",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "launchSpec": {
                    "type": "object",
                    "title": "AWS Cluster",
                    "required": [
                      "oceanId"
                    ],
                    "properties": {
                      "oceanId": {
                        "type": "string",
                        "example": "o-123",
                        "description": "The Ocean cluster ID. required for launchSpec create.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "specialty.nodes.spotk8s.com",
                        "description": "Set Launch Specification name\n"
                      },
                      "imageId": {
                        "type": "string",
                        "example": "ami-ID",
                        "description": "Set image ID. Can be null\n"
                      },
                      "userData": {
                        "type": "string",
                        "example": "dsa89d7uosduxq98sau9s8aux9s8aux09q0qu09axsuix0s9qas09xz",
                        "description": "Set user data script in Base64-encoded MIME\n"
                      },
                      "iamInstanceProfile": {
                        "type": "object",
                        "title": "auto-scaler",
                        "description": "The instance profile iamRole object",
                        "properties": {
                          "arn": {
                            "type": "string",
                            "example": "arn:aws:iam::123456781234:instance-profile/EKS-nodes-test-NodeInstanceProfile-ABCDEFGH123",
                            "description": "The iamRole arn. If set - do not set launchSpec.iamInstanceProfile.name"
                          },
                          "name": {
                            "type": "string",
                            "description": "The iamRole name. If set - do not set launchSpec.iamInstanceProfile.arn",
                            "example": "EKS-nodes-test"
                          }
                        }
                      },
                      "securityGroupIds": {
                        "type": "array",
                        "description": "Set security groups. Each element in array should be security group ID",
                        "items": {
                          "type": "string",
                          "example": [
                            "sg-0ded3a2980208c30c",
                            "sg-0ded3a2980208c30d"
                          ]
                        }
                      },
                      "instanceTypes": {
                        "type": "array",
                        "description": "A list of instance types allowed to be provisioned for pods pending for the launch specification.\\\nThe list overrides the list defined for the Ocean cluster. Can be null.\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "c3.2xlarge",
                            "c4.2xlarge"
                          ]
                        }
                      },
                      "rootVolumeSize": {
                        "type": "integer",
                        "description": "Set root volume size (in GB). This field and blockDeviceMappings cannot be used in the same spec.",
                        "example": 8
                      },
                      "labels": {
                        "type": "array",
                        "description": "An array of labels to add to the Launch Spec instances. Custom user labels only, no K8s built in labels or Spot internal labels.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set label key.\\\nMay not be one of the following:\n* kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"'\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set label value"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "env",
                            "value": "test"
                          }
                        ]
                      },
                      "taints": {
                        "type": "array",
                        "description": "Add taints to Launch Spec",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set taint key"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set taint value"
                            },
                            "effect": {
                              "type": "string",
                              "description": "Set taint effect"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "taintKey",
                            "value": "taintValue",
                            "effect": "NoSchedule"
                          }
                        ]
                      },
                      "subnetIds": {
                        "type": "array",
                        "description": "Set subnets in launchSpec. Each element in array should be subnet ID",
                        "items": {
                          "type": "string",
                          "example": [
                            "subnet-123",
                            "subnet-456"
                          ]
                        }
                      },
                      "elasticIpPool": {
                        "type": "object",
                        "description": "Assign an Elastic IP to the instances spun by the launch spec. Can be null.",
                        "properties": {
                          "tagSelector": {
                            "type": "object",
                            "description": "Key-value object, which defines an Elastic IP from the customer pool. Can be null.\n",
                            "properties": {
                              "tagKey": {
                                "type": "string",
                                "description": "Elastic IP tag key. The launch spec will consider all elastic IPs tagged with this tag as a part of the elastic IP pool to use.\n",
                                "example": "color"
                              },
                              "tagValue": {
                                "type": "string",
                                "description": "Elastic IP tag value. Can be null.\n",
                                "example": "orange"
                              }
                            }
                          }
                        }
                      },
                      "autoScale": {
                        "type": "object",
                        "properties": {
                          "headrooms": {
                            "description": "Set custom headroom per launch spec. provide a list of launchSpec.autoscale.headrooms objects\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "cpuPerUnit": {
                                  "description": "Configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU\n",
                                  "type": "integer",
                                  "example": 1024
                                },
                                "memoryPerUnit": {
                                  "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                  "type": "integer",
                                  "example": 512
                                },
                                "numOfUnits": {
                                  "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                  "type": "integer",
                                  "example": 2
                                },
                                "gpuPerUnit": {
                                  "type": "integer",
                                  "description": "How much GPU allocate for headroom unit\n",
                                  "example": 0
                                }
                              }
                            }
                          }
                        }
                      },
                      "tags": {
                        "type": "array",
                        "description": "List of kay-value pairs of tags.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "tagKey": {
                              "type": "string",
                              "description": "Set the tag key.\n",
                              "example": "Creator"
                            },
                            "tagValue": {
                              "type": "string",
                              "description": "Set the tag value.\n",
                              "example": "John Doe"
                            }
                          }
                        }
                      },
                      "blockDeviceMappings": {
                        "type": "array",
                        "description": "Block devices that are exposed to the instance. You can specify virtual devices and EBS volumes.\\\nThis parameter and rootVolumeSize cannot be in the spec at the same time.\\\nThis parameter can be null, but if not null, it must contain at least one block device.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deviceName": {
                              "type": "string",
                              "description": "Set device name.\n",
                              "example": "/dev/xvda"
                            },
                            "ebs": {
                              "type": "object",
                              "description": "Set EBS properties.\n",
                              "properties": {
                                "throughput": {
                                  "type": "integer",
                                  "minimum": 125,
                                  "maximum": 1000,
                                  "example": 125,
                                  "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=âgp3â.\n"
                                },
                                "deleteOnTermination": {
                                  "type": "boolean",
                                  "description": "Flag to delete the EBS on instance termination.\n",
                                  "example": false
                                },
                                "encrypted": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "iops": {
                                  "type": "integer",
                                  "description": "Must be greater than or equal to 0.\n",
                                  "example": 1
                                },
                                "kmsKeyId": {
                                  "type": "string",
                                  "example": "alias/aws/ebs"
                                },
                                "snapshotId": {
                                  "type": "string",
                                  "example": "snap-abcdefghi111110"
                                },
                                "volumeType": {
                                  "type": "string",
                                  "description": "Set volume type.\n",
                                  "example": "gp2"
                                },
                                "volumeSize": {
                                  "type": "integer",
                                  "description": "Set volume size (in GB). When using this property, you cannot use dynamicVolumeSize.\\\nYou must use one of the other. Volume size should be greater or equal than the size configured in the AMI.\n"
                                },
                                "dynamicVolumeSize": {
                                  "type": "object",
                                  "description": "Set dynamic volume size properties. When using this object, you cannot use volumeSize.\\\nYou must use one or the other.\n",
                                  "properties": {
                                    "baseSize": {
                                      "type": "integer",
                                      "required": true,
                                      "description": "Initial size per volume.\n",
                                      "example": 50
                                    },
                                    "resource": {
                                      "type": "string",
                                      "required": true,
                                      "example": "CPU"
                                    },
                                    "sizePerResourceUnit": {
                                      "type": "integer",
                                      "description": "Additional size per resource unit (in GB).\\\nFor example: if baseSize=50, and sizePerResourceUnit=20, and an instance with 2 CPU is launched - its disk size will be: 90GB\n",
                                      "example": 20
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "resourceLimits": {
                        "type": "object",
                        "properties": {
                          "maxInstanceCount": {
                            "description": "Option to set a maximum number of instances per launch specification.\\\nCan be null. If set, value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 5
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "description": "LaunchSpec Strategy\n",
                        "properties": {
                          "spotPercentage": {
                            "type": "integer",
                            "description": "The desired percentage of the Spot instances out of all running instances. Defaults to 100 when not set.\\\nOnly available when the field is **not** set in the cluster direcly (Ocean.Strategy.spotPercentage)\n",
                            "minimum": 0,
                            "maximum": 100,
                            "example": 70,
                            "default": 100
                          }
                        }
                      },
                      "associatePublicIpAddress": {
                        "type": "boolean",
                        "description": "Configure public IP address allocation",
                        "default": false,
                        "example": false
                      },
                      "restrictScaleDown": {
                        "type": "boolean",
                        "description": "When set to âTrueâ, VNG nodes will be treated as if all pods running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints).\nTherefore, Ocean will not scale nodes down unless empty.\n",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Virtual Node Group",
        "operationId": "OceanAWSLaunchSpecGet",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchspec/autoScalingGroup/import": {
      "summary": "Ocean for AWS",
      "delete": {
        "summary": "Import ASG To Ocean Virtual Node Group",
        "description": "Returns an Ocean Virtual Node Group (VNG) spec by a given AWS autoscaling group (ASG). The returned value (\"Imported VNG\") can then be used as input to the Create Virtual Node Group API in order to create an actual VNG in your Ocean cluster.\n",
        "operationId": "oceanAwsImportAsgToLaunchSpec",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "in": "path",
            "name": "autoScalingGroupName",
            "description": "The ASG name.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "oceanId": {
                      "type": "string",
                      "example": "o-500a5d5a"
                    },
                    "name": {
                      "type": "string",
                      "example": "TestTeam1"
                    },
                    "imageId": {
                      "type": "string",
                      "example": "ami-0ce21b51cb55a48b8"
                    },
                    "securityGroupIds": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": [
                          "subnet-00cab2dd9f40a9883",
                          "subnet-0df9d512c7cbbd9e1"
                        ]
                      }
                    },
                    "tags": {
                      "type": "object",
                      "properties": {
                        "tagKey": {
                          "type": "string",
                          "example": "AmazonECSManaged"
                        },
                        "tagValue": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/onPrem/k8s/cluster": {
      "summary": "Ocean for AWS",
      "post": {
        "summary": "Ocean On-Premise - Create",
        "description": "Create a new Ocean On-Prem entity.\n### Prerequisites\nThe Spot Controller is used to monitor the cluster resources and report back to Ocean and is required for Ocean On-Prem. To install the Spot Controller, complete and run the following script on a machine with kubectl command line tool installed and configured:\n```\n  #!/usr/bin/env bash\n  curl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\n  SPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\n  SPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\n  SPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\n  bash\n```\n<br /> For more on the Spot controller and Ocean's anatomy see the documentation [here](https://docs.spot.io/ocean-aws/kubernetes/concepts/ocean-cloud/introduction/#ocean-anatomy).\n",
        "operationId": "oceanCreateOnPrem",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "title": "AWS Cluster",
                        "required": [
                          "name",
                          "controllerClusterIdentifier",
                          "pricePerUnit"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "oceanName",
                            "description": "The name of the cluster.\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "Development",
                            "description": "Optionally provide a description.\n"
                          },
                          "controllerClusterIdentifier": {
                            "type": "string",
                            "description": "The cluster Id where the Ocean controller is installed.",
                            "example": "k8sCluster"
                          },
                          "pricePerUnit": {
                            "type": "object",
                            "title": "Price Per Unit",
                            "description": "Ocean will monitor the costs of each resource unit.",
                            "required": [
                              "cpuHour",
                              "memoryHour"
                            ],
                            "properties": {
                              "cpuHour": {
                                "type": "number",
                                "format": "float",
                                "example": 0.015,
                                "description": "The cost per cpu unit (core) hour for the cluster.\n"
                              },
                              "memoryHour": {
                                "type": "number",
                                "format": "float",
                                "example": 0.002,
                                "description": "The cost per memory unit (GiB) hour for the cluster.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1onPrem~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Ocean On-Premise - List",
        "description": "List the configurations for all Ocean cluster in the specified account.\n",
        "operationId": "list-all-ocean-onprem",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean On-Premise Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "description": "Response package that includes, status, type and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200,
                              "description": "HTTP status code assigned to this response\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:onprem:k8s"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "o-18887922"
                            },
                            "name": {
                              "type": "string",
                              "example": "oceanName"
                            },
                            "description": {
                              "type": "string",
                              "example": "development"
                            },
                            "controllerClusterIdentifier": {
                              "type": "string",
                              "example": "k8sCluster"
                            },
                            "pricePerUnit": {
                              "type": "object",
                              "properties": {
                                "cpuHour": {
                                  "type": "number",
                                  "format": "float",
                                  "example": 0.015
                                },
                                "memoryHour": {
                                  "type": "number",
                                  "format": "float",
                                  "example": 0.002
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2018-11-26T09:39:52.933Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2018-11-26T09:39:52.933Z"
                            }
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/onPrem/k8s/cluster/{CLUSTER_ID}": {
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete an Ocean On-Prem cluster entity in Spot Ocean. This **DOES NOT** affect your on-prem cluster.\n",
        "operationId": "oceanOnPremDelete",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "CLUSTER_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-1abcd124",
            "description": "The ID of the Ocean cluster to delete.\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for the specified Ocean On-Prem cluster entity.\n",
        "operationId": "oceanOnPremGet",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1onPrem~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean on-prem parameters are updatable. This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "oceanOnPremUpdate",
        "tags": [
          "Ocean On-Premise"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1onPrem~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "object"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1onPrem~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance": {
      "post": {
        "summary": "Create Managed Instance",
        "description": "Create a new Managed Instance resource.\n",
        "operationId": "AWSManagedInstanceCreate",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "managedInstance": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "required": true,
                            "type": "string",
                            "example": "mi-test",
                            "description": "Managed Instance name\n"
                          },
                          "description": {
                            "type": "string",
                            "example": "This is my Managed Instance",
                            "description": "Describe your Managed Instance resource\n"
                          },
                          "region": {
                            "required": true,
                            "type": "string",
                            "example": "us-east-1",
                            "description": "The AWS region your resource will be created in.\n"
                          },
                          "strategy": {
                            "type": "object",
                            "title": "MI Strategy",
                            "properties": {
                              "lifeCycle": {
                                "type": "string",
                                "example": "spot",
                                "required": false,
                                "description": "Set lifecycle, valid values: `spot`, `on_demand` Default: spot\n"
                              },
                              "orientation": {
                                "type": "string",
                                "example": "availabilityOriented",
                                "required": false,
                                "description": "The strategy orientation. valid values: `costOriented`, `availabilityOriented`, `balanced`, `cheapest` Default: availabilityOriented\n"
                              },
                              "drainingTimeout": {
                                "type": "integer",
                                "required": false,
                                "description": "The time in seconds to allow the instance be drained from incoming TCP connections and detached from ELB before terminating it, during a scale down operation\n"
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "example": true,
                                "required": false,
                                "description": "In case of no spots available, Managed Instance will launch an On-demand instance instead Default: true\n"
                              },
                              "utilizeReservedInstances": {
                                "type": "boolean",
                                "default": false,
                                "example": true,
                                "description": "In case of any available Reserved Instances, Managed Instance will utilize them before purchasing Spot instances Default: false\n"
                              },
                              "optimizationWindows": {
                                "type": "array",
                                "description": "When performAt is 'timeWindow': must specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59\n",
                                "items": {
                                  "type": "string",
                                  "example": "Mon:03:00-Wed:02:30"
                                }
                              },
                              "revertToSpot": {
                                "type": "object",
                                "title": "When Elastigroup moves from OnDemand back to Spot capacity",
                                "properties": {
                                  "performAt": {
                                    "type": "string",
                                    "example": "timeWindow",
                                    "enum": [
                                      "never",
                                      "always",
                                      "timeWindow"
                                    ],
                                    "description": "Valid values: `always`, `never`, \"timeWindow\" Example: never Default: never\n"
                                  }
                                }
                              }
                            }
                          },
                          "compute": {
                            "type": "object",
                            "title": "MI Compute",
                            "properties": {
                              "subnetIds": {
                                "required": true,
                                "type": "array",
                                "description": "A comma-separated list of subnet identifiers for your instance.\n",
                                "items": {
                                  "type": "string",
                                  "example": "subnet-79da021e"
                                }
                              },
                              "vpcId": {
                                "type": "string",
                                "example": "vpc-111",
                                "required": true,
                                "description": "VPC ID for your instance.\n"
                              },
                              "elasticIp": {
                                "type": "string",
                                "required": false,
                                "example": "ip",
                                "description": "Elastic IP Allocation Id to associate to the instance\n"
                              },
                              "privateIp": {
                                "type": "string",
                                "example": "ip",
                                "required": false,
                                "description": "Private IP Allocation Id to associate to the instance\n"
                              },
                              "product": {
                                "type": "string",
                                "required": true,
                                "example": "Linux/UNIX",
                                "description": "Operation system type. Possible values: Linux/UNIX, SUSE Linux, Windows, Red Hat Enterprise Linux In case of EC2 classic: Linux/UNIX (Amazon VPC), SUSE Linux (Amazon VPC), Windows (Amazon VPC), Red Hat Enterprise Linux (Amazon VPC)\n"
                              },
                              "launchSpecification": {
                                "type": "object",
                                "properties": {
                                  "instanceTypes": {
                                    "type": "object",
                                    "properties": {
                                      "preferredType": {
                                        "type": "string",
                                        "required": true,
                                        "example": "t2.micro",
                                        "description": "Comma separated list of available instance types for instance\n"
                                      },
                                      "types": {
                                        "type": "array",
                                        "description": "Set instance types settings\n",
                                        "items": {
                                          "type": "string",
                                          "example": "t2.micro"
                                        }
                                      }
                                    }
                                  },
                                  "ebsOptimized": {
                                    "type": "boolean",
                                    "example": false,
                                    "description": "Enable EBS optimization for supported instance which is not enabled by default. Note - additional charges will be applied. Default: false\n"
                                  },
                                  "monitoring": {
                                    "type": "boolean",
                                    "example": false,
                                    "description": "Describes whether instance Enhanced Monitoring is enabled. Default: false\n"
                                  },
                                  "tenancy": {
                                    "type": "string",
                                    "example": "default",
                                    "description": "Valid values: \"default\", \"dedicated\" Default: default\n"
                                  },
                                  "iamRole": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "name"
                                      },
                                      "arn": {
                                        "type": "string",
                                        "example": "arn"
                                      }
                                    }
                                  },
                                  "securityGroupIds": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "sg-0dfc2c8760df6fec7"
                                    }
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-01e24be29428c15b2"
                                  },
                                  "keyPair": {
                                    "type": "string",
                                    "example": "labs-oregon"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "example": "Creator"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "example": "test1@spot.io"
                                        }
                                      }
                                    }
                                  },
                                  "resourceTagSpecification": {
                                    "type": "object",
                                    "description": "Optional field. User will specified which resources should be tagged with group tags.",
                                    "properties": {
                                      "volumes": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Volume resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Volume resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "snapshots": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for Snapshot resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. Snapshot resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      },
                                      "enis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for ENI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. ENI resources will be tagged with group tags.",
                                            "default": false,
                                            "example": false
                                          }
                                        }
                                      },
                                      "amis": {
                                        "type": "object",
                                        "description": "Optional field. Tag specification for AMI resources.",
                                        "properties": {
                                          "shouldTag": {
                                            "type": "boolean",
                                            "description": "Optional field. AMI resources will be tagged with group tags.",
                                            "default": true,
                                            "example": true
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "userData": {
                                    "type": "string",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "shutdownScript": {
                                    "type": "string",
                                    "example": "dXNlcmJhc2g2NGVuY29kZWQ="
                                  },
                                  "creditSpecification": {
                                    "type": "object",
                                    "properties": {
                                      "cpuCredits": {
                                        "type": "string",
                                        "example": "unlimited"
                                      }
                                    }
                                  },
                                  "networkInterfaces": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceIndex": {
                                          "type": "integer",
                                          "example": 0
                                        },
                                        "associatePublicIpAddress": {
                                          "type": "boolean",
                                          "example": true
                                        },
                                        "associateIpv6Address": {
                                          "type": "boolean",
                                          "example": true
                                        }
                                      }
                                    }
                                  },
                                  "blockDeviceMappings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "deviceName": {
                                          "type": "string",
                                          "example": "/dev/xvdcz"
                                        },
                                        "ebs": {
                                          "type": "object",
                                          "properties": {
                                            "iops": {
                                              "type": "integer",
                                              "minimum": 0,
                                              "description": "Must be greater than or equal to 0\n",
                                              "example": 0
                                            },
                                            "throughput": {
                                              "type": "integer",
                                              "minimum": 125,
                                              "maximum": 1000,
                                              "example": 125,
                                              "description": "The amount of data transferred to or from a storage device per second, you can use this param just in a case that volumetype=âgp3â.\n"
                                            },
                                            "deleteOnTermination": {
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "volumeSize": {
                                              "type": "integer",
                                              "example": 12
                                            },
                                            "volumeType": {
                                              "type": "string",
                                              "example": "gp2"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "integrations": {
                            "type": "object",
                            "title": "MI integrations",
                            "properties": {
                              "loadBalancersConfig": {
                                "type": "object",
                                "properties": {
                                  "loadBalancers": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "example": "name"
                                            },
                                            "arn": {
                                              "type": "string",
                                              "example": "arn"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "MULTAI_TARGET_SET",
                                              "description": "The resource type. Valid Values: CLASSIC, TARGET_GROUP, MULTAI_TARGET_SET\n"
                                            },
                                            "balancerId": {
                                              "type": "string",
                                              "example": "lb-1ee2e3q"
                                            },
                                            "targetSetId": {
                                              "type": "string",
                                              "example": "ts-3eq"
                                            },
                                            "azAwerness": {
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "autoWeight": {
                                              "type": "boolean",
                                              "example": true
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "route53": {
                                "type": "object",
                                "properties": {
                                  "domains": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "hostedZoneId": {
                                              "type": "string",
                                              "example": "Z00275642KS5ZZJFIQBCA"
                                            },
                                            "recordSetType": {
                                              "type": "string",
                                              "example": "a"
                                            },
                                            "spotinstAccountId": {
                                              "type": "string",
                                              "example": "act-1234"
                                            },
                                            "recordSets": {
                                              "type": "array",
                                              "items": {
                                                "anyOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "usePublicIp": {
                                                        "type": "boolean",
                                                        "example": true
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "example": "testa.spot.io"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "scheduling": {
                            "type": "object",
                            "title": "MI Scheduling",
                            "properties": {
                              "tasks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "Task Definition",
                                  "properties": {
                                    "taskType": {
                                      "type": "string",
                                      "example": "scale",
                                      "enum": [
                                        "backup_ami",
                                        "scale",
                                        "scaleUp",
                                        "roll",
                                        "statefulUpdateCapacity",
                                        "statefulRecycle"
                                      ],
                                      "description": "The task type to run.\n"
                                    },
                                    "startTime": {
                                      "type": "string",
                                      "example": "2018-05-23T10:55:09.000Z",
                                      "description": "DATETIME in ISO-8601 format. Sets a start time for scheduled actions. If `frequency` or `cronExpression` are not used - the task will run only once at the start time and will then be deleted from the group configuration\n"
                                    },
                                    "cronExpression": {
                                      "type": "string",
                                      "example": "0 1 * * *",
                                      "description": "A valid cron expression. For example : \" * * * * * \". The cron is running in UTC time zone and is in Unix cron format Cron Expression Validator Script. Only one of âfrequency' or âcronExpression' should be used at a time.\n"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "default": true,
                                      "example": true,
                                      "description": "Describes whether the task is enabled. When true the task should run when false it should not run.\n"
                                    },
                                    "frequency": {
                                      "type": "string",
                                      "enum": [
                                        "hourly",
                                        "daily",
                                        "weekly"
                                      ],
                                      "description": "The recurrence frequency to run this task. Only one of `frequency` or `cronExpression` should be used at a time\n"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "persistence": {
                            "type": "object",
                            "description": "Persistence settings. Should omit at least one of the persist options below.\n",
                            "properties": {
                              "blockDevicesMode": {
                                "type": "string",
                                "example": "reattach",
                                "description": "Determine the way we attach the data volumes to the data devices.\n",
                                "enum": [
                                  "reattach",
                                  "onLaunch"
                                ],
                                "default": "onLaunch"
                              },
                              "persistRootDevice": {
                                "type": "boolean",
                                "example": true,
                                "description": "Should the instance maintain its root device volumes\n"
                              },
                              "persistBlockDevices": {
                                "type": "boolean",
                                "example": true,
                                "description": "Should the instance maintain its Data volumes\n"
                              },
                              "persistPrivateIp": {
                                "type": "boolean",
                                "example": true,
                                "description": "Should the instance maintain its private IP\n"
                              }
                            }
                          },
                          "healthCheck": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "EC2",
                                "description": "The service to use for the health check.\n",
                                "enum": [
                                  "EC2",
                                  "ELB",
                                  "TARGET_GROUP",
                                  "MULTAI_TARGET_SET"
                                ],
                                "default": "EC2"
                              },
                              "autoHealing": {
                                "type": "boolean",
                                "example": true,
                                "description": "Enable the auto healing which auto replaces the instance in case the health check fails\n",
                                "default": true
                              },
                              "gracePeriod": {
                                "type": "integer",
                                "example": 120,
                                "description": "The amount of time, in seconds, after the instance has launched to starts and check its health.\n",
                                "default": 120
                              },
                              "unhealthyDuration": {
                                "type": "integer",
                                "example": 120,
                                "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy.\\\nAfter the set time out the instance will be replaced\n",
                                "default": 120
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Managed Instances",
        "description": "List all Managed Instance resources in the account.\n",
        "operationId": "AWSManagedInstanceList",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-04-10T21:41:31.000Z"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2020-05-12T22:37:18.000Z"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "smi-34ae3a42"
                                  },
                                  "config": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "mi-test",
                                        "description": "Managed Instance name\n"
                                      },
                                      "region": {
                                        "required": true,
                                        "type": "string",
                                        "example": "us-east-1",
                                        "description": "The AWS region your resource will be created in.\n"
                                      },
                                      "strategy": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/strategy"
                                      },
                                      "persistence": {
                                        "type": "object",
                                        "description": "Persistence settings. Should omit at least one of the persist options below.\n",
                                        "properties": {
                                          "blockDevicesMode": {
                                            "type": "string",
                                            "example": "reattach",
                                            "description": "Determine the way we attach the data volumes to the data devices. Valid values: âreattach', âonLaunch' Default: onLaunch\n"
                                          },
                                          "persistRootDevice": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Should the instance maintain its root device volumes\n"
                                          },
                                          "persistBlockDevices": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Should the instance maintain its Data volumes\n"
                                          },
                                          "persistPrivateIp": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Should the instance maintain its private IP\n"
                                          }
                                        }
                                      },
                                      "healthCheck": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "EC2",
                                            "description": "The service to use for the health check. Valid values: `EC2`, `ELB`, `TARGET_GROUP`, `MULTAI_TARGET_SET` Default: EC2\n"
                                          },
                                          "autoHealing": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Enable the auto healing which auto replaces the instance in case the health check fails Default: true\n"
                                          },
                                          "gracePeriod": {
                                            "type": "integer",
                                            "example": 120,
                                            "description": "The amount of time, in seconds, after the instance has launched to starts and check its health. Default: 120\n"
                                          },
                                          "unhealthyDuration": {
                                            "type": "integer",
                                            "example": 120,
                                            "description": "The amount of time, in seconds, an existing instance should remain active after becoming unhealthy. After the set time out the instance will be replaced Default: 120\n"
                                          }
                                        }
                                      },
                                      "compute": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/compute"
                                      },
                                      "integrations": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/integrations"
                                      },
                                      "scheduling": {
                                        "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0/properties/managedInstance/properties/scheduling"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}": {
      "put": {
        "summary": "Update Managed Instance",
        "description": "<ul> <li>Update one or more attributes in your Managed Instance.\n<li>This API supports partial updates, so only specific fields can be updated separately.\n<li>In order to remove a setting from the instance config, set the object value to null.\n<li>For a Full List of the Elastigroup JSON object reference please see Managed Instance Create. <ul>\n",
        "operationId": "AWSManagedInstanceUpdate",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "MI_ID",
            "example": "smi-111",
            "description": "Managed Instance ID you want to get\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Managed Instance",
        "description": "Get specific Managed Instance config.\n",
        "operationId": "AWSManagedInstanceGet",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Managed Instance",
        "description": "Get specific Managed Instance config.\n",
        "operationId": "AWSManagedInstanceDelete",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "deallocationConfig": {
                        "type": "object",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove persistent image\nDefault: false\n"
                          },
                          "shouldDeleteNetworkInterfaces": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove network interfaces\nDefault: false\n"
                          },
                          "shouldDeleteVolumes": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove persistent volumes\nDefault: false\n"
                          },
                          "shouldDeleteSnapshots": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to remove snapshots\nDefault: false\n"
                          },
                          "shouldTerminateInstance": {
                            "type": "boolean",
                            "example": true,
                            "description": "Flag to detach a machine without terminating it on AWS side. This will enable rollback to AWS.\nExample: false\n"
                          }
                        }
                      },
                      "amiBackup": {
                        "type": "object",
                        "properties": {
                          "shouldDeleteImages": {
                            "type": "boolean",
                            "example": true,
                            "description": "Mark if images collected during AMI Auto Backup should be deleted during instance deletion\nDefault: false\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/pause": {
      "put": {
        "summary": "Pause Managed Instance",
        "description": "Pause an existing Managed Instance.\n",
        "operationId": "AWSManagedInstancePause",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/resume": {
      "put": {
        "summary": "Resume Managed Instance",
        "description": "Resume an existing Managed Instance.\n",
        "operationId": "AWSManagedInstanceResume",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/recycle": {
      "put": {
        "summary": "Recycle Managed Instance",
        "description": "Recycle an existing Managed Instance.\n",
        "operationId": "AWSManagedInstanceRecycle",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/costs": {
      "get": {
        "summary": "Get Managed Instance Costs",
        "description": "Get financial information on a specific managed instance.\nTo use this API, managedInstanceId must be defined.\n",
        "operationId": "AWSManagedInstanceCostsPerManagedInstance",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1events/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D~1events/get/parameters/3"
          },
          {
            "in": "query",
            "name": "aggregationPeriod",
            "schema": {
              "type": "string"
            },
            "description": "Data values following either a date format (YYYY-MM-DDTHH:mm:ss.SSSZ ; 2016-01-10T00:00:00.000Z) or Unix seconds Timestamp (1494751821)\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Elastigroup Costs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "running": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "example": 4
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "hours"
                                      }
                                    }
                                  },
                                  "savings": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "unit": {
                                        "type": "string",
                                        "example": "percentage"
                                      }
                                    }
                                  },
                                  "costs": {
                                    "type": "object",
                                    "properties": {
                                      "actual": {
                                        "type": "integer",
                                        "example": 0.268
                                      },
                                      "potential": {
                                        "type": "integer",
                                        "example": 0.268
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstance:costs"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/{MI_ID}/status": {
      "get": {
        "summary": "Get Managed Instance Status",
        "description": "Describes the current status of a specific Managed Instance â entailing information regarding running instance and its status.\n",
        "operationId": "AWSManagedInstanceStatus",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "smi-50739ad2"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "i-0db00q51ec9069ebf"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "ACTIVE"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-0vc9530daq19c4aad"
                                  },
                                  "instanceType": {
                                    "type": "string",
                                    "example": "t2.micro"
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "example": "ami-03238ecdbdc7d6d6a"
                                  },
                                  "privateIp": {
                                    "type": "string",
                                    "example": "172.31.10.21"
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "example": "34.212.65.224"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-05-05T08:53:12.000Z"
                                  },
                                  "launchedAt": {
                                    "type": "string",
                                    "example": "2020-05-05T08:53:12.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:aws:ec2:managedInstanceStatus"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/migration": {
      "post": {
        "summary": "Import Instance from AWS",
        "description": "<ul> <li>Import an instance from AWS into Managed Instance, while keeping the instance data and its persistence settings.\n<li>This call is starting the migration and returns migration ID.\n<li>In order to get migration status use the Get Migration Status call <ul>\n",
        "operationId": "AWSManagedInstanceImportInstanceFromAWS",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "migration": {
                        "title": "Migration",
                        "description": "Migration Configuration",
                        "type": "object",
                        "properties": {
                          "shouldKeepPrivateIp": {
                            "required": true,
                            "type": "boolean",
                            "example": false,
                            "description": "Set whether the instance should keep its private ip or not\n"
                          },
                          "originalInstanceId": {
                            "required": true,
                            "type": "string",
                            "example": "i-123",
                            "description": "The instance ID on AWS\n"
                          },
                          "region": {
                            "required": true,
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Set instance's region\n"
                          },
                          "shouldTerminateInstance": {
                            "type": "boolean",
                            "example": false,
                            "description": "Set true or false whether to terminate the instance in AWS. Note: If shouldKeepPrivateIp is true, then shouldTerminateInstance must be true. Otherwise an error will be returned.\n"
                          },
                          "managedInstanceName": {
                            "type": "string",
                            "example": "us-east-1",
                            "description": "Set Managed Instance name\n"
                          },
                          "product": {
                            "type": "string",
                            "example": "Linux/UNIX",
                            "description": "Set instance's product\n"
                          },
                          "spotInstanceTypes": {
                            "type": "array",
                            "description": "List of possible instance types for the Managed Instance\n",
                            "items": {
                              "type": "string",
                              "example": "m3.large"
                            }
                          },
                          "availabilityZones": {
                            "title": "Availability Zones",
                            "description": "List of availability zones for the Managed Instance. Should exist only if shouldKeepPrivateIp is false.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Region's Name",
                                  "example": "us-west-2c"
                                },
                                "subnetIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "subnet-fdfb00a0"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "migrationId": {
                                    "type": "string",
                                    "example": "smg-123"
                                  },
                                  "managedInstanceId": {
                                    "type": "string",
                                    "example": "smi-123"
                                  },
                                  "data": {
                                    "type": "object",
                                    "properties": {
                                      "originalInstanceId": {
                                        "type": "string",
                                        "example": "i-123"
                                      },
                                      "shouldKeepPrivateIp": {
                                        "type": "boolean",
                                        "example": true
                                      }
                                    }
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_START"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "potinst:aws:ec2:managedInstance:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/aws/ec2/managedInstance/migration/{MIGRATION_ID}": {
      "get": {
        "summary": "Get Instance Migration Status",
        "description": "<ul> <li>Get a previously initiated instance migration status.\n<li>To initiate an instance migration from AWS use the Import Instance From AWS call.\n<li>On initiation, the migration would be in the following state: `MIGRATE_START`.\n<li>Possible end states for the migration are: `MIGRATE_CANCEL`, `MIGRATE_FINISH`, `MIGRATE_ERROR`. <ul>\n",
        "operationId": "AWSManagedInstanceGetInstanceMigrationStatus",
        "tags": [
          "Managed Instance AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1aws~1ec2~1managedInstance~1%7BMI_ID%7D/put/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Elastigroup Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "migrationId": {
                                    "type": "string",
                                    "example": "smg-123"
                                  },
                                  "managedInstanceId": {
                                    "type": "string",
                                    "example": "smi-123"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "MIGRATE_START"
                                  },
                                  "instanceId": {
                                    "type": "string",
                                    "example": "i-123"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "potinst:aws:ec2:managedInstance:migration"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/audit/events": {
      "get": {
        "summary": "List Audit Log Events",
        "description": "Gets audit events that have response status of 200. This is the default when the responseStatus parameter is not included in the query. When you use responseStatus in the query, you can get all audit events without regard to status.\n\nThe API requires one of the following permissions to be defined in Spot:\n\n* Permission: Organization Viewer (See User Roles) or\n* Action: setup:describeAllAuditEvents (See Access Policies)\n",
        "operationId": "AuditServiceListAll",
        "tags": [
          "Audit Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "fromDate",
            "required": true,
            "description": "Get items on or after this date (Unix timestamp)",
            "example": "1598918400000",
            "schema": {
              "type": "unix",
              "format": "string"
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": true,
            "description": "Get items on or before this date (Unix timestamp)",
            "example": "1598918400000",
            "schema": {
              "type": "unix",
              "format": "string"
            }
          },
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "query",
            "name": "responseStatus",
            "example": "all",
            "description": "Determines whether the audit events should be filtered by their response status code or not. Valid values: \"success\": Gets only events with status 200. \"all\": Audit events will not be filtered by response status codes, and all the events will be returned. Default: success\n",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "All Response Statuses (responseStatus=all)",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "type": "string",
                                    "example": "test@spot.io"
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "example": "GENERAL"
                                  },
                                  "actionType": {
                                    "type": "string",
                                    "example": "Sign in with SSO"
                                  },
                                  "resourceType": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "resourceId": {
                                    "type": "string",
                                    "example": 21126
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-06-01T12:17:51.000Z"
                                  },
                                  "context": {
                                    "type": "string",
                                    "example": "{\"body\":{\"email\":\"test@spot.io\",\"isMarketplaceCustomer\":false},\"url\":\"/signIn/sso\",\"query\":{}}"
                                  },
                                  "source": {
                                    "type": "string",
                                    "example": "UI"
                                  },
                                  "agent": {
                                    "type": "string",
                                    "example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.9.1667.012 Safari/537.36"
                                  },
                                  "responseStatus": {
                                    "type": "integer",
                                    "example": 200
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:audit"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/healthCheck": {
      "post": {
        "summary": "Create Health Check",
        "description": "Create an HCS for Spot Elastigroup.\n",
        "operationId": "HealthCheckServiceCreate",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "healthCheck"
                    ],
                    "properties": {
                      "healthCheck": {
                        "type": "object",
                        "description": "Group",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "example": 21126,
                            "required": true,
                            "description": "Spot Resource ID\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "Service-1-healthCheck",
                            "description": "A logical name for the health check\n"
                          },
                          "proxyAddress": {
                            "type": "string",
                            "description": "The public hostname / IP where you installed the the Spot HCS\n",
                            "example": "51.22.125.47",
                            "required": true
                          },
                          "proxyPort": {
                            "description": "The port of the HCS.\nDefault: 80\n",
                            "type": "integer",
                            "example": 80
                          },
                          "check": {
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "type": "string",
                                "required": true,
                                "example": "http",
                                "description": "The protocol to use to connect with the instance. Valid values: http https\n"
                              },
                              "port": {
                                "description": "The port to use to connect with the instance\n",
                                "required": true,
                                "type": "integer",
                                "example": 80
                              },
                              "endpoint": {
                                "description": "The destination for the request\n",
                                "required": true,
                                "type": "string",
                                "example": "index.html"
                              },
                              "unhealthyThreshold": {
                                "description": "The number of consecutive failed health checks that must occur before declaring an instance unhealthy\n",
                                "required": true,
                                "type": "integer",
                                "example": 2
                              },
                              "healthyThreshold": {
                                "description": "The number of consecutive successful health checks that must occur before declaring an instance healthy\n",
                                "required": true,
                                "type": "integer",
                                "example": 2
                              },
                              "interval": {
                                "description": "The amount of time (in seconds) between each health check. Minimum value is 10\n",
                                "required": true,
                                "type": "integer",
                                "example": 30
                              },
                              "timeout": {
                                "description": "The amount of time (in seconds) to wait when receiving a response from the health check\n",
                                "required": true,
                                "type": "integer",
                                "example": 60
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1healthCheck/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Health Checks",
        "description": "Get a list of all HCS services.\n",
        "operationId": "HealthCheckServiceListAllHcs",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "resourceId": {
                                    "type": "string",
                                    "example": "sig-12345"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Service-1-healthCheck"
                                  },
                                  "proxyAddress": {
                                    "type": "string",
                                    "example": "51.22.125.47"
                                  },
                                  "proxyPort": {
                                    "type": "integer",
                                    "example": 80
                                  },
                                  "check": {
                                    "type": "object",
                                    "properties": {
                                      "protocol": {
                                        "type": "string",
                                        "example": "http"
                                      },
                                      "port": {
                                        "type": "integer",
                                        "example": 80
                                      },
                                      "endpoint": {
                                        "type": "string",
                                        "example": "index.html"
                                      },
                                      "unhealthyThreshold": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "healthyThreshold": {
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "interval": {
                                        "type": "integer",
                                        "example": 30
                                      },
                                      "timeout": {
                                        "type": "integer",
                                        "example": 60
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:healthCheck"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/healthCheck/{HEALTHCHECK_ID}": {
      "put": {
        "summary": "Update Health Check",
        "description": "Update existing HCS.\n",
        "operationId": "HealthCheckServiceUpdate",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "query",
            "name": "HEALTHCHECK_ID",
            "example": "hcs-123",
            "description": "The HCS you want to update\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "healthCheck"
                    ],
                    "properties": {
                      "healthCheck": {
                        "type": "object",
                        "description": "Group",
                        "properties": {
                          "check": {
                            "type": "object",
                            "properties": {
                              "unhealthyThreshold": {
                                "description": "The number of consecutive failed health checks that must occur before declaring an instance unhealthy\n",
                                "required": true,
                                "type": "integer",
                                "example": 2
                              },
                              "healthyThreshold": {
                                "description": "The number of consecutive successful health checks that must occur before declaring an instance healthy\n",
                                "required": true,
                                "type": "integer",
                                "example": 2
                              },
                              "interval": {
                                "description": "The amount of time (in seconds) between each health check. Minimum value is 10\n",
                                "required": true,
                                "type": "integer",
                                "example": 30
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Health Check",
        "description": "List the information of a particular HCS\n",
        "operationId": "HealthCheckServiceListHcs",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "query",
            "name": "HEALTHCHECK_ID",
            "example": "hcs-123",
            "description": "The HCS you want to update\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1healthCheck/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Health Check",
        "description": "Delete existing HCS\n",
        "operationId": "HealthCheckServiceDelete",
        "tags": [
          "Health Check Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "HEALTHCHECK_ID",
            "example": "hcs-123",
            "description": "The HCS you want to update\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/notification/accountPolicy": {
      "put": {
        "summary": "Update Account Notification Policy",
        "description": "Update the account notification policy\n",
        "operationId": "NotificationsServiceUpdateAccountNotificationPolicy",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "accountPolicy": {
                        "type": "object",
                        "properties": {
                          "emailPolicy": {
                            "type": "object",
                            "properties": {
                              "statements": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "category": {
                                      "type": "string",
                                      "example": "Elastigroup Errors",
                                      "description": "Event notification category\n"
                                    },
                                    "subCategory": {
                                      "type": "string",
                                      "example": "Launch instances failures",
                                      "description": "Event notification sub category (should match to the event category)\n"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to enable/disable the notification statement\n"
                                    },
                                    "applyOnFutureResources": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to set whether to auto apply on newly created resources\n"
                                    },
                                    "allowedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-1234",
                                            "description": "Set resource ID\n"
                                          }
                                        }
                                      }
                                    },
                                    "deniedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-9999",
                                            "description": "List of denied resources for the statement settings\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "slackPolicy": {
                            "type": "object",
                            "properties": {
                              "statements": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "category": {
                                      "type": "string",
                                      "example": "Elastigroup Errors",
                                      "description": "Event notification category\n"
                                    },
                                    "subCategory": {
                                      "type": "string",
                                      "example": "Launch instances failures",
                                      "description": "Event notification sub category (should match to the event category)\n"
                                    },
                                    "isEnabled": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to enable/disable the notification statement\n"
                                    },
                                    "applyOnFutureResources": {
                                      "type": "boolean",
                                      "example": true,
                                      "description": "Flag to set whether to auto apply on newly created resources\n"
                                    },
                                    "allowedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-1234",
                                            "description": "Set resource ID\n"
                                          }
                                        }
                                      }
                                    },
                                    "deniedResources": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": "sig-9999",
                                            "description": "List of denied resources for the statement settings\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Account Notification Policy",
        "description": "Get the account notification policy\n",
        "operationId": "NotificationsServiceGetAccountNotificationPolicy",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1events~1notification~1accountPolicy/put/requestBody/content/application~1json/schema/allOf/0"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/subscription": {
      "post": {
        "summary": "Subscribe",
        "description": "Create a notification for your resources\n",
        "operationId": "notificationsServiceSubscriptionsSubscribe",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "subscription"
                    ],
                    "properties": {
                      "subscription": {
                        "type": "object",
                        "description": "Group",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "example": "YOUR_ELASTIGROUP_ID || YOUR_OCEAN_ID || YOUR_MANAGED_INSTANCE_ID",
                            "description": "Spot Resource ID (Elastigroup, Ocean or Managed Instance ID)\nExample: sig-12345\n",
                            "required": true
                          },
                          "protocol": {
                            "type": "string",
                            "example": "aws-sns || email || email-json || web ",
                            "description": "The protocol to send the notification. Valid values: email email-json aws-sns web\nThe following values are deprecated: http https You can use the generic web protocol instead. aws-sns is only supported with AWS provider\n",
                            "required": true
                          },
                          "endpoint": {
                            "type": "string",
                            "example": "YOUR@EMAIL.COM || https://YOUR_ENDPOINT.COM || SNS_TOPIC_ARN",
                            "description": "The endpoint the notification will be sent to. url in case of http/https/web, email address in case of email/email-json and sns-topic-arn in case of aws-sns\n",
                            "required": true
                          },
                          "eventType": {
                            "type": "string",
                            "example": "AWS_EC2_INSTANCE_TERMINATE || AZURE_VM_TERMINATE",
                            "description": "The event to send the notification when triggered. Valid values: AWS_EC2_INSTANCE_TERMINATE, AWS_EC2_INSTANCE_TERMINATED, AWS_EC2_INSTANCE_LAUNCH, AWS_EC2_INSTANCE_READY_SIGNAL_TIMEOUT, SIGNAL_TIMEOUT_SHUTDOWN_SCRIPT, AWS_EC2_CANT_SPIN_OD, AWS_EC2_INSTANCE_UNHEALTHY_IN_ELB, GROUP_ROLL_FAILED, GROUP_ROLL_FINISHED, CANT_SCALE_UP_GROUP_MAX_CAPACITY, GROUP_UPDATED, AWS_EMR_PROVISION_TIMEOUT, GROUP_BEANSTALK_INIT_READY, AZURE_VM_TERMINATED, AZURE_VM_TERMINATE, AWS_EC2_MANAGED_INSTANCE_PAUSING, AWS_EC2_MANAGED_INSTANCE_RESUMING, AWS_EC2_MANAGED_INSTANCE_RECYCLING, AWS_EC2_MANAGED_INSTANCE_DELETING Ocean Events: CLUSTER_ROLL_FINISHED, CLUSTER_ROLL_FAILED, OCEAN_CANT_SCALE_UP_MAX_RESOURCES, OCEAN_LAUNCH_SPEC_CANT_SCALE_UP_MAX_INSTANCES\n",
                            "required": true
                          },
                          "eventFormat": {
                            "type": "object",
                            "description": "The format of the notification content (JSON Format: Key + Value).\n",
                            "enum": [
                              "%instance-id%",
                              "%event%",
                              "%resource-id%",
                              "%resource-name%",
                              "%subnet-id%",
                              "%availability-zone%",
                              "%reason%",
                              "%private-ip%",
                              "%launchspec-id%"
                            ],
                            "example": {
                              "event": "%event%",
                              "resourceId": "%resource-id%",
                              "resourceName": "%resource-name%",
                              "myCustomKey": "My content is set here"
                            },
                            "default": {
                              "event": "%event%",
                              "instanceId": "%instance-id%",
                              "resourceId": "%resource-id%",
                              "resourceName": "%resource-name%"
                            },
                            "properties": {
                              "event": {
                                "type": "string",
                                "description": "Allow to get name of event that happened",
                                "example": "%event%"
                              },
                              "resourceId": {
                                "type": "string",
                                "description": "Allow to get ID of resource where event happened",
                                "example": "%resource-id%"
                              },
                              "resourceName": {
                                "type": "string",
                                "description": "Allow to get the name of resource (related to ID)",
                                "example": "%resource-name%"
                              },
                              "myCustomKey": {
                                "type": "string",
                                "description": "Allow to use custom text in messages",
                                "example": "My content is set here"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1events~1subscription/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Subscriptions",
        "description": "List all subscriptions and their information\n",
        "operationId": "notificationsServiceSubscriptionsList",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ACCOUNT_ID",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "sis-123456"
                                  },
                                  "resourceId": {
                                    "type": "string",
                                    "example": "sig-5cf38a24"
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "example": "http"
                                  },
                                  "endpoint": {
                                    "type": "string",
                                    "example": "http://localhost:5000"
                                  },
                                  "eventType": {
                                    "type": "string",
                                    "example": "AWS_EC2_INSTANCE_TERMINIATED"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2015-08-04T12:31:26.000Z"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2015-08-04T12:31:26.000Z"
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:subscription"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/subscription/{SUBSCRIPTION_ID}": {
      "delete": {
        "summary": "Unsubscribe",
        "description": "Delete an existing page\n",
        "operationId": "notificationsServiceSubscriptionsUnsubscribe",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "path",
            "name": "SUBSCRIPTION_ID",
            "example": "hcs-123",
            "description": "The subscription you want to update\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Subscription",
        "description": "Get a specific notification and its information\n",
        "operationId": "notificationsServiceSubscriptionsGet",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "path",
            "name": "SUBSCRIPTION_ID",
            "example": "hcs-123",
            "description": "The subscription you want to update\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1events~1subscription/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Subscription",
        "description": "Update existing notification\n",
        "operationId": "notificationsServiceSubscriptionsUpdate",
        "tags": [
          "Notifications Service"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "required": false
          },
          {
            "in": "path",
            "name": "SUBSCRIPTION_ID",
            "example": "hcs-123",
            "description": "The subscription you want to update\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "subscription"
                    ],
                    "properties": {
                      "subscription": {
                        "type": "object",
                        "description": "Element that store all the subscription config",
                        "properties": {
                          "endpoint": {
                            "type": "string",
                            "description": "The endpoint the notification will be sent to. url in case of http/https/web, email address in case of email/email-json and sns-topic-arn in case of aws-sns",
                            "example": "SNS_TOPIC_ARN"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Subscription Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/events/subscription/sis-56879d5c?accountId=act-123abc",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                },
                                "affectedRows": {
                                  "type": "integer",
                                  "example": 1
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/insights/instanceCosts/export": {
      "post": {
        "summary": "Get Organization Instances Costs",
        "description": "Get a summary of your instances costs by given time filter.\n\nThe request will result in CSV format on your instances from all given accounts.\n\nNotice that the date range can be up to 180 days.\n\nResponse fields are detailed in the response\n",
        "operationId": "insightsServiceOrganizationInstancesCosts",
        "tags": [
          "Insights Service"
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "accountIds": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "act-abc12345"
                        }
                      },
                      "fromDate": {
                        "type": "string",
                        "example": 1569950296
                      },
                      "toDate": {
                        "type": "string",
                        "example": 1570727896
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "response fileds:",
            "content": {
              "application/csv": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "An ID for response"
                            },
                            "accountId": {
                              "description": "account Id"
                            },
                            "accountName": {
                              "description": "account Name"
                            },
                            "resourceId": {
                              "description": "resource Id"
                            },
                            "cloudProvider": {
                              "description": "Cloud provider (AWS / GCP / Azure)"
                            },
                            "instanceId": {
                              "description": "instance Id"
                            },
                            "instanceType": {
                              "description": "instanceType"
                            },
                            "region": {
                              "description": "region"
                            },
                            "useCase": {
                              "description": "K8S, Load Balancing and etc."
                            },
                            "lifeCycle": {
                              "description": "Excess capacity (Spot / preemptible), On-Demand"
                            },
                            "product": {
                              "description": "Instance product"
                            },
                            "launchTime": {
                              "description": "Instance launch time"
                            },
                            "terminationTime": {
                              "description": "Instance termination time"
                            },
                            "runningHours": {
                              "description": "Instance run time (in hours)"
                            },
                            "odHourlyPrice": {
                              "description": "Instance hourly cost if it ran on OD"
                            },
                            "odCost": {
                              "description": "Instance cost if it ran on OD"
                            },
                            "actualCost": {
                              "description": "Instance actual cost"
                            },
                            "savings": {
                              "description": "Dollar amount saved for the instance"
                            },
                            "reservationId": {
                              "description": "Indicates wheater the instance is a RI (Reserved Instance)"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "type": "string",
                "format": "binary",
                "example": "id,accountId,accountName,resourceId,cloudProvider,instanceId,instanceType,region,useCase,lifeCycle,product,launchTime,terminationTime,runningHours,odHourlyPrice,odCost,actualCost,savings,reservationId 2439,act-abc12345,Demo,oesg-cc4740e1,AWS,i-00d67d5efc69e938d,r4.large,us-west-2,K8S,EXCESS,LINUX,2019-10-05T02:59:40.000Z,2019-10-05T03:15:12.000Z,1,0.133,0.133,0.0337,0.0993, 2576,act-abc12345,Demo,oesg-5feb10ab,AWS,i-01086811aefdc4959,c4.large,us-west-2,K8S,EXCESS,LINUX,2019-10-06T10:13:03.000Z,2019-10-06T19:07:05.000Z,9,0.1,0.9,0.279,0.621, 1760,act-abc12345,Demo,oesg-cc4740e1,AWS,i-01797b0ac578198fa,c3.large,us-west-2,K8S,EXCESS,LINUX,2019-08-27T06:41:14.000Z,2019-10-05T02:57:30.000Z,23.9997,0.105,2.52,0.7008,1.8192, 1761,act-abc12345,Demo,oesg-cc4740e1,AWS,i-02e460584769b3c28,r4.large,us-west-2,K8S,EXCESS,LINUX,2019-08-20T22:23:54.000Z,,23.9997,0.133,3.192,0.8088,2.3832,"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/account/{accountId}": {
      "put": {
        "summary": "Update Account",
        "description": "Update information in an account such as the account name and slack channel. To use this command, permissions for organization admin are required. Granular permissions will require access policies with the following actions: setup:updateAccount\n",
        "operationId": "OrganizationsAndAccountsUpdateAccount",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "schema": {
              "type": "string"
            },
            "example": "act-123abc",
            "description": "ID of the account you would like to update\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "account"
                    ],
                    "properties": {
                      "account": {
                        "type": "object",
                        "description": "Used for updating items in an account.",
                        "properties": {
                          "slackNotificationChannels": {
                            "type": "array",
                            "description": "List of strings containing the URLs of the slack channels to be added.",
                            "items": {
                              "type": "string",
                              "example": [
                                "https://hooks.slack.com/services/SLACK_ID",
                                "https://hooks.slack.com/services/SLACK_ID"
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The new name of the account. Cannot be null or empty.",
                            "example": "ACCOUNT_NAME"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-4fb595c6?accountId=act-4fb595c6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Account",
        "description": "Delete a Spot Account. The Spot Account ID can be obtained from your Spot console via the following link: https://console.spotinst.com/#/settings/account/general . Note This cannot be undone â take caution. Only Organization Admins can perform this action. In case you want to delete your default Spot account which is the account visible when you first log in please contact Support.\n",
        "operationId": "OrganizationsAndAccountsDeleteAccount",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123456",
            "description": "ID of the account you would like to delete\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user": {
      "get": {
        "summary": "Get Users",
        "description": "Get all users in the organization, their details, and mapped accounts. Providing the optional account ID parameter will filter out all users not mapped to that account.\n",
        "operationId": "OrganizationsAndAccountsGetAccountUsers",
        "tags": [
          "Organizations",
          "Accounts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account you would like to get retrieve users from\n",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get Account Users Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/user?accountId=act-123456789",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:log",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "mappedAccountIds": {
                                          "type": "string",
                                          "description": "A list of account IDs",
                                          "example": [
                                            "act-0b18f123",
                                            "act-0b18f124",
                                            "act-0b18f125"
                                          ]
                                        },
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-19265"
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "The name",
                                          "example": "test"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "Email",
                                          "example": "test@spot.io"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "mappedAccountIds": {
                                          "type": "string",
                                          "description": "A list of account IDs",
                                          "example": [
                                            "act-0b18f123",
                                            "act-0b18f124",
                                            "act-0b18f125"
                                          ]
                                        },
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-19266"
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "The name",
                                          "example": "test"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "Email",
                                          "example": "abc@google.com"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create User",
        "description": "Create a new user and link it to the creator's organization (the organization ID from the personal token attached to the API call). If the role is a viewer, the user is also linked to the default account for the organization.",
        "operationId": "OrganizationsAndAccountsCreateUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "generateToken",
            "example": true,
            "type": "boolean",
            "description": "If `true`, then the response will include `personalAccessToken` string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "The first name of the user",
                        "example": "Test"
                      },
                      "lastName": {
                        "type": "string",
                        "description": "The last name of the user",
                        "example": "Test"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email",
                        "example": "test@spot.io"
                      },
                      "password": {
                        "type": "string",
                        "description": "Password",
                        "example": "password1234"
                      },
                      "role": {
                        "type": "string",
                        "description": "User's role",
                        "example": "viewer"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/user/?generateToken=true",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:user",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "integer",
                                          "description": "User's ID",
                                          "example": 9056
                                        },
                                        "firstName": {
                                          "type": "string",
                                          "description": "First Name",
                                          "example": "Test"
                                        },
                                        "lastName": {
                                          "type": "string",
                                          "description": "Last Name",
                                          "example": "Test"
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "First Name + Last Name",
                                          "example": "Test Test"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "Email",
                                          "example": "test@gmail.com"
                                        },
                                        "organizationId": {
                                          "type": "integer",
                                          "description": "ID of Organization in Spot Console",
                                          "example": 606079860000
                                        },
                                        "personalAccessToken": {
                                          "type": "integer",
                                          "description": "ID of Organization in Spot Console",
                                          "example": "..."
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/accountUserMapping": {
      "get": {
        "summary": "Get User",
        "description": "Get user's account mapping\n",
        "operationId": "OrganizationsAndAccountsGetUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userEmail",
            "example": "test@spot.io",
            "description": "Target user email address\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/accountUserMapping?userEmail=test@spot.io",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:aws:ec2:group:log",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "type": "string",
                                          "description": "User's account ID",
                                          "example": "act-1234592"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role identifies the scope of actions - user is able to perform",
                                          "example": "editor"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "type": "string",
                                          "description": "User's account ID",
                                          "example": "act-1234593"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role identifies the scope of actions - user is able to perform",
                                          "example": "viewer"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Assign Users to Accounts",
        "description": "Assign users to accounts in bulk. Only accounts under the creator's own organization are allowed. Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsAssignUsersToAccounts",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Assign role based users",
                    "properties": {
                      "mappings": {
                        "type": "array",
                        "description": "Mappings objects include user, accountID and role.",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string",
                                "description": "One of userEmail / userId is required. identify user by its user ID",
                                "example": "u-1234"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Account for which to provide the specified user with the specified role.",
                                "example": "act-123abc"
                              },
                              "role": {
                                "type": "string",
                                "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                                "example": "editor"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string",
                                "description": "One of userEmail / userId is required. identify user by its user ID",
                                "example": "u-1234"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Account for which to provide the specified user with the specified role.",
                                "example": "act-123abc"
                              },
                              "permissionStrategy": {
                                "type": "string",
                                "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                                "example": "ROLE_BASED"
                              },
                              "role": {
                                "type": "string",
                                "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                                "example": "editor"
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Assign policy based users",
                    "properties": {
                      "mappings": {
                        "type": "array",
                        "description": "Mappings objects include user, accountID and role.",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "string",
                                "description": "One of userEmail / userId is required. identify user by its user ID",
                                "example": "u-1234"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Account for which to provide the specified user with the specified role.",
                                "example": "act-123abc"
                              },
                              "permissionStrategy": {
                                "type": "string",
                                "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                                "example": "POLICY_BASED"
                              },
                              "policyIds": {
                                "type": "Array",
                                "description": "Set list of access policies IDs. Required on permissionStrategy = POLICY_BASED",
                                "example": [
                                  "pol-c3e30574",
                                  "pol-c3e30575"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "userEmail": {
                                "type": "string",
                                "description": "One of `userEmail` / `userId` is required. Email of the user, used as a unique identifier.",
                                "example": "test@spot.io"
                              },
                              "accountId": {
                                "type": "string",
                                "description": "Account for which to provide the specified user with the specified role.",
                                "example": "act-123abc"
                              },
                              "role": {
                                "type": "string",
                                "description": "Valid values `viewer`, `editor`. Required when `permissionStrategy = ROLE_BASED`.",
                                "example": "viewer"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assign Users To Accounts Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/accountUserMapping?accountId=act-4fab9sc6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization/{organizationId}": {
      "delete": {
        "summary": "Delete Organization",
        "description": "Delete a Spot Organization. ID of the organization can be obtained from your Spot console via the following link: https://console.spotinst.com/#/settings/organization/general > Note: This cannot be undone. Take caution.\n",
        "operationId": "OrganizationsAndAccountsDeleteOrganization",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organizationId",
            "example": 606079812345,
            "description": "ID of the organization you would like to delete\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Organization Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/organization/606079812345",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/account/{accountId}/user": {
      "put": {
        "summary": "Update User Permissions",
        "description": "Change the users' permissions for an account (only accounts under the creator's own organization are allowed). Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsUpdateAUserPermission",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123abc",
            "description": "ID of the account associated with your token\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Update user permissions for editor role",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "u-1234"
                      },
                      "permissionStrategy": {
                        "type": "string",
                        "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                        "example": "POLICY_BASED",
                        "default": "ROLE_BASED"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "editor"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Update user permission with access policies",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "u-1234"
                      },
                      "permissionStrategy": {
                        "type": "string",
                        "description": "Set the user permissions type, by role or by access policy. Valid values \"ROLE_BASED\", \"POLICY_BASED\"",
                        "example": "POLICY_BASED",
                        "default": "ROLE_BASED"
                      },
                      "policyIds": {
                        "type": "string",
                        "description": "Policy IDs",
                        "example": [
                          "pol-c3e30574",
                          "pol-c3e30575"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Update user permission for viewer role",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "u-1234"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "viewer"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update User Permissions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-4fb595c6/user/",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Detach User",
        "description": "Detach a user from an account (only accounts under the creator's own organization are allowed). Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsDetachUser",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123abc",
            "description": "Account ID\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "userEmail"
                    ],
                    "properties": {
                      "userEmail": {
                        "type": "string",
                        "description": "Email of the user that is going to be deleted",
                        "example": "test@gmail.com"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detach User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-12345678/user/",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Set Existing User Permissions",
        "description": "Add a user to the account and set its permissions on the account. Creator's organization ID is taken from the personal token attached to the API call.\n",
        "operationId": "OrganizationsAndAccountsSetExistingUserPermissions",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "example": "act-123abc",
            "description": "Account ID\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "title": "Set user permissions for viewer role",
                    "properties": {
                      "userEmail": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "test@spot.io"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values - \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "viewer"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "title": "Set user permissions for editor role",
                    "properties": {
                      "userEmail": {
                        "type": "string",
                        "description": "One of userEmail / userId is required. identify user by its user ID",
                        "example": "test@spot.io"
                      },
                      "role": {
                        "type": "string",
                        "description": "Valid values - \"viewer\", \"editor\". Required on permissionStrategy = ROLE_BASED",
                        "example": "editor"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Existing User Permissions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account/act-4fb765c6/user",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/programmatic": {
      "post": {
        "summary": "Create Programmatic User",
        "description": "This API creates a new programmatic user (not a human user). Use this API to provide privileges to an application that needs to interface with  Spot. Spot returns a token that the programmatic user can use to perform actions with.",
        "operationId": "OrganizationsAndAccountsCreateProgrammaticUser",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "name",
                      "accounts"
                    ],
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Brief description of the user.",
                        "example": "test programmatic"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the programmatic user.",
                        "example": "testProgrammaticApi",
                        "required": true
                      },
                      "accounts": {
                        "type": "array",
                        "description": "All the accounts the programmatic user will have access to. Cannot be empty.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Account ID the programmatic user will have access to.\n",
                              "example": "act-123"
                            },
                            "role": {
                              "type": "string",
                              "description": "Role to be associated with the programmatic user for this account.\n",
                              "enum": [
                                "viewer",
                                "editor"
                              ],
                              "example": "viewer"
                            }
                          }
                        },
                        "required": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:programmaticUser",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "token": {
                                        "type": "string",
                                        "description": "Token",
                                        "example": "f872e7b157866a36229d915aa21cf430f661234568703fd"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name",
                                        "example": "TestApi1"
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "ID",
                                        "example": "pu-6a6976ab"
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get All Programmatic Users",
        "description": "Get all the Programmatic Users in the organization.\n",
        "operationId": "OrganizationsAndAccountsGetAllProgrammaticUsers",
        "tags": [
          "Organizations"
        ],
        "responses": {
          "200": {
            "description": "Get Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:programmaticUser",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/responses/200/content/application~1json/schema/allOf/0/allOf/1/properties/response/properties/items/items"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "ID",
                                          "example": "pu_123456"
                                        },
                                        "userName": {
                                          "type": "string",
                                          "description": "User Name",
                                          "example": "pu_name2"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Description",
                                          "example": "my programmatic user"
                                        },
                                        "accounts": {
                                          "type": "array",
                                          "description": "All the accounts the programmatic user will have access to. Cannot be empty.",
                                          "items": [
                                            {
                                              "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/responses/200/content/application~1json/schema/allOf/0/allOf/1/properties/response/properties/items/items/properties/accounts/items/1"
                                            },
                                            {
                                              "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/responses/200/content/application~1json/schema/allOf/0/allOf/1/properties/response/properties/items/items/properties/accounts/items/0"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/programmatic/{userId}": {
      "put": {
        "summary": "Update Programmatic User",
        "description": "Updates the Programmatic User.\n",
        "operationId": "OrganizationsAndAccountsUpdateAProgrammaticUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "example": "pu_968465",
            "description": "ID of the user\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Brief description of the user.",
                        "example": "test programmatic"
                      },
                      "accounts": {
                        "type": "array",
                        "description": "All the accounts the programmatic user will have access to. Cannot be empty.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Account ID the programmatic user will have access to.\n",
                              "example": "act-123"
                            },
                            "role": {
                              "type": "string",
                              "description": "Role to be associated with the programmatic user for this account.\n",
                              "enum": [
                                "viewer",
                                "editor"
                              ],
                              "example": "viewer"
                            }
                          }
                        },
                        "required": true
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:programmaticUser",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "ID",
                                        "example": "pu_968465"
                                      },
                                      "userName": {
                                        "type": "string",
                                        "description": "User Name",
                                        "example": "pu_name"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "Description",
                                        "example": "test programmatic"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "description": "All the accounts the programmatic user will have access to. Cannot be empty.",
                                        "items": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Account ID the programmatic user will have access to.",
                                                "example": "act-123"
                                              },
                                              "role": {
                                                "type": "string",
                                                "description": "Role to be associated with the programmatic user for this account. Valid values are \"editor\" and \"viewer\".",
                                                "example": "editor"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Account ID the programmatic user will have access to.",
                                                "example": "act-1234"
                                              },
                                              "role": {
                                                "type": "string",
                                                "description": "Role to be associated with the programmatic user for this account. Valid values are \"editor\" and \"viewer\".",
                                                "example": "viewer"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Programmatic User",
        "description": "Gets the Programmatic User.\n",
        "operationId": "OrganizationsAndAccountsGetAProgrammaticUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:programmaticUser",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": {
                                    "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/responses/200/content/application~1json/schema/allOf/0/allOf/1/properties/response/properties/items/items"
                                  }
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/programmatic/{userId}/account": {
      "delete": {
        "summary": "Delete Programmatic User",
        "description": "Deletes the Programmatic User.\n",
        "operationId": "OrganizationsAndAccountsDeleteAProgrammaticUser",
        "tags": [
          "Organizations"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1setup~1user~1programmatic~1%7BuserId%7D/put/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Programmatic User Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/organization": {
      "post": {
        "summary": "Create Organization",
        "description": "Create a Spot Organization.",
        "operationId": "OrganizationsAndAccountsCreateOrganization",
        "tags": [
          "Organizations"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "organization": {
                        "type": "object",
                        "description": "Organization",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Provide a name for your organization. The organization name must contain at least one character that is a-z or A-Z",
                            "example": "organizationName"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Organization Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/organization",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:organization",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "organizationId": {
                                          "type": "integer",
                                          "description": "Organization ID",
                                          "example": 12345678
                                        },
                                        "organizationName": {
                                          "type": "string",
                                          "description": "Provide a name for your organization. The organization name must contain at least one character that is a-z or A-Z",
                                          "example": "organizationName"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/account": {
      "post": {
        "summary": "Create Account",
        "description": "Create a Spot account.",
        "operationId": "OrganizationsAndAccountsCreateAccount",
        "tags": [
          "Accounts"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "account": {
                        "type": "object",
                        "description": "Account",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Provide a name for your account. The account name must contain at least one character that is a-z or A-Z",
                            "example": "AccountName"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Account Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:account",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Account ID",
                                          "example": "act-123456"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Account Name",
                                          "example": "AccountName"
                                        },
                                        "organizationId": {
                                          "type": "string",
                                          "description": "Organization ID",
                                          "example": 606012341234
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Accounts",
        "description": "Get a list of Spot accounts in your organization.  When used without any parameters, the provided token must have Organization Admin permissions and the output will contain all the Organization's accounts. Note In case you want to list all the accounts associated with Organization you can use the below request URL without the cloudAccountId parameter, https://api.spotinst.io/setup/account",
        "operationId": "OrganizationsAndAccountsGetAccounts",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "schema": {
              "type": "string",
              "example": 634245686616,
              "description": "Will list only the Spot accounts connected to the specified account ID.\n"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Accounts Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/account?cloudAccountId=123456789",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:account",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "type": "string",
                                          "description": "Account ID",
                                          "example": "act-57765123"
                                        },
                                        "organizationId": {
                                          "type": "integer",
                                          "description": "Organization ID",
                                          "example": 606079861123
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name",
                                          "example": "test"
                                        },
                                        "providerExternalId": {
                                          "type": "string",
                                          "description": "Provider external ID",
                                          "example": 123456789
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "type": "string",
                                          "description": "Account ID",
                                          "example": "act-57765123"
                                        },
                                        "organizationId": {
                                          "type": "integer",
                                          "description": "Organization ID",
                                          "example": 606079861123
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Name",
                                          "example": "prod"
                                        },
                                        "providerExternalId": {
                                          "type": "string",
                                          "description": "Provider external ID",
                                          "example": 123456789
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 2,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/policy": {
      "post": {
        "summary": "Create Access Policy",
        "description": "Create an access policy. access policy enables you to define the user's permissions on a granular level than the role-based permissions.",
        "operationId": "OrganizationsAndAccountsCreateAccessPolicy",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policy": {
                        "type": "object",
                        "description": "Set access policy settings. Example - Acme, Inc.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Policy",
                            "example": "my policy"
                          },
                          "description": {
                            "type": "string",
                            "description": "Short description of policy",
                            "example": "description of my policy"
                          },
                          "policyContent": {
                            "type": "object",
                            "description": "Set permissions objects list",
                            "properties": {
                              "statements": {
                                "type": "array",
                                "description": "List of permissions statements",
                                "items": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "effect": {
                                        "type": "string",
                                        "description": "Valid values \"ALLOW\", \"DENY\"",
                                        "example": "ALLOW"
                                      },
                                      "actions": {
                                        "type": "array",
                                        "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "ocean:importCluster"
                                          ]
                                        }
                                      },
                                      "resources": {
                                        "type": "array",
                                        "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "*"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "effect": {
                                        "type": "string",
                                        "description": "Valid values \"ALLOW\", \"DENY\"",
                                        "example": "ALLOW"
                                      },
                                      "actions": {
                                        "type": "array",
                                        "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "emr:scale"
                                          ]
                                        }
                                      },
                                      "resources": {
                                        "type": "array",
                                        "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                        "items": {
                                          "type": "string",
                                          "example": [
                                            "*"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Access Policy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy?accountId=act-6sd665cs\"",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:access:policy",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Set access policy name",
                                          "example": "my policy"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Set access policy description",
                                          "example": "description of my policy"
                                        },
                                        "policyContent": {
                                          "type": "array",
                                          "description": "Set permissions objects list",
                                          "properties": {
                                            "statements": {
                                              "type": "array",
                                              "items": [
                                                {
                                                  "$ref": "#/paths/~1setup~1access~1policy/post/requestBody/content/application~1json/schema/allOf/0/properties/policy/properties/policyContent/properties/statements/items/0"
                                                },
                                                {
                                                  "$ref": "#/paths/~1setup~1access~1policy/post/requestBody/content/application~1json/schema/allOf/0/properties/policy/properties/policyContent/properties/statements/items/1"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "id": {
                                          "type": "string",
                                          "description": "ID",
                                          "example": "pol-de9716be"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Access Policies",
        "description": "Get access policy settings.",
        "operationId": "OrganizationsAndAccountsGetAccountAccessPolicies",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Get Account Access Policies Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy?accountId=act-4fd325c3",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:access:policy",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Set access policy name",
                                          "example": "my policy"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "Set access policy description",
                                          "example": "description of my policy"
                                        },
                                        "policyContent": {
                                          "type": "object",
                                          "description": "Set permissions objects list",
                                          "properties": {
                                            "statements": {
                                              "type": "array",
                                              "items": [
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "effect": {
                                                      "type": "string",
                                                      "description": "Valid values \"ALLOW\", \"DENY\"",
                                                      "example": "ALLOW"
                                                    },
                                                    "actions": {
                                                      "type": "array",
                                                      "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "ocean:importCluster"
                                                        ]
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "array",
                                                      "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "*"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "properties": {
                                                    "effect": {
                                                      "type": "string",
                                                      "description": "Valid values \"ALLOW\", \"DENY\"",
                                                      "example": "ALLOW"
                                                    },
                                                    "actions": {
                                                      "type": "array",
                                                      "description": "Set a list of required actions for this permissions statement. full list of actions can be found - https://docs.spot.io/account-user-management/user-management/access-policies-actions/",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "emr:scale"
                                                        ]
                                                      }
                                                    },
                                                    "resources": {
                                                      "type": "array",
                                                      "description": "Set a list of resources IDs. In order to include all resources in this statement - use \"*\"",
                                                      "items": {
                                                        "type": "string",
                                                        "example": [
                                                          "*"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "id": {
                                          "type": "string",
                                          "description": "ID",
                                          "example": "pol-de9716be"
                                        },
                                        "createdAt": {
                                          "type": "string",
                                          "description": "Created At Date",
                                          "example": "2020-01-21T12:37:14.000+0000"
                                        },
                                        "updatedAt": {
                                          "type": "string",
                                          "description": "Updated At Date",
                                          "example": "2020-01-21T12:37:14.000+0000"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/user/permission": {
      "get": {
        "summary": "Get Users Permissions",
        "description": "Get the permissions for all the users in the account.\n",
        "operationId": "OrganizationsAndAccountsGetAllUsersPermissions",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Get All Users Permissions Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/user/permission",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "GET",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:user:permission",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-1235"
                                        },
                                        "permissionStrategy": {
                                          "type": "string",
                                          "description": "Permission Strategy",
                                          "example": "ROLE_BASED"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role",
                                          "example": "editor"
                                        },
                                        "policyIds": {
                                          "type": "array",
                                          "description": "Array of policy IDs",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-12387"
                                        },
                                        "permissionStrategy": {
                                          "type": "string",
                                          "description": "Permission Strategy",
                                          "example": "POLICY_BASED"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role",
                                          "example": "viewer"
                                        },
                                        "policyIds": {
                                          "type": "array",
                                          "description": "Array of policy IDs",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "userId": {
                                          "type": "string",
                                          "description": "User ID",
                                          "example": "u-1234"
                                        },
                                        "permissionStrategy": {
                                          "type": "string",
                                          "description": "Permission Strategy",
                                          "example": "POLICY_BASED"
                                        },
                                        "role": {
                                          "type": "string",
                                          "description": "Role",
                                          "example": "viewer"
                                        },
                                        "policyIds": {
                                          "type": "array",
                                          "description": "Array of policy IDs",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 3,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/access/policy/{policyId}": {
      "put": {
        "summary": "Update Access Policy",
        "description": "Updates an access policy settings.",
        "operationId": "OrganizationsAndAccountsUpdateAccessPolicy",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "policyId",
            "example": "pol-2344nn",
            "description": "The access policy ID to delete\n",
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "policy": {
                        "type": "object",
                        "description": "Set access policy settings",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Set access policy name",
                            "example": "A wonderful policy"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Access Policy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy/pol-2344nn?accountId=act-4fbdvfc6",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "PUT",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Access Policy",
        "description": "Deletes an access policy settings.",
        "operationId": "OrganizationsAndAccountsDeleteAccessPolicy",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "policyId",
            "example": "pol-2344nn",
            "description": "The access policy ID to delete\n",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Access Policy Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/access/policy/pol-2344nn?accountId=act-123456789",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "DELETE",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/credentials/aws": {
      "post": {
        "summary": "Set Credentials for AWS",
        "description": "Link a Spot account to an AWS Cloud account. \\\nPlease create external id using spot api (see /setup/credentials/aws/externalId) \\\nand use it when creating the AWS role and then call this route with your AWS role's arn to link it to your spot account\n",
        "operationId": "OrganizationsAndAccountsSetCloudCredentialsForAWS",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "credentials": {
                        "type": "object",
                        "description": "Credentials details",
                        "properties": {
                          "iamRole": {
                            "type": "string",
                            "description": "Provide the IAM Role ARN connected to another AWS account 922761411349 and with the latest Spot Policy - https://docs.spot.io/administration/api/spot-policy-in-aws",
                            "example": "arn:aws:iam::1234567890:role/Spot_Iam_Role",
                            "required": true
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Cloud Credentials For AWS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/credentials/aws?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/setup/credentials/aws/externalId": {
      "post": {
        "summary": "Create AWS account external id",
        "description": "Create aws account external id \\\nYou should use the external id when creating your AWS role for your spot account \\\nand after you create the role you need to call [set-aws-credentials Set Credentials for AWS](https://docs.spot.io/api/#operation/OrganizationsAndAccountsSetCloudCredentialsForAWS) \\\nto link your AWS account with your spot account\n",
        "operationId": "OrganizationsAndAccountsCreateAWSAccountExternalId",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Create AWS Acccount External Id Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/setup/credentials/aws/externalId?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "response": {
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "type": "string",
                                  "example": "spotinst:setup:aws:externalId",
                                  "description": "The data type of each item in the response\n"
                                },
                                "items": {
                                  "type": "array",
                                  "description": "Array of data objects\n",
                                  "items": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "externalId": {
                                          "type": "string",
                                          "description": "Token",
                                          "example": "SpotinstAwsAccountExternalId"
                                        },
                                        "maxValidUntil": {
                                          "type": "string",
                                          "description": "Max Valid Until",
                                          "example": "2021-03-18T16:11:04.402Z"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "count": {
                                  "type": "integer",
                                  "example": 1,
                                  "description": "Size of the data object array\n"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/setup/credentials": {
      "post": {
        "summary": "Set Credentials for GCP",
        "description": "Link a Spot account to a GCP Cloud account.",
        "operationId": "OrganizationsAndAccountsSetCloudCredentialsForGCP",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "serviceAccount": {
                        "type": "object",
                        "description": "Set service account for credentials",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Valid values - service_account",
                            "example": "service_account"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "Name of project in GCP",
                            "example": "test-labs"
                          },
                          "private_key_id": {
                            "type": "string",
                            "description": "Private key ID of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXX"
                          },
                          "private_key": {
                            "type": "string",
                            "description": "Private key of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                          },
                          "client_email": {
                            "type": "string",
                            "description": "Email associated with service account",
                            "example": "test123@spot.io"
                          },
                          "client_id": {
                            "type": "string",
                            "description": "Client ID of service account",
                            "example": "XXXXXXXXXXXXXXXXXXXXX"
                          },
                          "auth_uri": {
                            "type": "string",
                            "description": "Authentication uri, Default - https://accounts.google.com/o/oauth2/auth",
                            "example": "https://accounts.google.com/o/oauth2/auth"
                          },
                          "token_uri": {
                            "type": "string",
                            "description": "Token uri, Default - https://oauth2.googleapis.com/token",
                            "example": "https://oauth2.googleapis.com/token"
                          },
                          "auth_provider_x509_cert_url": {
                            "type": "string",
                            "description": "Default - https://www.googleapis.com/oauth2/v1/certs",
                            "example": "https://www.googleapis.com/oauth2/v1/certs"
                          },
                          "client_x509_cert_url": {
                            "type": "string",
                            "description": "Should be in following format - \"https://www.googleapis.com/robot/v1/metadata/x509/\"",
                            "example": "https://www.googleapis.com/robot/v1/metadata/x509/test123%40test-labs.iam.gserviceaccount.com"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Cloud Credentials For GCP Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/gcp/setup/credentials?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/gcp/setup/credentials/validation": {
      "post": {
        "summary": "Validate Credentials for GCP",
        "description": "Validate the credentials for connecting a Spot account to an GCP Cloud account. The validation will test the credentials without actually set it. Please notice to run the set credentials request to perform the set account credentials.",
        "operationId": "OrganizationsAndAccountsValidateCloudCredentialsForGCP",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "serviceAccount": {
                        "type": "object",
                        "description": "Set service account for credentials",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Valid values - service_account",
                            "example": "service_account"
                          },
                          "project_id": {
                            "type": "string",
                            "description": "Name of project in GCP",
                            "example": "test-labs"
                          },
                          "private_key_id": {
                            "type": "string",
                            "description": "Private key ID of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXX"
                          },
                          "private_key": {
                            "type": "string",
                            "description": "Private key of JSON key created during prerequisites stage",
                            "example": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                          },
                          "client_email": {
                            "type": "string",
                            "description": "Email associated with service account",
                            "example": "test123@spot.io"
                          },
                          "client_id": {
                            "type": "string",
                            "description": "Client ID of service account",
                            "example": "XXXXXXXXXXXXXXXXXXXXX"
                          },
                          "auth_uri": {
                            "type": "string",
                            "description": "Authentication uri, Default - https://accounts.google.com/o/oauth2/auth",
                            "example": "https://accounts.google.com/o/oauth2/auth"
                          },
                          "token_uri": {
                            "type": "string",
                            "description": "Token uri, Default - https://oauth2.googleapis.com/token",
                            "example": "https://oauth2.googleapis.com/token"
                          },
                          "auth_provider_x509_cert_url": {
                            "type": "string",
                            "description": "Default - https://www.googleapis.com/oauth2/v1/certs",
                            "example": "https://www.googleapis.com/oauth2/v1/certs"
                          },
                          "client_x509_cert_url": {
                            "type": "string",
                            "description": "Should be in following format - \"https://www.googleapis.com/robot/v1/metadata/x509/\"",
                            "example": "https://www.googleapis.com/robot/v1/metadata/x509/test123%40test-labs.iam.gserviceaccount.com"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validate Cloud Credentials for GCP Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/gcp/setup/credentials/validate?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/setup/credentials": {
      "post": {
        "summary": "Set Credentials for Azure",
        "description": "Link a Spot account to an Azure Cloud account.",
        "operationId": "OrganizationsAndAccountsSetCloudCredentialsForAzure",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "Set the application ID",
                        "example": 111111111
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "Set the key secret",
                        "example": "32431r2431434132"
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "Set the directory ID",
                        "example": "1321e1e3123er23"
                      },
                      "subscriptionId": {
                        "type": "string",
                        "description": "Set the subscription ID",
                        "example": "234r3141131"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Set Cloud Credentials For Azure Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/azure/setup/credentials?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/azure/setup/credentials/validation": {
      "post": {
        "summary": "Validate Credentials for Azure",
        "description": "Validate the credentials for connecting a Spot account to an Azure Cloud account. The validation will test the credentials without actually set it. Please notice to run the set credentials request to perform the set Azure account credentials (https://docs.spot.io/connect-your-cloud-provider/azure-account) .",
        "operationId": "OrganizationsAndAccountsValidateCloudCredentialsForAzure",
        "tags": [
          "Accounts"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "Set the application ID",
                        "example": "111111111"
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "Set the key secret",
                        "example": "32431r2431434132"
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "Set the directory ID",
                        "example": "1321e1e3123er23"
                      },
                      "subscriptionId": {
                        "type": "string",
                        "description": "Set the subscription ID",
                        "example": "234r3141131"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validate Cloud Credentials for Azure Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "type": "object",
                              "description": "Original request properties\n",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "46642c7d-bc29-417d-8ce4-79626f00c63c",
                                  "description": "Unique ID associated with this request\n"
                                },
                                "url": {
                                  "type": "string",
                                  "example": "/azure/setup/credentials/validation?accountId=act-123456",
                                  "description": "The URL that was used for the request\n"
                                },
                                "method": {
                                  "type": "string",
                                  "example": "POST",
                                  "description": "The HTTP **METHOD** used for the request\n"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "2018-11-19T13:49:11.911Z",
                                  "description": "When the request was received by Spot\n"
                                }
                              }
                            },
                            "response": {
                              "type": "object",
                              "description": "Response package that includes, status, type and any relevant data.\n",
                              "properties": {
                                "status": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "integer",
                                      "example": 200,
                                      "description": "HTTP status code assigned to this response\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "OK",
                                      "description": "HTTP status message for the respective status code\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Create Cluster",
        "description": "## Prerequisites:\n  The Spot Controller is used to monitor the cluster resources and report back to Ocean.|\n  To install the Spot Controller, complete and run the following script on a machine with kubectl command line tool installed and configured:\n\n```\n  #!/usr/bin/env bash\n  curl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\n  SPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\n  SPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\n  SPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\n  bash\n```\nYou may need Kubernetes admin privileges for this script to work. To assign yourself with admin privileges, run the following command:\n```\n  kubectl create clusterrolebinding <clusterName> --clusterrole=cluster-admin --user=<userEmail>\n```\nFor detailed guide please refer to our [controller installation guides](https://docs.spot.io/ocean/tutorials/spot-kubernetes-controller/). Install can be made by kubectl or Helm.\nFor more on the Spot controller and Ocean's anatomy see the documentation [here](https://docs.spot.io/ocean/overview-kubernetes).\n",
        "operationId": "OceanGKEClusterCreate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The Ocean cluster.",
                        "required": [
                          "name",
                          "controllerClusterId",
                          "compute"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "test-123124",
                            "description": "Enter the Ocean cluster identifier.\n"
                          },
                          "gke": {
                            "type": "object",
                            "required": [
                              "clusterName",
                              "masterLocation"
                            ],
                            "description": "Use existing GKE cluster\n",
                            "properties": {
                              "clusterName": {
                                "type": "string",
                                "description": "Required on cluster.gke object.\n",
                                "example": "test-cluster"
                              },
                              "masterLocation": {
                                "type": "string",
                                "description": "Required on cluster.gke object.\n",
                                "example": "us-central1-a"
                              }
                            }
                          },
                          "autoScaler": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/autoScaler"
                          },
                          "capacity": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/capacity"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/strategy"
                          },
                          "scheduling": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/scheduling"
                          },
                          "security": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/security"
                          },
                          "compute": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1%7BOCEAN_CLUSTER_ID%7D/put/responses/200/content/application~1json/schema/allOf/0/properties/compute"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "title": "cluster",
                      "properties": {
                        "autoScaler": {
                          "type": "object",
                          "title": "auto-scaler",
                          "description": "The Ocean Kubernetes Autoscaler object.",
                          "properties": {
                            "isEnabled": {
                              "type": "boolean",
                              "description": "Enable the Ocean Kubernetes Autoscaler.",
                              "default": true,
                              "example": true
                            },
                            "cooldown": {
                              "type": "integer",
                              "description": "Cooldown period between scaling actions.",
                              "default": null,
                              "example": 30
                            },
                            "resourceLimits": {
                              "type": "object",
                              "description": "Optionally set upper and lower bounds on the resource usage of the cluster.",
                              "properties": {
                                "maxMemoryGib": {
                                  "type": "integer",
                                  "description": "The maximum memory in GiB units that can be allocated to the cluster.",
                                  "example": 1500
                                },
                                "maxVcpu": {
                                  "type": "integer",
                                  "description": "The maximum cpu in vCpu units that can be allocated to the cluster.",
                                  "example": 750
                                }
                              }
                            },
                            "down": {
                              "type": "object",
                              "description": "Auto Scaling scale down operations.",
                              "properties": {
                                "maxScaleDownPercentage": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 100,
                                  "description": "Would represent the maximum % to scale-down.",
                                  "example": 30
                                }
                              }
                            },
                            "headRoom": {
                              "type": "object",
                              "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                              "properties": {
                                "cpuPerUnit": {
                                  "type": "integer",
                                  "description": "Optionally configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                  "example": 0
                                },
                                "memoryPerUnit": {
                                  "type": "integer",
                                  "description": "Optionally configure the amount of memory (MiB) to allocate the headroom.",
                                  "example": 0
                                },
                                "gpuPerUnit": {
                                  "type": "integer",
                                  "description": "How much GPU allocate for headroom unit",
                                  "example": 0
                                },
                                "numOfUnit": {
                                  "type": "integer",
                                  "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                  "example": 0
                                }
                              }
                            },
                            "isAutoConfig": {
                              "type": "boolean",
                              "description": "Use automatic headroom. When set to true, t he values under cluster.autoScaler.headroom are not effective, as Ocean configures and optimizes headroom automatically.\n",
                              "default": true,
                              "example": false
                            },
                            "autoHeadroomPercentage": {
                              "type": "integer",
                              "description": "Optionally set the auto headroom percentage, set a number between 0-200 to control the headroom % from the cluster. Relevant when isAutoConfig=true\n",
                              "example": null
                            }
                          }
                        },
                        "capacity": {
                          "type": "object",
                          "title": "Capacity Units",
                          "description": "Capacity specifications for the Ocean cluster.",
                          "properties": {
                            "minimum": {
                              "type": "integer",
                              "example": 0,
                              "description": "The bottom limit of instances that the cluster can scale down to.\n"
                            },
                            "maximum": {
                              "type": "integer",
                              "default": 1000,
                              "example": 3,
                              "description": "The upper limit of instances that the cluster can scale up to.\n"
                            },
                            "target": {
                              "type": "integer",
                              "example": 3,
                              "description": "Number of instances to launch and maintain in cluster.\n"
                            }
                          }
                        },
                        "strategy": {
                          "type": "object",
                          "properties": {
                            "drainingTimeout": {
                              "type": "integer",
                              "description": "The draining timeout (in seconds) before terminating the instance. If no draining timeout is defined, the default draining timeout will be used.\n",
                              "example": 60
                            }
                          }
                        },
                        "scheduling": {
                          "type": "object",
                          "title": "Ocean GKE Scheduling",
                          "description": "Set scheduling object",
                          "properties": {
                            "shutdownHours": {
                              "type": "object",
                              "description": "Set shutdown hours for cluster object\n",
                              "required": [
                                "timeWindows"
                              ],
                              "properties": {
                                "isEnabled": {
                                  "type": "boolaen",
                                  "description": "Flag to enable / disable the shutdown hours mechanism. When turned to false, the mechanism is deactivated and the cluster remains in its current state.\n",
                                  "example": true
                                },
                                "timeWindows": {
                                  "type": "array",
                                  "description": "Set time windows for shutdown hours. specify a list of 'timeWindows' with at least one time window Each string is in the format of - ddd:hh:mm-ddd:hh:mm ddd = day of week = Sun | Mon | Tue | Wed | Thu | Fri | Sat hh = hour 24 = 0 -23 mm = minute = 0 - 59. Time windows should not overlap. required on cluster.scheduling.isEnabled = True.\n",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "Fri:15:30-Wed:14:30",
                                      "Wed:15:30-Thu:18:30"
                                    ]
                                  }
                                }
                              }
                            },
                            "tasks": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "title": "Task Definition",
                                "required": [
                                  "isEnabled",
                                  "cronExpression",
                                  "taskType"
                                ],
                                "properties": {
                                  "isEnabled": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "Describes whether the task is enabled. When true the task should run when false it should not run. Required for cluster.scheduling.tasks object\n"
                                  },
                                  "cronExpression": {
                                    "type": "string",
                                    "example": "0 1 * * *",
                                    "description": "A valid cron expression. For example : \" * * * * * \". The cron is running in UTC time zone and is in Unix cron format [Cron Expression Validator Script](http://www.unix.com/man-page/linux/5/crontab/). Only one of âfrequency' or âcronExpression' should be used at a time.\n"
                                  },
                                  "taskType": {
                                    "type": "string",
                                    "example": "clusterRoll",
                                    "description": "Valid values: \"clusterRoll\". Required for cluster.scheduling.tasks object\n"
                                  },
                                  "batchSizePercentage": {
                                    "type": "integer",
                                    "description": "Value in % to set size of batch in roll. Valid values are 0-100\n",
                                    "example": 20
                                  }
                                }
                              }
                            }
                          }
                        },
                        "security": {
                          "type": "object",
                          "title": "Security",
                          "properties": {
                            "containerImage": {
                              "type": "object",
                              "properties": {
                                "approvedImages": {
                                  "type": "array",
                                  "description": "Set white list of repositories for container images.",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "gce.io/*",
                                      "docker.*"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the configurations for all Ocean cluster in the specified account.\n",
        "operationId": "OceanGKEClusterList",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean GKE Get All Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "autoScaler": {
                                      "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/autoScaler"
                                    },
                                    "capacity": {
                                      "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/capacity"
                                    },
                                    "compute": {
                                      "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1%7BOCEAN_CLUSTER_ID%7D/put/responses/200/content/application~1json/schema/allOf/0/properties/compute"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "createdAt": {
                                      "type": "string",
                                      "example": "2018-11-05T12:55:50.000+0000"
                                    },
                                    "updatedAt": {
                                      "type": "string",
                                      "example": "2018-11-05T12:58:15.000+0000"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{OCEAN_CLUSTER_ID}": {
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean cluster.\n",
        "operationId": "OceanGKEClusterDelete",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1gcp~1gce~1group~1%7BgroupId%7D/delete/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for a specified Ocean cluster.\n",
        "operationId": "OceanGKEClusterGet",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, excluding the Name and controllerClusterId. <br /> This API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "OceanGKEClusterUpdate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean GKE Update Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "autoScaler": {
                          "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/autoScaler"
                        },
                        "capacity": {
                          "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/capacity"
                        },
                        "strategy": {
                          "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/strategy"
                        },
                        "scheduling": {
                          "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/scheduling"
                        },
                        "security": {
                          "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/security"
                        },
                        "compute": {
                          "type": "object",
                          "title": "Ocean Compute",
                          "required": [
                            "subnetname",
                            "launchSpecification",
                            "networkInterfaces",
                            "availabilityZones"
                          ],
                          "properties": {
                            "networkInterfaces": {
                              "type": "object",
                              "description": "Settings for network interfaces\n",
                              "required": [
                                "accessConfigs",
                                "network"
                              ],
                              "properties": {
                                "network": {
                                  "type": "string",
                                  "example": "default"
                                },
                                "projectId": {
                                  "type": "string",
                                  "description": "Use network resource from different project. set project ID to use it's network resource. This parameter relevant only If the network resource is in different project\n",
                                  "example": "test-project"
                                },
                                "accessConfigs": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "external-nat"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Possible values: ONE_TO_ONE_NAT\n",
                                      "example": "ONE_TO_ONE_NAT"
                                    }
                                  }
                                },
                                "aliasIpRanges": {
                                  "type": "object",
                                  "required": [
                                    "ipCidrRange",
                                    "subnetworkRangeName"
                                  ],
                                  "properties": {
                                    "ipCidrRange": {
                                      "type": "string",
                                      "description": "Required on cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                      "example": "/24"
                                    },
                                    "subnetworkRangeName": {
                                      "type": "string",
                                      "description": "Required on cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                      "example": "gke-test-native-vpc-pods-5cb557f7"
                                    }
                                  }
                                }
                              }
                            },
                            "backendServices": {
                              "type": "object",
                              "description": "Settings for backend services",
                              "required": [
                                "backendServiceName"
                              ],
                              "properties": {
                                "backendServiceName": {
                                  "type": "string",
                                  "description": "Required on cluster.compute.backendServices object.",
                                  "example": "test-global-tcp"
                                },
                                "locationType": {
                                  "type": "string",
                                  "example": "global"
                                }
                              }
                            },
                            "subnetName": {
                              "type": "string",
                              "description": "Subnet identifier for the Ocean cluster",
                              "example": "default"
                            },
                            "availabilityZones": {
                              "type": "array",
                              "description": "Availability zone/s used by the Ocean cluster.",
                              "items": {
                                "type": "string",
                                "example": "us-west1-a"
                              }
                            },
                            "instanceTypes": {
                              "type": "object",
                              "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                              "properties": {
                                "whitelist": {
                                  "type": "array",
                                  "description": "Instance types allowed in the Ocean cluster.\n",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "n1-standard-2"
                                    ]
                                  }
                                }
                              }
                            },
                            "launchSpecification": {
                              "type": "object",
                              "required": [
                                "sourceImage",
                                "tags",
                                "metadata",
                                "serviceAccount"
                              ],
                              "properties": {
                                "sourceImage": {
                                  "type": "string",
                                  "description": "URL of the image used to launch the instances",
                                  "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/gke-1117-gke12-cos-69-10895-138-0-v190225-pre"
                                },
                                "metadata": {
                                  "type": "object",
                                  "description": "Set array of cluster metadata\n",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "Key of metadata key-pair\n",
                                      "example": "example_key1"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value of metadata key-pair\n",
                                      "example": "exmample_value1"
                                    }
                                  }
                                },
                                "tags": {
                                  "type": "array",
                                  "description": "Array of tags to instances launched in Ocean cluster",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "gke-test-native-vpc-5cb557f7-node"
                                    ]
                                  }
                                },
                                "ipForwarding": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "minCpuPlatform": {
                                  "type": "string",
                                  "description": "Set instance CPU platform\n",
                                  "example": "Intel Sandy Bridge"
                                },
                                "serviceAccount": {
                                  "type": "string",
                                  "example": "265168459660-compute@developer.gserviceaccount.com",
                                  "description": "The service account used by applications running on the VM to call GCP APIs.\n"
                                },
                                "labels": {
                                  "type": "array",
                                  "description": "Set labels on cluster. Can set up to 60 labels\n",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "example": "spotinst-gke-original-node-pool"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "test-native-vpc__default-pool"
                                      }
                                    }
                                  }
                                },
                                "rootVolumeSizeInGb": {
                                  "type": "integer",
                                  "description": "Optionally set root size (GB). Value should be >= 100",
                                  "example": 100
                                },
                                "shieldedInstanceConfig": {
                                  "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/shieldedInstanceConfig"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{OCEAN_ID}/log": {
      "summary": "Ocean for GKE",
      "get": {
        "summary": "Fetch Elastilog",
        "description": "Fetch groupâs Elastilog by \n",
        "operationId": "oceanGkeFetchLog",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/2"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/3"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/4"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/5"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BOCEAN_ID%7D~1log/get/parameters/6"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get Log Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "description": "Original request properties\n",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "3213f42e-455e-4801-a185-cd3eb65fac5f",
                          "description": "Unique ID associated with this request\n"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/gcp/k8s/cluster/o-e0a2bd7c/log?fromDate=2020-10-06&toDate=2020-10-08&severity=ALL&limit=500",
                          "description": "The URL that was used for the request\n"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET",
                          "description": "The HTTP **METHOD** used for the request\n"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2020-10-05T16:20:38.579Z",
                          "description": "When the request was received by Spot\n"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "description": "Response package that includes, status, type and any relevant data.\n",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": "200",
                              "description": "HTTP status code assigned to this response\n"
                            },
                            "message": {
                              "type": "string",
                              "example": "OK",
                              "description": "HTTP status message for the respective status code\n"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:cluster:log"
                        },
                        "items": {
                          "type": "array",
                          "description": "Array of data objects\n",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              }
                            }
                          },
                          "example": [
                            {
                              "message": "Ocean o-e0a2bd7c successfully created.",
                              "severity": "INFO",
                              "createdAt": "2020-10-07T09:51:12.000Z"
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": "1"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{OCEAN_ID}/rightSizing/suggestion": {
      "post": {
        "summary": "Fetch Right Sizing Recommendations",
        "description": "Get right-sizing recommendations for an Ocean cluster and filter them according to namespace or label.\n",
        "operationId": "oceanGkeGetRightSizingRecommendationsWithFilter",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "query",
            "name": "namespace",
            "description": "For K8S, namespace is an optional query param which filters the retrieved resources\n",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "object",
                        "description": "Optional - may be null.\n",
                        "properties": {
                          "namespaces": {
                            "type": "array",
                            "description": "Optional - may be null. If exists - should contain at least 1 item.\n",
                            "items": {
                              "type": "string",
                              "example": [
                                "sparkSpace",
                                "kube-system"
                              ]
                            }
                          },
                          "attribute": {
                            "type": "object",
                            "description": "Optional - may be null.\n",
                            "required": [
                              "type",
                              "key"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "required": true,
                                "enum": [
                                  "label",
                                  "annotation"
                                ],
                                "example": "label"
                              },
                              "key": {
                                "type": "string",
                                "description": "May be any string, but shouldn't be empty.\n",
                                "example": "app"
                              },
                              "operator": {
                                "type": "string",
                                "description": "Optional - may be null.\n",
                                "enum": [
                                  "Equals",
                                  "notEquals",
                                  "exists",
                                  "doesNotExist"
                                ],
                                "default": "Equals",
                                "example": "Equals"
                              },
                              "value": {
                                "type": "string",
                                "description": "Required whenever the operator is \"equals\" or \"notEquals\". |\nIf exists, may be any string.\n",
                                "example": "redis"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean RightSizing Recommendation Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:aws:k8s:cluster:rightSizing:resourceSuggestion"
                        },
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "object",
                              "properties": {
                                "resourceName": {
                                  "type": "string",
                                  "example": "dns-controller"
                                },
                                "resourceType": {
                                  "type": "string",
                                  "example": "deployment"
                                },
                                "namespace": {
                                  "type": "string",
                                  "example": "kube-system"
                                },
                                "suggestedCPU": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "suggestedMemory": {
                                  "type": "integer",
                                  "example": 19
                                },
                                "requestedCPU": {
                                  "type": "integer",
                                  "example": 50
                                },
                                "requestedMemory": {
                                  "type": "integer",
                                  "example": 50
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "resourceName": {
                                  "type": "string",
                                  "example": "kube-dns"
                                },
                                "resourceType": {
                                  "type": "string",
                                  "example": "daemonSet"
                                },
                                "namespace": {
                                  "type": "string",
                                  "example": "kube-system"
                                },
                                "suggestedCPU": {
                                  "type": "integer",
                                  "example": 2
                                },
                                "suggestedMemory": {
                                  "type": "integer",
                                  "example": 20
                                },
                                "requestedCPU": {
                                  "type": "integer",
                                  "example": 10
                                },
                                "requestedMemory": {
                                  "type": "integer",
                                  "example": 30
                                }
                              }
                            }
                          ]
                        },
                        "count": {
                          "type": "integer",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Create Launch Spec",
        "description": "Create a Launch Spec.\n",
        "operationId": "OceanGKELaunchSpecCreate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "launchSpec": {
                        "type": "object",
                        "title": "GKE Cluster",
                        "required": [
                          "oceanId",
                          "sourceImage"
                        ],
                        "properties": {
                          "oceanId": {
                            "type": "string",
                            "example": "o-1fff54ed",
                            "description": "The Ocean cluster ID. required for launchSpec create.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "lp_name",
                            "description": "Set name for the launch spec\n"
                          },
                          "sourceImage": {
                            "type": "string",
                            "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/container-v1-3-v20160517",
                            "description": "Set image URL. Can be null\n"
                          },
                          "serviceAccount": {
                            "type": "string",
                            "example": "265168459660-compute@developer.gserviceaccount.com",
                            "description": "The service account used by applications running on the VM to call GCP APIs.\n"
                          },
                          "rootVolumeSize": {
                            "type": "integer",
                            "description": "Set root volume size (in GB)",
                            "example": 8
                          },
                          "metadata": {
                            "type": "array",
                            "required": [
                              "key",
                              "value"
                            ],
                            "description": "Add metadata to cluster\n",
                            "items": [
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "Set metadata's key. Required on launchSpec.metadata",
                                    "example": "key1"
                                  },
                                  "value": {
                                    "type": "string",
                                    "description": "Set metadata's name. Required on launchSpec.metadata",
                                    "example": "value1"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "example": "key2"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "value2"
                                  }
                                }
                              }
                            ]
                          },
                          "instanceTypes": {
                            "type": "array",
                            "description": "A array of supported machine types for the Launch Spec. Can be null\n",
                            "items": {
                              "type": "string",
                              "example": "n1-standard-1, n1-standard-2"
                            }
                          },
                          "taints": {
                            "type": "array",
                            "description": "Add taints to Launch Spec",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set taint key"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set taint value"
                                },
                                "effect": {
                                  "type": "string",
                                  "description": "Set taint effect"
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "taintKey",
                                "value": "taintValue",
                                "effect": "NoSchedule"
                              }
                            ]
                          },
                          "labels": {
                            "type": "array",
                            "description": "An array of labels to add to the Launch Spec. Custom user labels only, no K8s built in labels or Spot internal labels.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Set label key.\\\nMay not be one of the following:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Set label value"
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "env",
                                "value": "test"
                              }
                            ]
                          },
                          "autoScale": {
                            "type": "object",
                            "properties": {
                              "headrooms": {
                                "type": "array",
                                "description": "Set custom headroom per launch spec. provide list of launchSpec.autoScale.headrooms object\n",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "cpuPerUnit": {
                                      "type": "integer",
                                      "description": "configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU\n",
                                      "example": 1000
                                    },
                                    "memoryPerUnit": {
                                      "type": "integer",
                                      "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                      "example": 2048
                                    },
                                    "gpuPerUnit": {
                                      "type": "integer",
                                      "description": "How much GPU allocate for headroom unit\n",
                                      "example": 0
                                    },
                                    "numOfUnits": {
                                      "type": "integer",
                                      "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                      "example": 3
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "resourceLimits": {
                            "type": "object",
                            "properties": {
                              "maxInstanceCount": {
                                "description": "Option to set a maximum number of instances per launch specification. Can be null. If set, value must be greater than or equal to 0.\n",
                                "type": "integer",
                                "example": 5
                              }
                            }
                          },
                          "restrictScaleDown": {
                            "type": "boolean",
                            "description": "When set to âTrueâ, launch specification nodes will be treated as if all pods running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints).\nTherefore, Ocean will not scale nodes down unless empty.\n",
                            "example": false
                          },
                          "shieldedInstanceConfig": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/shieldedInstanceConfig"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/put/requestBody/content/application~1json/schema/properties/launchSpec/properties/strategy"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Launch Specs",
        "operationId": "OceanGKELaunchSpecList",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "OCEAN_ID",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "o-abcd1234",
            "description": "The ID of the Ocean cluster.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "response": {
                          "type": "object",
                          "description": "response body\n",
                          "properties": {
                            "items": {
                              "type": "array",
                              "allOf": [
                                {
                                  "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/post/requestBody/content/application~1json/schema/allOf/0"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "createdAt": {
                                      "type": "string",
                                      "example": "2018-11-05T12:55:50.000+0000"
                                    },
                                    "updatedAt": {
                                      "type": "string",
                                      "example": "2018-11-05T12:58:15.000+0000"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec/{OCEAN_LAUNCH_SPEC_ID}": {
      "summary": "Ocean for GKE",
      "delete": {
        "summary": "Delete Launch Spec",
        "description": "Delete a specified launch specification in an Ocean cluster.\n",
        "operationId": "OceanGKELaunchSpecDelete",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/delete/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Launch Spec Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "a608777a-a1c5-4f34-b30b-3f7355e3926b"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/aws/k8s/cluster/o-12we32df?accountId=act-7461123d"
                        },
                        "method": {
                          "type": "string",
                          "example": "DELETE"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2019-06-18T07:59:45.892Z"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Launch Spec",
        "description": "All Ocean parameters are updatable\n",
        "operationId": "OceanGKELaunchSpecUpdate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "launchSpec"
                ],
                "properties": {
                  "launchSpec": {
                    "type": "object",
                    "title": "GKE Cluster",
                    "properties": {
                      "oceanId": {
                        "type": "string",
                        "example": "o-1fff54ed",
                        "description": "The Ocean cluster ID. required for launchSpec create.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "lp_name",
                        "description": "Set name for the launch spec\n"
                      },
                      "serviceAccount": {
                        "type": "string",
                        "example": "265168459660-compute@developer.gserviceaccount.com",
                        "description": "The service account used by applications running on the VM to call GCP APIs.\n"
                      },
                      "sourceImage": {
                        "type": "string",
                        "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/container-v1-3-v20160517",
                        "description": "Set image URL. Can be null\n"
                      },
                      "rootVolumeSize": {
                        "type": "integer",
                        "description": "Set root volume size (in GB)",
                        "example": 8
                      },
                      "metadata": {
                        "type": "array",
                        "required": [
                          "key",
                          "value"
                        ],
                        "description": "Add metadata to cluster\n",
                        "items": [
                          {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "Set metadata's key. Required on launchSpec.metadata",
                                "example": "key1"
                              },
                              "value": {
                                "type": "string",
                                "description": "Set metadata's name. Required on launchSpec.metadata",
                                "example": "value1"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string",
                                "example": "key2"
                              },
                              "value": {
                                "type": "string",
                                "example": "value2"
                              }
                            }
                          }
                        ]
                      },
                      "instanceTypes": {
                        "type": "array",
                        "description": "A array of supported machine types for the Launch Spec. Can be null\n",
                        "items": {
                          "type": "string",
                          "example": "n1-standard-1, n1-standard-2"
                        }
                      },
                      "taints": {
                        "type": "array",
                        "description": "Add taints to Launch Spec",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set taint key"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set taint value"
                            },
                            "effect": {
                              "type": "string",
                              "description": "Set taint effect"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "taintKey",
                            "value": "taintValue",
                            "effect": "NoSchedule"
                          }
                        ]
                      },
                      "labels": {
                        "type": "array",
                        "description": "An array of labels to add to the Launch Spec. Custom user labels only, no K8s built in labels or Spot internal labels.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set label key.\\\nMay not be one of the following:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set label value"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "env",
                            "value": "test"
                          }
                        ]
                      },
                      "autoScale": {
                        "type": "object",
                        "properties": {
                          "headroom": {
                            "type": "object",
                            "description": "Set custom headroom per launch spec. provide list of launchSpec.autoScale.headrooms object\n",
                            "properties": {
                              "cpuPerUnit": {
                                "type": "integer",
                                "description": "configure the number of CPUs to allocate the headroom. CPUs are denoted in millicores, where 1000 millicores = 1 vCPU\n",
                                "example": 1000
                              },
                              "memoryPerUnit": {
                                "type": "integer",
                                "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                "example": 2048
                              },
                              "gpuPerUnit": {
                                "type": "integer",
                                "description": "How much GPU allocate for headroom unit\n",
                                "example": 0
                              },
                              "numOfUnits": {
                                "type": "integer",
                                "description": "The number of units to retain as headroom, where each unit has the defined headroom CPU and memory.\n",
                                "example": 3
                              }
                            }
                          }
                        }
                      },
                      "resourceLimits": {
                        "type": "object",
                        "properties": {
                          "maxInstanceCount": {
                            "description": "Option to set a maximum number of instances per launch specification. Can be null. If set, value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 5
                          }
                        }
                      },
                      "restrictScaleDown": {
                        "type": "boolean",
                        "description": "When set to âTrueâ, launch specification nodes will be treated as if all pods running have the [restrict-scale-down label](https://docs.spot.io/ocean/features/labels-and-taints).\nTherefore, Ocean will not scale nodes down unless empty.\n",
                        "example": false
                      },
                      "shieldedInstanceConfig": {
                        "type": "object",
                        "title": "shielded-instance-config",
                        "description": "The Ocean Shielded Instance Config object.\n",
                        "properties": {
                          "enableSecureBoot": {
                            "type": "boolean",
                            "description": "Enable the secure boot parameter on the GCP instances.\n",
                            "example": true
                          },
                          "enableIntegrityMonitoring": {
                            "type": "boolean",
                            "description": "Enable the integrity monitoring parameter on the GCP instances.\n",
                            "example": true
                          }
                        }
                      },
                      "strategy": {
                        "type": "object",
                        "title": "strategy",
                        "description": "The Ocean Launch spec Strategy object.\n",
                        "properties": {
                          "preemptiblePercentage": {
                            "type": "integer",
                            "description": "Defines the desired preemptible percentage for this launch specification\n",
                            "example": 80
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Launch Spec",
        "operationId": "OceanGKELaunchSpecGet",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{OCEAN_CLUSTER_ID}/roll": {
      "summary": "Ocean for GKE",
      "post": {
        "summary": "Initiate Roll",
        "description": "Roll an entire Ocean cluster or roll subsets of the cluster by specifying launchSpecIds or instanceNames. Performing this request will start the roll immediately, by defined batches. <br /> <br /> Note that the first response for a successful request will notify for starting a roll. In order to check the status of a roll, you can use the GET Cluster Roll API using the roll ID.\n",
        "operationId": "oceanGkeRollInit",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roll": {
                    "type": "object",
                    "description": "Settings for roll operation\n",
                    "properties": {
                      "batchSizePercentage": {
                        "type": "integer",
                        "description": "Value in % to set size of batch in roll. Valid values are 0-100\n",
                        "example": 20
                      },
                      "comment": {
                        "description": "Add a comment description for the roll. comment should be limit to 256 chars.\n",
                        "type": "string",
                        "example": "This is why I deployed my cluster."
                      },
                      "launchSpecIds": {
                        "type": "array",
                        "description": "List of launch specification IDs to be rolled. Each ID is a string. launchSpecIds can be null. Cannot be used together with instanceName.\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "ols-76694a7d",
                            "ols-56694a76"
                          ]
                        }
                      },
                      "instanceNames": {
                        "type": "array",
                        "description": "List of instance names to be rolled. Each name is a string. instanceNames can be null. Cannot be used together with launchSpecId\n",
                        "items": {
                          "type": "string",
                          "example": [
                            "i-0003a99ffb566f039",
                            "i-0567a99ffb566f765"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rollId": {
                      "type": "string",
                      "example": "roll-1234"
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "status": {
                      "type": "string",
                      "example": "STARTING"
                    },
                    "batchNumber": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "comment": {
                      "type": "string",
                      "example": "This is why I deployed my cluster."
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        }
                      }
                    },
                    "instanceNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "sin-0a4becc0-sig-6952238d",
                        "sin-0542ecc0-sig-695223r4"
                      ]
                    },
                    "launchSpecIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "ols-76694a7d",
                        "ols-56694a76"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Rolls",
        "description": "Get status for all rolls of an Ocean cluster.\n",
        "operationId": "oceanGkeRollList",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Get List Of Rolls Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:aws:k8s:cluster:roll"
                        },
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "scr-5aaf854e"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "IN_PROGRESS"
                                },
                                "currentBatch": {
                                  "type": "integer",
                                  "example": 2
                                },
                                "numOfBatches": {
                                  "type": "integer",
                                  "example": 2
                                },
                                "comment": {
                                  "type": "string",
                                  "example": "This is why I deployed my cluster."
                                },
                                "progress": {
                                  "type": "object",
                                  "properties": {
                                    "unit": {
                                      "type": "string",
                                      "example": "percentage"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "oceanId": {
                                  "type": "string",
                                  "example": "o-30681b13"
                                },
                                "launchSpecIds": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "ols-76694a7d",
                                      "ols-56694a76"
                                    ]
                                  }
                                },
                                "createdAt": {
                                  "type": "string",
                                  "example": "2019-03-24T15:46:09.000Z"
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "example": "2019-03-24T15:46:09.000Z"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": "scr-5aaf854e"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "IN_PROGRESS"
                                },
                                "currentBatch": {
                                  "type": "integer",
                                  "example": 2
                                },
                                "numOfBatches": {
                                  "type": "integer",
                                  "example": 2
                                },
                                "comment": {
                                  "type": "string",
                                  "example": "This is why I deployed my cluster."
                                },
                                "progress": {
                                  "type": "object",
                                  "properties": {
                                    "unit": {
                                      "type": "string",
                                      "example": "percentage"
                                    },
                                    "value": {
                                      "type": "integer",
                                      "example": 0
                                    }
                                  }
                                },
                                "oceanId": {
                                  "type": "string",
                                  "example": "o-30681b13"
                                },
                                "instanceNames": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "sin-0a4becc0-sig-6952238d",
                                      "sin-0542ecc0-sig-695223r4"
                                    ]
                                  }
                                },
                                "createdAt": {
                                  "type": "string",
                                  "example": "2019-03-24T15:46:09.000Z"
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "example": "2019-03-24T15:46:09.000Z"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/{OCEAN_CLUSTER_ID}/roll/{ROLL_ID}": {
      "summary": "Ocean for GKE",
      "put": {
        "summary": "Update Roll",
        "description": "Update a roll of an Ocean cluster.\n\n*Performing the request will stop the next batch in a roll*\n",
        "operationId": "oceanGkeRollUpdate",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BOCEAN_ID%7D~1roll~1%7BROLL_ID%7D/get/parameters/2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Set status to roll. Valid values: \"STOPPED\"\n",
                    "example": "STOPPED"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cluster Roll Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rollId": {
                      "type": "string",
                      "example": "roll-1234"
                    },
                    "status": {
                      "type": "string",
                      "example": "STOPPED"
                    },
                    "batchNumber": {
                      "type": "integer",
                      "example": 1
                    },
                    "numOfBatches": {
                      "type": "integer",
                      "example": 5
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "example": "percentage"
                        },
                        "value": {
                          "type": "integer",
                          "example": 0
                        }
                      }
                    },
                    "oceanId": {
                      "type": "string",
                      "example": "o-12e31234"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2019-03-24T15:46:09.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "Get Roll",
        "description": "Get status for roll of an Ocean cluster.\n",
        "operationId": "oceanGkeRollGetSingleRoll",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1launchSpec/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1%7BOCEAN_ID%7D~1roll~1%7BROLL_ID%7D/get/parameters/2"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster~1%7BOCEAN_CLUSTER_ID%7D~1roll/post/responses/200"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/cluster/import": {
      "post": {
        "summary": "Upgrade Elastigroup To Ocean",
        "description": "\n**Prerequisites** | Perform following validations prior to upgrade executions: | * Group ID cannot be null * Group ID exists in Elastigroup * Group should be a GKE Elastigroup with defined scaling policy * Group ID is already managed by Ocean\n",
        "operationId": "oceanGkeUpgradeElastigroup",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1cluster~1import/post/parameters/0"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "e1aba6b3-d1be-419f-b19a-9542e09716a5"
                        },
                        "url": {
                          "type": "string",
                          "example": "/ocean/gcp/k8s/cluster/import?groupId=o-210e0c0b?accountId=act-7461862f"
                        },
                        "method": {
                          "type": "string",
                          "example": "GET"
                        },
                        "timestamp": {
                          "type": "string",
                          "example": "2019-03-05T15:43:16.306Z"
                        }
                      }
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "integer",
                              "example": 200
                            },
                            "message": {
                              "type": "string",
                              "example": "OK"
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "spotinst:ocean:gcp:k8s"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "o-9aa80ccb"
                            },
                            "name": {
                              "type": "string",
                              "example": "ocean test"
                            },
                            "controllerClusterId": {
                              "type": "string",
                              "example": "Test-5837c8ad1"
                            },
                            "gke": {
                              "type": "object",
                              "properties": {
                                "clusterName": {
                                  "type": "string",
                                  "example": "test-native-vpc"
                                },
                                "masterLocation": {
                                  "type": "string",
                                  "example": "us-central1-a"
                                }
                              }
                            },
                            "capacity": {
                              "$ref": "#/paths/~1ocean~1gcp~1k8s~1cluster/post/responses/200/content/application~1json/schema/allOf/0/properties/capacity"
                            },
                            "compute": {
                              "type": "object",
                              "properties": {
                                "networkInterfaces": {
                                  "type": "object",
                                  "description": "Settings for network interfaces.\n",
                                  "properties": {
                                    "network": {
                                      "type": "string",
                                      "example": "default"
                                    },
                                    "accessConfigs": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "external-nat"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "Possible values: ONE_TO_ONE_NAT\n",
                                          "example": "ONE_TO_ONE_NAT"
                                        }
                                      }
                                    },
                                    "aliasIpRanges": {
                                      "type": "object",
                                      "properties": {
                                        "ipCidrRange": {
                                          "type": "string",
                                          "description": "Required on cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                          "example": "/24"
                                        },
                                        "subnetworkRangeName": {
                                          "type": "string",
                                          "description": "Required on cluster.compute.networkInterfaces.aliasIpRanges object.\n",
                                          "example": "gke-test-native-vpc-pods-5cb557f7"
                                        }
                                      }
                                    }
                                  }
                                },
                                "subnetName": {
                                  "type": "string",
                                  "description": "Subnet identifier for the Ocean cluster",
                                  "example": "default"
                                },
                                "instanceTypes": {
                                  "type": "object",
                                  "description": "The type of instances that may or may not be a part of the Ocean cluster.",
                                  "properties": {
                                    "whitelist": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "Instance types allowed in the Ocean cluster.\n",
                                      "example": [
                                        "n1-standard-2"
                                      ]
                                    }
                                  }
                                },
                                "launchSpecification": {
                                  "type": "object",
                                  "properties": {
                                    "sourceImage": {
                                      "type": "string",
                                      "description": "URL of the image used to launch the instances",
                                      "example": "https://www.googleapis.com/compute/v1/projects/gke-node-images/global/images/gke-1117-gke12-cos-69-10895-138-0-v190225-pre"
                                    },
                                    "metadata": {
                                      "type": "object",
                                      "description": "Set array of cluster metadata\n",
                                      "properties": {
                                        "key": {
                                          "type": "string",
                                          "description": "Key of metadata key-pair\n",
                                          "example": "example_key1"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Value of metadata key-pair\n",
                                          "example": "exmample_value1"
                                        }
                                      }
                                    },
                                    "tags": {
                                      "type": "array",
                                      "description": "Array of tags to instances launched in Ocean cluster",
                                      "items": {
                                        "type": "string",
                                        "example": "gke-test-native-vpc-5cb557f7-node"
                                      }
                                    },
                                    "ipForwarding": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "serviceAccount": {
                                      "type": "string",
                                      "example": "265168459660-compute@developer.gserviceaccount.com"
                                    },
                                    "labels": {
                                      "type": "array",
                                      "description": "Set labels on cluster. Can set up to 60 labels\n",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "example": "spotinst-gke-original-node-pool"
                                          },
                                          "value": {
                                            "type": "string",
                                            "example": "test-native-vpc__default-pool"
                                          }
                                        }
                                      }
                                    },
                                    "rootVolumeSizeInGb": {
                                      "type": "integer",
                                      "description": "Optionally set root size (GB). Value should be >= 100",
                                      "example": 100
                                    }
                                  }
                                },
                                "availabilityZones": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "us-central1-a"
                                    ]
                                  }
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2018-11-05T12:55:50.000+0000"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2018-11-05T12:58:15.000+0000"
                            }
                          }
                        },
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/gcp/k8s/launchSpec/{OCEAN_LAUNCH_SPEC_ID}/launchNodes": {
      "post": {
        "summary": "Launch Nodes In VNG",
        "description": "Launch nodes in Virtual Node Group.\n",
        "operationId": "oceanGkeLaunchSpecLaunchNodes",
        "tags": [
          "Ocean GKE"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "launchRequest": {
                        "type": "object",
                        "title": "Ocean GKE Virtual Node Group Launch Request",
                        "required": [
                          "amount"
                        ],
                        "properties": {
                          "amount": {
                            "description": "The amount of nodes to launch.\n",
                            "type": "integer",
                            "example": 5
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/gcp/k8s/launchSpec/ols-12345abc/launchNodes"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "launchSpecId": {
                              "type": "string",
                              "example": "ols-f73821bc"
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceName": {
                                          "type": "string",
                                          "example": "sin-00b61aa5dde4-oesg-97499562",
                                          "description": "Name of the launched instance\n"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "example": "us-west-2b",
                                          "description": "The availability zone the instance launched in\n"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "example": "c3.xlarge",
                                          "description": "Type of the launched instance\n"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "Preemptible",
                                          "description": "Preemptible or On Demand\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:gcp:k8s:launchSpec:launchNodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster": {
      "summary": "Ocean for AKS",
      "post": {
        "summary": "Create Cluster",
        "description": "Creates an Ocean entity by a given specification.\n\nNotes:\n\n1. The Spot Kubernetes Controller is used to monitor the cluster resources and report back to Ocean SaaS. A properly functioning controller is mandatory for Ocean to operate. To install the Controller, run the following script on a machine with kubectl command line tool installed and configured:\n\n```\n#!/usr/bin/env bash\ncurl -fsSL http://spotinst-public.s3.amazonaws.com/integrations/kubernetes/cluster-controller/scripts/init.sh | \\\nSPOTINST_TOKEN=<ENTER YOUR TOKEN HERE> \\\nSPOTINST_ACCOUNT=<ENTER YOUR SPOTINST ACCOUNT ID HERE> \\\nSPOTINST_CLUSTER_IDENTIFIER=<ENTER YOUR CLUSTER IDENTIFIER HERE> \\\nbash\n```\n\n2. It is recommended to import all necessary information from the existing AKS cluster using the Ocean [AKS Cluster Import](https://docs.spot.io/api/#operation/oceanAKSClusterImport) API call and use its output to create a fully configured Ocean cluster.\n",
        "operationId": "oceanAKSClusterCreate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The Ocean cluster.\n",
                        "required": [
                          "name",
                          "controllerClusterId",
                          "aks",
                          "virtualNodeGroupTemplate"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "example": "o-134abcd",
                            "description": "Ocean cluster ID.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "test-123124",
                            "description": "Enter a unique Ocean cluster identifier. Cannot be updated.\n"
                          },
                          "aks": {
                            "type": "object",
                            "required": [
                              "name",
                              "resourceGroupName"
                            ],
                            "description": "AKS cluster configuration. Cannot be updated.\n",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Required on cluster.aks object.\n",
                                "example": "test-cluster"
                              },
                              "resourceGroupName": {
                                "type": "string",
                                "description": "Required on cluster.aks object.\n",
                                "example": "TestResourceGroup"
                              }
                            }
                          },
                          "autoScaler": {
                            "type": "object",
                            "title": "auto-scaler",
                            "description": "The Ocean Kubernetes Autoscaler object.\n",
                            "properties": {
                              "isEnabled": {
                                "type": "boolean",
                                "description": "Enable the Ocean Kubernetes Autoscaler.\n",
                                "default": true,
                                "example": true
                              },
                              "resourceLimits": {
                                "type": "object",
                                "description": "Optionally set upper and lower bounds on the resource usage of the cluster.\n",
                                "properties": {
                                  "maxVcpu": {
                                    "type": "integer",
                                    "description": "The maximum cpu in vCpu units that can be allocated to the cluster.\n",
                                    "example": 750
                                  },
                                  "maxMemoryGib": {
                                    "type": "integer",
                                    "description": "The maximum memory in GiB units that can be allocated to the cluster.\n",
                                    "example": 1500
                                  }
                                }
                              },
                              "down": {
                                "type": "object",
                                "description": "Auto Scaling scale down operations.\n",
                                "properties": {
                                  "maxScaleDownPercentage": {
                                    "type": "double",
                                    "minimum": 0.1,
                                    "maximum": 100,
                                    "description": "Would represent the maximum % to scale-down.",
                                    "example": 30
                                  }
                                }
                              },
                              "headroom": {
                                "type": "object",
                                "description": "Spare resource capacity management enabling fast assignment of Pods without waiting for new resources to launch.\n",
                                "properties": {
                                  "automatic": {
                                    "type": "object",
                                    "description": "Automatic headroom configuration.\n",
                                    "properties": {
                                      "isEnabled": {
                                        "type": "boolean",
                                        "description": "Enable automatic headroom. When set to true, Ocean configures and optimizes headroom automatically.\n",
                                        "default": true,
                                        "example": true
                                      },
                                      "percentage": {
                                        "type": "integer",
                                        "description": "Optionally set a number between 0-100 to control the percentage of total cluster resources dedicated to headroom.\nRelevant when isEnabled=true.\n",
                                        "example": 5
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "strategy": {
                            "type": "object",
                            "title": "Ocean AKS Strategy",
                            "description": "The Ocean AKS Strategy object.\n",
                            "properties": {
                              "spotPercentage": {
                                "type": "integer",
                                "description": "Percentage of Spot-VMs to maintain.\n",
                                "example": 50,
                                "default": 100
                              },
                              "fallbackToOd": {
                                "type": "boolean",
                                "description": "If no spot instance markets are available, enable Ocean to launch on-demand instances instead.\n",
                                "example": true,
                                "default": true
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "title": "Ocean AKS Health",
                            "description": "The Ocean AKS Health object.\n",
                            "properties": {
                              "gracePeriod": {
                                "type": "integer",
                                "default": 600,
                                "example": 600,
                                "description": "The amount of time to wait, in seconds, from the moment the instance has launched before monitoring its health checks.\n"
                              }
                            }
                          },
                          "virtualNodeGroupTemplate": {
                            "type": "object",
                            "title": "Ocean AKS Virtual Node Group Template",
                            "description": "A default template object for all future Ocean AKS Virtual Node Groups.\n",
                            "required": [
                              "launchSpecification"
                            ],
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "description": "The types of virtual machines that may or may not be a part of the Ocean cluster.\n",
                                "properties": {
                                  "whitelist": {
                                    "type": "array",
                                    "description": "VM types allowed in the Ocean cluster.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_ds2_v2"
                                    }
                                  }
                                }
                              },
                              "launchSpecification": {
                                "type": "object",
                                "required": [
                                  "resourceGroupName",
                                  "image",
                                  "network",
                                  "login",
                                  "loadBalancersConfig",
                                  "extensions"
                                ],
                                "properties": {
                                  "resourceGroupName": {
                                    "type": "string",
                                    "description": "This Azure resource group to launch VMs into. Cannot be updated.\n",
                                    "example": "azureResourceGroup"
                                  },
                                  "customData": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "Must contain a valid Base64 encoded string.\n",
                                    "example": "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI="
                                  },
                                  "image": {
                                    "type": "object",
                                    "required": [
                                      "marketplace"
                                    ],
                                    "description": "Image of VM. An image is a template for creating new VMs.\\\nChoose from Azure image catalogue (marketplace).\n",
                                    "properties": {
                                      "marketplace": {
                                        "type": "object",
                                        "required": [
                                          "publisher",
                                          "offer",
                                          "sku",
                                          "version"
                                        ],
                                        "description": "Select an image from Azure's Marketplace image catalogue.\n",
                                        "properties": {
                                          "publisher": {
                                            "type": "string",
                                            "description": "Image publisher.\n",
                                            "example": "OpenLogic"
                                          },
                                          "offer": {
                                            "type": "string",
                                            "description": "Name of image to use.\n",
                                            "example": "CentOS"
                                          },
                                          "sku": {
                                            "type": "string",
                                            "description": "Image's Stock Keeping Unit, which is the specific version of the image.\n",
                                            "example": 7.3
                                          },
                                          "version": {
                                            "type": "string",
                                            "description": "Image's version. if version not provided we use \"latest\".\n",
                                            "default": "lastest",
                                            "example": "7.3-1611"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "network": {
                                    "title": "Network",
                                    "description": "Define the Virtual Network and Subnet for your Elastigroup.\n",
                                    "type": "object",
                                    "required": [
                                      "resourceGroupName",
                                      "virtualNetworkName",
                                      "networkInterfaces"
                                    ],
                                    "properties": {
                                      "resourceGroupName": {
                                        "title": "Resource Group Name",
                                        "description": "Vnet resource group name.\n",
                                        "type": "string",
                                        "example": "subnetResourceGroup"
                                      },
                                      "virtualNetworkName": {
                                        "title": "Virtual Network Name",
                                        "description": "Virtual network.\n",
                                        "type": "string",
                                        "example": "vname"
                                      },
                                      "networkInterfaces": {
                                        "title": "Network Interfaces",
                                        "description": "A list of virtual network interfaces.\\\nThe publicIpSku must be identical between all the network interfaces.\\\nOne network interface must be set as the primary.\n",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "isPrimary",
                                            "subnetName",
                                            "assignPublicIp",
                                            "securityGroup",
                                            "enableIPForwarding"
                                          ],
                                          "properties": {
                                            "isPrimary": {
                                              "title": "Is Primary Criteria",
                                              "description": "Defines whether the network interface is primary or not.\n",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "subnetName": {
                                              "title": "Subnet Name",
                                              "description": "Subnet name.\n",
                                              "type": "string",
                                              "example": "testSubnet"
                                            },
                                            "assignPublicIp": {
                                              "title": "Assign Publick IP",
                                              "description": "Assign public IP.\n",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "publicIpSku": {
                                              "title": null,
                                              "description": "Required if assignPublicIp=true. Supported values:\n+ Standard\n+ Basic\n",
                                              "type": "string",
                                              "example": "Standard"
                                            },
                                            "securityGroup": {
                                              "title": "Security Group",
                                              "description": "Security Group",
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "resourceGroupName"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "title": "Name",
                                                  "description": "Requires valid security group name. Required if security group is specified.\n",
                                                  "type": "string",
                                                  "example": "test"
                                                },
                                                "resourceGroupName": {
                                                  "title": "Resource Group Name",
                                                  "description": "Requires valid resource group name. Required if security group is specified.\n",
                                                  "type": "string",
                                                  "example": "test"
                                                }
                                              }
                                            },
                                            "enableIPForwarding": {
                                              "title": "Enable IP Forwarding",
                                              "description": "Enable IP Forwarding\n",
                                              "type": "boolean",
                                              "example": true
                                            },
                                            "additionalIpConfigurations": {
                                              "title": "Additional IP Configurations",
                                              "description": "Additional configuration of network interface.\\\nThe name fields between all the additionalIpConfigurations must be unique.\n",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "title": "Name",
                                                    "description": "Required if additionalConfiguration has been specified.\n",
                                                    "type": "string",
                                                    "example": "test"
                                                  },
                                                  "privateIpAddressVersion": {
                                                    "title": "Private IP Address Version",
                                                    "description": "Supported values:\n+ IPv4\n+ IPv6\n",
                                                    "default": "IPv4"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "login": {
                                    "type": "object",
                                    "required": [
                                      "sshPublicKey",
                                      "userName"
                                    ],
                                    "description": "Set admin access for accessing your VMs.\n",
                                    "properties": {
                                      "sshPublicKey": {
                                        "type": "string",
                                        "writeOnly": true,
                                        "description": "SSH public key for admin access to Linux VMs.\n",
                                        "example": "ssh-rsa"
                                      },
                                      "userName": {
                                        "type": "string",
                                        "description": "User name for admin access to VMs.\n",
                                        "example": "spotuser"
                                      }
                                    }
                                  },
                                  "loadBalancersConfig": {
                                    "type": "object",
                                    "description": "Configure Load Balancers.\n",
                                    "properties": {
                                      "loadBalancers": {
                                        "type": "array",
                                        "description": "Array of load balancer objects.\n",
                                        "items": {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "resourceGroupName",
                                            "name",
                                            "loadBalancerSku",
                                            "backendPoolNames"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "The type of load balancer.\n",
                                              "enum": [
                                                "loadBalancer"
                                              ],
                                              "example": "loadBalancer"
                                            },
                                            "resourceGroupName": {
                                              "type": "string",
                                              "description": "The Resource Group name of the Load Balancer.\n",
                                              "example": "testResourceGroup"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Load Balancer.\n",
                                              "example": "testLoadBalancer"
                                            },
                                            "loadBalancerSku": {
                                              "type": "string",
                                              "description": "Possible values are:\n  * Standard\n  * Basic\n",
                                              "example": "Standard"
                                            },
                                            "backendPoolNames": {
                                              "type": "array",
                                              "description": "Names of the Backend Pools to register the Cluster VMs to.\\\nEach Backend Pool is a separate load balancer.\n",
                                              "example": [
                                                "testBackendPool1",
                                                "testBackendPool2"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "tags": {
                                    "type": "array",
                                    "description": "A maximum of 10, unique, Key-Value pairs for VM tags in the cluster.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "tagKey"
                                      ],
                                      "properties": {
                                        "tagKey": {
                                          "type": "string",
                                          "description": "Tag Key for Vms in the cluster.\n",
                                          "example": "env"
                                        },
                                        "tagValue": {
                                          "type": "string",
                                          "description": "Tag Value for VMs in the cluster.\n",
                                          "example": "staging"
                                        }
                                      }
                                    }
                                  },
                                  "extensions": {
                                    "type": "array",
                                    "description": "List of azure extensions objects.\n",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "type",
                                        "publisher",
                                        "apiVersion",
                                        "minorVersionAutoUpgrade"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "required": true,
                                          "example": "extensionName"
                                        },
                                        "type": {
                                          "type": "string",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "example": "customScript"
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "required": true,
                                          "example": "Microsoft.Azure.Extensions"
                                        },
                                        "apiVersion": {
                                          "type": "string",
                                          "description": "The API version of the extension. Required if extension specified.\n",
                                          "example": 2
                                        },
                                        "minorVersionAutoUpgrade": {
                                          "type": "boolean",
                                          "required": true,
                                          "description": "Required on compute.launchSpecification.extensions object.\n",
                                          "example": true
                                        },
                                        "publicSettings": {
                                          "type": "object",
                                          "description": "Object for public settings\n"
                                        },
                                        "protectedSettings": {
                                          "type": "object",
                                          "description": "Object for protected settings\n"
                                        }
                                      }
                                    }
                                  },
                                  "osDisk": {
                                    "type": "object",
                                    "required": [
                                      "sizeGB"
                                    ],
                                    "description": "Specify OS disk specification other than default.\n",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the OS disk.\n",
                                        "enum": [
                                          "Standard_LRS",
                                          "Premium_LRS",
                                          "StandardSSD_LRS"
                                        ],
                                        "example": "Standard_LRS"
                                      },
                                      "sizeGB": {
                                        "type": "integer",
                                        "description": "The size of the OS disk in GB, Required if dataDisks is specified.\n",
                                        "minimum": 1,
                                        "maximum": 1023,
                                        "example": 30
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Clusters",
        "description": "List the configurations for all Ocean cluster in the specified account.\n",
        "operationId": "oceanAKSClusterList",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}": {
      "get": {
        "summary": "Get Cluster",
        "description": "Get the configurations for a specified Ocean cluster.\n",
        "operationId": "oceanAKSClusterGet",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Cluster",
        "description": "All Ocean parameters are updatable, excluding aks and controllerClusterId.\n<br />\nThis API supports partial updates, so specific fields can be updated separately.\n",
        "operationId": "oceanAKSClusterUpdate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Cluster",
        "description": "Delete a specified Ocean cluster.\n",
        "operationId": "oceanAKSClusterDelete",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Delete Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/aks/import/{acdIdentifier}": {
      "post": {
        "summary": "Import Cluster",
        "description": "The Cluster Import API call returns a JSON formatted Ocean cluster spec for a given AKS cluster and import identifier.\nThe returned spec is ready to use in the [Ocean AKS Cluster Create](https://docs.spot.io/api/#operation/oceanAKSClusterCreate) API call.\n\nPrerequisites:\n1. To initiate the import from AKS process, run the following script on a machine with the kubectl command-line tool installed and configured (Ensure the correct context is set in kube config.)\n\n```\ncurl -fsSL https://spotinst-public.s3.amazonaws.com/integrations/kubernetes/aks/spot-aks-connector/init.sh | \\\nbash -s acd-12345678\n```\n\n* The import identifier has the prefix âacd-â followed by eight characters. Use the same identifier as input for this API call.\n* Learn more about the [Import from AKS](https://docs.spot.io/ocean/getting-started/aks?id=import-process-overview) process.\n",
        "operationId": "oceanAKSClusterImport",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "acdIdentifier",
            "example": "acd-12345abc",
            "description": "ACD Identifier\n",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "cluster"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "object",
                        "description": "The Ocean cluster import request.\n",
                        "required": [
                          "acdIdentifier",
                          "name",
                          "controllerClusterId",
                          "aks"
                        ],
                        "properties": {
                          "acdIdentifier": {
                            "type": "string",
                            "readOnly": true,
                            "example": "acd-134abcd",
                            "description": "ACD Identifier.\n"
                          },
                          "name": {
                            "type": "string",
                            "example": "test",
                            "description": "Add a name for the Ocean cluster.\n"
                          },
                          "controllerClusterId": {
                            "type": "string",
                            "example": "test-123124",
                            "description": "Enter a unique Ocean cluster identifier. Cannot be updated.\n"
                          },
                          "aks": {
                            "type": "object",
                            "required": [
                              "name",
                              "resourceGroupName"
                            ],
                            "description": "AKS cluster configuration. Cannot be updated.\n",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Required on cluster.aks object.\n",
                                "example": "test-cluster"
                              },
                              "resourceGroupName": {
                                "type": "string",
                                "description": "Required on cluster.aks object.\n",
                                "example": "TestResourceGroup"
                              }
                            }
                          },
                          "autoScaler": {
                            "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/autoScaler"
                          },
                          "strategy": {
                            "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/strategy"
                          },
                          "health": {
                            "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0/properties/cluster/properties/health"
                          },
                          "virtualNodeGroupTemplate": {
                            "type": "object",
                            "title": "Ocean AKS Virtual Node Group Template Import",
                            "description": "A default template object for used for import AKS to Ocean.\n",
                            "properties": {
                              "vmSizes": {
                                "type": "object",
                                "description": "The types of virtual machines that may or may not be a part of the Ocean cluster.\n",
                                "properties": {
                                  "whitelist": {
                                    "type": "array",
                                    "description": "VM types allowed in the Ocean cluster.\n",
                                    "items": {
                                      "type": "string",
                                      "example": "standard_ds2_v2"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T08:13:08.000Z",
                            "description": "A timestamp of the Ocean creation\n"
                          },
                          "updatedAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "example": "2021-03-17T15:06:13.000Z",
                            "description": "A timestamp of the latest Ocean update\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/aks/import/acd-12345abc"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1cluster/post/requestBody/content/application~1json/schema/allOf/0"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/cluster/{oceanClusterId}/detachVms": {
      "put": {
        "summary": "Detach VMs",
        "description": "Scale down specific virtual machines in Ocean cluster.\n",
        "operationId": "oceanAzureDetachVms",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1cluster~1%7BoceanClusterId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "vmsToDetach"
                ],
                "type": "object",
                "properties": {
                  "vmsToDetach": {
                    "type": "array",
                    "description": "Array of virtual machine names to detach.\n",
                    "items": {
                      "type": "string",
                      "example": "vm-0fbd69f960db"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean AKS Detach Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/cluster/o-12345abc/detachVms"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "detachedVms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-12345"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:cluster:detachVms"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/virtualNodeGroup": {
      "post": {
        "summary": "Create Virtual Node Group",
        "description": "Create a virtual node group.\n",
        "operationId": "oceanAKSVirtualNodeGroupCreate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup"
                            },
                            "method": {
                              "example": "POST"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "summary": "List Virtual Node Groups",
        "description": "List the configurations for all virtual node groups for the account/cluster.\n",
        "operationId": "oceanAKSVirtualNodeGroupList",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1k8s~1launchSpec/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/virtualNodeGroup/{virtualNodeGroupId}": {
      "get": {
        "summary": "Get Virtual Node Group",
        "description": "Get the configuration of a specified virtual node group.\n",
        "operationId": "oceanAKSVirtualNodeGroupGet",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "in": "path",
            "name": "virtualNodeGroupId",
            "example": "vng-12345abc",
            "description": "Ocean Virtual Node Group ID.\n",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup/vng-12345abc"
                            },
                            "method": {
                              "example": "GET"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "summary": "Update Virtual Node Group",
        "description": "All virtual node group parameters are updatable.\n",
        "operationId": "oceanAKSVirtualNodeGroupUpdate",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "virtualNodeGroup": {
                    "type": "object",
                    "title": "Ocean AKS Virtual Node Group",
                    "required": [
                      "name",
                      "oceanId"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "vng-12345abc",
                        "description": "Virtual node group ID.\n"
                      },
                      "name": {
                        "type": "string",
                        "example": "testVng",
                        "description": "Set name for the virtual node group.\n"
                      },
                      "oceanId": {
                        "type": "string",
                        "example": "o-13245abc",
                        "description": "The Ocean cluster ID.\n"
                      },
                      "resourceLimits": {
                        "type": "object",
                        "properties": {
                          "maxInstanceCount": {
                            "description": "Option to set a maximum number of instances per virtual node group.\\\nIf set, value must be greater than or equal to 0.\n",
                            "type": "integer",
                            "example": 5
                          }
                        }
                      },
                      "labels": {
                        "type": "array",
                        "description": "An array of labels to add to the virtual node group.\\\nCustom user labels only, no K8s built in labels or Spot internal labels.\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set label key.\\\nMay not be one of the following:\n* \"kubernetes.io/hostname\"\n* \"failure-domain.beta.kubernetes.io/zone\"\n* \"topology.kubernetes.io/zone\"\n* \"failure-domain.beta.kubernetes.io/region\"\n* \"topology.kubernetes.io/region\"\n* \"beta.kubernetes.io/instance-type\"\n* \"node.kubernetes.io/instance-type\"\n* \"beta.kubernetes.io/os\"\n* \"kubernetes.io/os\"\n* \"beta.kubernetes.io/arch\"\n* \"kubernetes.io/arch\"\n* \"spotinst.io/node-lifecycle\"\n* \"spotinst.io/gpu-type\"\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set label value\n"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "env",
                            "value": "test"
                          }
                        ]
                      },
                      "taints": {
                        "type": "array",
                        "description": "Add taints to virtual node group.\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Set taint key.\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Set taint value.\n"
                            },
                            "effect": {
                              "type": "string",
                              "description": "Set taint effect.\n",
                              "enum": [
                                "NoSchedule",
                                "PreferNoSchedule",
                                "NoExecute",
                                "PreferNoExecute"
                              ]
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "taintKey",
                            "value": "taintValue",
                            "effect": "NoSchedule"
                          }
                        ]
                      },
                      "autoScale": {
                        "type": "object",
                        "properties": {
                          "headrooms": {
                            "type": "array",
                            "description": "A List of headroom objects. Define custom headroom per virtual node group.\\\nA maximum of 30 objects is allowed.\\\nAt least one of: [cpuPerUnit, memoryPerUnit, gpuPerUnit] must be set.\n",
                            "items": {
                              "type": "object",
                              "required": [
                                "numOfUnits"
                              ],
                              "properties": {
                                "cpuPerUnit": {
                                  "type": "integer",
                                  "description": "Configure the number of CPUs to allocate for the headroom.\nCPUs are denoted in millicores, where 1000 millicores = 1 vCPU.\n",
                                  "example": 1000
                                },
                                "memoryPerUnit": {
                                  "type": "integer",
                                  "description": "Configure the amount of memory (MiB) to allocate the headroom.\n",
                                  "example": 2048
                                },
                                "gpuPerUnit": {
                                  "type": "integer",
                                  "description": "How many GPU cores should be allocated for headroom unit.\n",
                                  "example": 0
                                },
                                "numOfUnits": {
                                  "type": "integer",
                                  "description": "The number of headroom units to maintain, where each unit has the defined CPU, memory and GPU.\n",
                                  "example": 3
                                }
                              }
                            }
                          }
                        }
                      },
                      "launchSpecification": {
                        "type": "object",
                        "properties": {
                          "osDisk": {
                            "type": "object",
                            "required": [
                              "sizeGB"
                            ],
                            "description": "Specify OS disk specification other than default.\n",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The type of the OS disk.\n",
                                "enum": [
                                  "Standard_LRS",
                                  "Premium_LRS",
                                  "StandardSSD_LRS"
                                ],
                                "example": "Standard_LRS"
                              },
                              "sizeGB": {
                                "type": "integer",
                                "description": "The size of the OS disk in GB, Required if dataDisks is specified.\n",
                                "minimum": 1,
                                "maximum": 1023,
                                "example": 30
                              }
                            }
                          },
                          "tags": {
                            "type": "array",
                            "description": "A maximum of 10, unique, Key-Value pairs for VM tags in the virtual node group.\n",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tagKey": {
                                  "type": "string",
                                  "description": "Tag Key for Vms in the cluster.\n",
                                  "example": "env"
                                },
                                "tagValue": {
                                  "type": "string",
                                  "description": "Tag Value for VMs in the cluster.\n",
                                  "example": "staging"
                                }
                              }
                            }
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "readOnly": true,
                        "format": "date-time",
                        "example": "2021-03-17T08:13:08.000Z",
                        "description": "A timestamp of the virtual node group creation.\n"
                      },
                      "updatedAt": {
                        "type": "string",
                        "readOnly": true,
                        "format": "date-time",
                        "example": "2021-03-17T15:06:13.000Z",
                        "description": "A timestamp of the latest virtual node group update.\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup/vng-12345abc"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/put/requestBody/content/application~1json/schema"
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "summary": "Delete Virtual Node Group",
        "description": "Delete a specified virtual node group in an Ocean cluster.\n",
        "operationId": "oceanAKSVirtualNodeGroupDelete",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/get/parameters/1"
          }
        ],
        "responses": {
          "200": {
            "description": "Ocean AKS Delete Cluster Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1azure~1compute~1vm~1signal/post/responses/200/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup/vng-12345abc"
                            },
                            "method": {
                              "example": "DELETE"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/azure/k8s/virtualNodeGroup/{virtualNodeGroupId}/launchVms": {
      "put": {
        "summary": "Launch VMs",
        "description": "Launch VMs in a Virtual Node Group.\n",
        "operationId": "oceanAKSVirtualNodeGroupLaunchVms",
        "tags": [
          "Ocean AKS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1azure~1k8s~1virtualNodeGroup~1%7BvirtualNodeGroupId%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "launchRequest": {
                    "type": "object",
                    "title": "Ocean AKS Virtual Node Group Launch Request",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "description": "The amount of VMs to launch.\n",
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/azure/k8s/virtualNodeGroup/vng-12345abc/launchVms"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "vms": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "vmName": {
                                          "type": "string",
                                          "example": "vm-001c1268d5bf"
                                        },
                                        "vmSize": {
                                          "type": "string",
                                          "example": "Standard_DS2_v2"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:azure:k8s:virtualNodeGroup:launchVms"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/k8s/launchSpec/{launchSpecId}/launchNodes": {
      "put": {
        "summary": "Launch Nodes In VNG",
        "description": "Launch nodes in Virtual Node Group.\n",
        "operationId": "OceanAWSK8sLaunchSpecLaunchNodes",
        "tags": [
          "Ocean AWS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "launchRequest": {
                    "type": "object",
                    "title": "Ocean AWS Virtual Node Group Launch Request",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "description": "The amount of nodes to launch.\n",
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Virtual Node Group Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/k8s/launchSpec/ols-12345abc/launchNodes"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "launchSpecId": {
                              "type": "string",
                              "example": "ols-f73821bc"
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "example": "i-08d53d2a1dcede08f",
                                          "description": "Id of the launched instance\n"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "example": "us-west-2b",
                                          "description": "The availability zone the instance launched in\n"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "example": "c3.xlarge",
                                          "description": "Type of the launched instance\n"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:k8s:launchSpec:launchNodes"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ocean/aws/ecs/launchSpec/{launchSpecId}/launchContainerInstances": {
      "put": {
        "summary": "Launch Container Instances In Launch Spec",
        "description": "Launch container instances in launch spec.\n",
        "operationId": "OceanAWSEcsLaunchSpecLaunchNodes",
        "tags": [
          "Ocean ECS"
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1azure~1costs/get/parameters/0"
          },
          {
            "$ref": "#/paths/~1ocean~1aws~1ecs~1launchSpec~1%7BOCEAN_LAUNCH_SPEC_ID%7D/get/parameters/1"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "launchRequest": {
                    "type": "object",
                    "title": "Ocean ECS Launch Spec Launch Request",
                    "required": [
                      "amount"
                    ],
                    "properties": {
                      "amount": {
                        "description": "The amount of container instances to launch.\n",
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ocean Launch Spec Launch Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/paths/~1compute~1azure~1group~1%7BgroupId%7D~1status/components/responses/groupStatus/content/application~1json/schema/allOf/0"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "request": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "example": "/ocean/aws/ecs/launchSpec/ols-12345abc/launchContainerInstances"
                            },
                            "method": {
                              "example": "PUT"
                            }
                          }
                        },
                        "response": {
                          "type": "object",
                          "properties": {
                            "launchSpecId": {
                              "type": "string",
                              "example": "ols-f73821bc"
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "newInstances": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "instanceId": {
                                          "type": "string",
                                          "example": "i-08d53d2a1dcede08f",
                                          "description": "Id of the launched instance\n"
                                        },
                                        "availabilityZone": {
                                          "type": "string",
                                          "example": "us-west-2b",
                                          "description": "The availability zone the instance launched in\n"
                                        },
                                        "instanceType": {
                                          "type": "string",
                                          "example": "c3.xlarge",
                                          "description": "Type of the launched instance\n"
                                        },
                                        "lifeCycle": {
                                          "type": "string",
                                          "example": "spot",
                                          "description": "Spot or On Demand\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "kind": {
                              "example": "spotinst:ocean:aws:ecs:launchSpec:launchContainerInstances"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}
